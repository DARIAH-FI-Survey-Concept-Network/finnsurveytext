[{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 finnsurveytext authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"overview-of-finnsurveytext","dir":"Articles","previous_headings":"","what":"Overview of finnsurveytext","title":"Overview-PackageTutorial","text":"tutorial aims provide simple overview included within finnsurveytext package teach use main functions included package. table shows functions included package. functions bolded main functions outlined sections .","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"install-and-load-package","dir":"Articles","previous_headings":"","what":"0. Install and Load Package","title":"Overview-PackageTutorial","text":"First, finnsurveytext package needs installed R environment loaded environment. may also want load survey package want use svydesign object data /weights.","code":"library(finnsurveytext) library(survey)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"1. Data Preparation","title":"Overview-PackageTutorial","text":"data preparation functions used take raw survey data (dataframe svydesign object within R environment) convert standardised format ready analysis. functions remaining sections require data pre-formatted format. (learn move format use, see Universal Dependencies Project.)","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"option-1-data-is-in-a-dataframe","dir":"Articles","previous_headings":"1. Data Preparation","what":"Option 1: Data is in a dataframe","title":"Overview-PackageTutorial","text":"package comes sample data. demonstration, use dev_coop. raw data looks like : look question 11_3 (responses ‘’Jatka lausetta: Maailman kolme suurinta ongelmaa ovat… (Avokysymys)’) open-ended survey question. also want include survey weights (‘paino’ column) bring gender region columns can use values compare groups. main function fst_prepare() can run function follows: Summary components data dataframe interest. case, using data comes package called “dev_coop”. question name column data contains open-ended survey question. example, ’re considering “q11_3” id id column data, “fsd_id” function also requires language model available udpipe, case using default Finnish Treebank, model = \"ftb\". (two options Finnish language model; option Turku Dependency Treebank “tdt”.) default remove stopwords “nltk” stopword_list example. (find relevant lists Finnish stopwords, can run fst_find_stopwords() function.) Punctuation also removed data whenever stopwords removed. default language “fi”. two-letter ISO code language stopword list. Optionally, can add weights column formatted data. weights stored raw data “paino”. Optionally, can add columns formatted data (use comparison functions). include “gender” “region” columns reason results CoNLL-U format stored local environment df. (manual manual_list used want provide list stopwords remove data.) formatted data looks like :","code":"# FUNCTION DEFINITION fst_prepare <- function(data,                         question,                         id,                         model = \"ftb\",                         stopword_list = \"nltk\",                         language = \"fi\"                         weights = NULL,                         add_cols = NULL,                         manual = FALSE,                         manual_list = \"\") df <- fst_prepare(data = dev_coop,                   question = 'q11_3',                    id = 'fsd_id',                    weights = 'paino',                   add_cols = c('gender', 'region')                   )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"option-2-data-is-in-a-svydesign-object","dir":"Articles","previous_headings":"1. Data Preparation","what":"Option 2: Data is in a svydesign object","title":"Overview-PackageTutorial","text":"option get data svydesign object survey package. survey package popular package used analysing surveys. main function fst_prepare_svydesign() can run function follows: differences previous function one : svydesign svydesign object. case, one called “svy_dev” svydesign object component called “prob” contains inverse weights. Therefore, use setting use_weights = TRUE formatted data looks like (look similar formatted data!):","code":"# FUNCTION DEFINITION fst_prepare_svydesign <- function(svydesign,                                   question,                                   id,                                   model = \"ftb\",                                   stopword_list = \"nltk\",                                   language = \"fi\"                                   use_weights = TRUE,                                   add_cols = NULL,                                   manual = FALSE,                                   manual_list = \"\") df2 <- fst_prepare_svydesign(svydesign = svy_dev,                             question = 'q11_3',                              id = 'fsd_id',                              use_weights = TRUE,                             add_cols = c('gender', 'region')                             )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"data-exploration","dir":"Articles","previous_headings":"","what":"2. Data Exploration","title":"Overview-PackageTutorial","text":"Now formatted data, can begin data exploration. functions used create summary tables find common themes survey responses.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"summary-tables","dir":"Articles","previous_headings":"2. Data Exploration","what":"Summary Tables","title":"Overview-PackageTutorial","text":"First, let’s create summaries using fst_summarise, fst_pos fst_length_summary functions defined follows: Summary components data formatted data. desc optional name responses summarised, provided default “respondents”. incl_sentences optional boolean whether also summarise sentence length (addition word length), provided default TRUE. Hence, functions run sample data follows:","code":"# FUNCTION DEFINITIONS fst_summarise <- function(data,                            desc = \"All respondents\")   fst_pos <- function(data)     fst_length_summary <- function(data,                                desc = \"All respondents\",                                incl_sentences = TRUE) fst_summarise(df) ##     Description Respondents No Response Proportion Total Words Unique Words ## 1 All responses         945          25       0.97        4192         1132 ##   Unique Lemmas ## 1           994 fst_pos(df) ##     UPOS                  UPOS_Name Count Proportion ## 1    ADJ                  adjective   389      0.093 ## 2    ADP                 adposition    24      0.006 ## 3    ADV                     adverb    64      0.015 ## 4    AUX                  auxiliary     3      0.001 ## 5  CCONJ   coordinating conjunction     3      0.001 ## 6    DET                 determiner    28      0.007 ## 7   INTJ               interjection     2      0.000 ## 8   NOUN                       noun  3311      0.790 ## 9    NUM                    numeral     5      0.001 ## 10  PART                   particle    29      0.007 ## 11  PRON                    pronoun    12      0.003 ## 12 PROPN                proper noun    31      0.007 ## 13 PUNCT                punctuation     0      0.000 ## 14 SCONJ  subordinating conjunction     0      0.000 ## 15   SYM                     symbol     1      0.000 ## 16  VERB                       verb   278      0.066 ## 17     X                      other    12      0.003 fst_length_summary(df) ## # A tibble: 2 × 8 ##   Description              Respondents  Mean Minimum    Q1 Median    Q3 Maximum ##   <chr>                          <int> <dbl>   <int> <dbl>  <dbl> <dbl>   <int> ## 1 All responses- Words             920  5.52       1     4      5     6      32 ## 2 All responses- Sentences         920  1.01       1     1      1     1       3"},{"path":[]},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"wordclouds","dir":"Articles","previous_headings":"2. Data Exploration > Identification of frequent words and phrases","what":"Wordclouds","title":"Overview-PackageTutorial","text":"first frequent words visualisations wordcloud comes wordcloud package. defined follows: Summary components data formatted data. pos_filter optional list POS tags inclusion wordcloud. default NULL. max maximum number words display, default 100. , options weighting words cloud. default include weights. use_svydesign_weights set TRUE want use weights within svydesign object. id required weights coming svydesign object svydesign object examples creating wordclouds:","code":"# FUNCTION DEFINITION fst_wordcloud <- function(data,                           pos_filter = NULL,                           max = 100,                           use_svydesign_weights = FALSE,                           id = \"\",                           svydesign = NULL,                           use_column_weights = FALSE) fst_wordcloud(df) # We can only get weights from svydesign if they are NOT already in our formatted data. Hence we remove them for this demonstration! df2$weight <- NULL fst_wordcloud(df2,                pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),               max=100,                use_svydesign_weights = TRUE,                id = 'fsd_id',                svydesign = svy_dev)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"n-gram-plots","dir":"Articles","previous_headings":"2. Data Exploration > Identification of frequent words and phrases","what":"N-gram plots","title":"Overview-PackageTutorial","text":", functions identify plot frequent words n-grams (sets n words order). Summary components data formatted data. number number top words/ngrams display ngrams type n-grams, default 1. norm optional method normalising data. Valid settings “number_words” (number words responses), “number_resp” (number responses), NULL (raw count returned, default, also used weights applied). pos_filter optional list POS tags inclusion. default NULL. strict whether strictly cut-number (ties alphabetically ordered). default value TRUE. name optional “name” plot add title, default NULL. , options weighting words plot. , default include weights. use_svydesign_weights set TRUE want use weights within svydesign object. id required weights coming svydesign object svydesign object use_svydesign_weights set TRUE want use weights weight column set-data formatting.    (fst_freq_table() fst_ngrams_table() can used instead create tables top words.)","code":"# FUNCTION DEFINITIONS fst_freq <- function(data,                      number = 10,                      norm = NULL,                      pos_filter = NULL,                      strict = TRUE,                      name = NULL,                      use_svydesign_weights = FALSE,                      id = \"\",                      svydesign = NULL,                      use_column_weights = FALSE)    fst_ngrams <- function(data,                        number = 10,                        ngrams = 1,                        norm = NULL,                        pos_filter = NULL,                        strict = TRUE,                        name = NULL,                        use_svydesign_weights = FALSE,                        id = \"\",                        svydesign = NULL,                        use_column_weights = FALSE) fst_freq(df) fst_ngrams(df,             number = 9,             ngrams = 2,             strict = FALSE,            use_column_weights = TRUE) fst_freq(df,          number = 5,           strict = FALSE,) fst_freq_table(df, number = 15, strict = FALSE) ##                 words occurrence ## 1             köyhyys        258 ## 2           nälänhätä        239 ## 3                sota        231 ## 4      ilmastonmuutos        141 ## 5               puute        117 ## 6             ihminen        105 ## 7                vesi         98 ## 8        epätasa-arvo         87 ## 9              ahneus         84 ## 10              nälkä         81 ## 11             puhdas         75 ## 12            sairaus         59 ## 13          itsekkyys         58 ## 14       väestönkasvu         48 ## 15 välinpitämättömyys         47"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"concept-network","dir":"Articles","previous_headings":"","what":"3. Concept Network","title":"Overview-PackageTutorial","text":"finnsurveytext package currently contains first iteration function plots concept network. plots visualise keywords identified TextRank algorithm maps co-occurrences terms. Vertices represent words vertex size indicating word importance co-occurrence words shown edges edge thickness indicating number co-occurrences. Word importance determined recursively (unsupervised TextRank algorithm, graph-based ranking model text processing) words get weight based many words co-occur weight co-occurring words. concept network functions take search terms input user algorithm suggests words related input terms co-occurrence. input terms can identified functions package (fst_cn_search() fst_freq_table()) analysis separately conducted user. concept network function can used identify concepts individual words group co-occurring words, may contain single ’concept’ whose component words investigated identified within single network plot. utilise TextRank algorithm finnsurveytext, use textrank package. information package, please see documentation. package implements TextRank PageRank algorithms. (PageRank algorithm Google uses rank webpages.) can read underlying TextRank algorithm PageRank algorithm . main concept network function fst_concept_network(). defined follows: Summary components data formatted data. concepts concept words around network created. threshold minimum number occurrences threshold ‘edge’ searched term word, default NULL. Note, threshold applied normalisation. norm optional method normalising data. Valid settings “number_words” (number words responses), “number_resp” (number responses), NULL (raw count returned, default, also used weights applied). pos_filter optional list POS tags inclusion. default NULL. title optional title plot, default NULL generic title (“TextRank extracted keyword occurrences”) used. example, can create following concept network plots:","code":"# FUNCTION DEFINITIONS fst_concept_network <- function(data,                                 concepts,                                 threshold = NULL,                                 norm = NULL,                                 pos_filter = NULL,                                 title = NULL) fst_concept_network(df,                      concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\",                      )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"comparison-functions","dir":"Articles","previous_headings":"","what":"4. Comparison Functions","title":"Overview-PackageTutorial","text":"Recall preprocessed data, included two additional columns, gender region, allow comparison respondents based values. counterpart comparison functions functions shown . comparison summary tables defined follows: Summary Components data formatted data. field column data used splitting groups can choose whether include exclude surveys response splitting column setting exclude_nulls. default value FALSE. rename_nulls fill empty values exclude_nulls = FALSE. Let’s compare responses based region respondent: ngrams comparison functions defined similarly (additional new values): new components : unique_colour chosen differentiate values unique one group respondents, default “indianred” title_size subtitle_size set , may need change default values group names long many groups. ngrams, let’s compare respondents gender.   comparison cloud extends wordcloud concept. comparison cloud compares relative frequency term used two documents. cloud shows words occur regularly responses specific type respondent. information comparison clouds, can read documentation. comparison cloud defined follows, settings defined previous functions: Thus, can create comparison clouds:  Finally comparison concept network following components familiar previous functions: run comparison concept network follows:  information finnsurveytext functions, see package website documentation available CRAN.","code":"fst_pos_compare <- function(data,                             field,                             exclude_nulls = FALSE,                             rename_nulls = 'null_data')  fst_summarise_compare <- function(data,                                   field,                                   exclude_nulls = FALSE,                                   rename_nulls = 'null_data')  fst_length_compare <- function(data,                                field,                                incl_sentences = TRUE,                                exclude_nulls = FALSE,                                rename_nulls = 'null_data') knitr::kable(fst_pos_compare(df, 'region')) knitr::kable(fst_summarise_compare(df, 'region')) knitr::kable(fst_length_compare(df, 'region')) # FUNCTION DEFINITIONS fst_freq_compare <- function(data,                              field,                              number = 10,                              norm = NULL,                              pos_filter = NULL,                              strict = TRUE,                              use_svydesign_weights = FALSE,                              id = \"\",                              svydesign = NULL,                              use_column_weights = FALSE,                              exclude_nulls = FALSE,                              rename_nulls = 'null_data',                              unique_colour = \"indianred\",                              title_size = 20,                              subtitle_size = 15)   fst_ngrams_compare <- function(data,                               field,                               number = 10,                               ngrams = 1,                               norm = NULL,                               pos_filter = NULL,                               strict = TRUE,                               use_svydesign_weights = FALSE,                               id = \"\",                               svydesign = NULL,                               use_column_weights = FALSE,                               exclude_nulls = FALSE,                               rename_nulls = 'null_data',                               unique_colour = \"indianred\",                               title_size = 20,                               subtitle_size = 15) fst_freq_compare(df,                   'gender',                   use_column_weights = TRUE,                  exclude_nulls = TRUE) fst_ngrams_compare(df,                     'gender',                     ngrams = 2,                     use_column_weights = TRUE,                     exclude_nulls = TRUE) # FUNCTION DEFINITION fst_comparison_cloud <- function(data,                                  field,                                  pos_filter = NULL,                                  norm = NULL,                                  max = 100,                                  use_svydesign_weights = FALSE,                                  id = \"\",                                  svydesign = NULL,                                  use_column_weights = FALSE,                                  exclude_nulls = FALSE,                                  rename_nulls = \"null_data\") fst_comparison_cloud(df, 'gender', max = 40, use_column_weights = TRUE, exclude_nulls = TRUE) # FUNCTION DEFINITION fst_concept_network_compare <- function(data,                                         concepts,                                         field,                                         norm = NULL,                                         threshold = NULL,                                         pos_filter = NULL,                                         exclude_nulls = FALSE,                                         rename_nulls = 'null_data',                                         title_size = 20,                                         subtitle_size = 15) fst_concept_network_compare(df,                              concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\",                              'gender',                             exclude_nulls = TRUE                             )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Overview-PackageTutorial","text":"package comes sample data two Finnish surveys obtained Finnish Social Science Data Archive survey English available GESIS:","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"child-barometer-data","dir":"Articles","previous_headings":"Data","what":"1. Child Barometer Data","title":"Overview-PackageTutorial","text":"Source: FSD3134 Lapsibarometri 2016 Question: q7 ‘Kertoisitko, mitä sinun mielestäsi kiusaaminen ? (Avokysymys)’ Licence: () openly available users without registration (CC 4.0). Link Data: https://urn.fi/urn:nbn:fi:fsd:T-FSD3134","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"development-cooperation-data","dir":"Articles","previous_headings":"Data","what":"2. Development Cooperation Data","title":"Overview-PackageTutorial","text":"Source: FSD2821 Nuorten ajatuksia kehitysyhteistyöstä 2012 Questions: q11_1 ‘Jatka lausetta: Kehitysmaa maa, jossa… (Avokysymys)’, q11_2 ‘Jatka lausetta: Kehitysyhteistyö toimintaa, jossa… (Avokysymys)’, q11_3 ‘Jatka lausetta: Maailman kolme suurinta ongelmaa ovat… (Avokysymys)’ Licence: () openly available users without registration (CC 4.0). Link Data: https://urn.fi/urn:nbn:fi:fsd:T-FSD2821","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/Overview-PackageTutorial.html","id":"patient-joe-open-ended-question","dir":"Articles","previous_headings":"Data","what":"3. Patient Joe (open-ended question)","title":"Overview-PackageTutorial","text":"Source: GESIS – Leibniz Institute Social Sciences Open-ended question: ‘Joe’s doctor told need return two weeks find whether condition improved. Joe asked receptionist appointment, told month next available appointment. Joe ?’ Licence: CC 4.0: Attribution Link Data: https://doi.org/10.7802/2474","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/ReadMe.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"ReadMe","text":"DARIAH-FI one two components FIN-CLARIAH research infrastructure project Social Sciences Humanities (SSH) Finland. DARIAH-FI involves Finnish universities research SSH. first version package, finnsurveytext, output WP3.3 DARIAH-FI. joint work package Tampere University, University Eastern Finland, University Jyvaskyla University Helsinki objective “better use unstructured textual data context Finnish surveys.” second release output WP4.1.6. main updates release : integration survey package allowing svydesign objects inputs inclusion survey response weights within tables plots simplification splitting data groups within ‘comparison functions’ enable use package multiple languages (just Finnish!)","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/ReadMe.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"ReadMe","text":"Open-ended questions important challenging way obtain informative data surveys. Open-ended question data usually requires extra time investment (Fielding et al., 2013), open-ended questions particularly useful researchers want constrain respondents’ answers pre-specified selections. Open-ended questions allow respondents provide diverse answers based experience, answers probably never thought researchers. (& Schonlau, 2021.) ’s limited support conducting qualitative analysis Finnish open-ended survey responses many researchers confident analysing responses closed questions within surveys. package aims provide useful user friendly set tools social science researchers able analyse understand responses open-ended questions within surveys.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/ReadMe.html","id":"components","dir":"Articles","previous_headings":"","what":"Components","title":"ReadMe","text":"5 sets functions included finnsurveytext package. : functions annotate survey data useful format (CoNLL-U) analysis. ‘main’ function within set, fst_prepare() combines preparation functions can run single function prepare data analysis. second set preparation functions enables use svydesign object input. file contains number functions can used exploratory data analysis summary tables, plotting frequently occurring words phrases, creating wordclouds. concept network functions single network file. concept network one way visualising data allows interpretation. concept network function uses TextRank algorithm graph-based ranking model text processing. Vertices represent words co-occurrence words shown edges. Word importance determined recursively words get weight based many words co-occur weight co-occurring words. created partner functions data exploration functions compare different sets data. comparison functions can used compare different cohorts survey respondents based responses closed questions gender, education level, location, age, etc. Similarly, script functions comparing respondent cohort responses concept networks.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/ReadMe.html","id":"function-demos-and-tutorials","dir":"Articles","previous_headings":"","what":"Function Demos and Tutorials","title":"ReadMe","text":"Tutorials accompanying R scripts can found ‘Articles’ tab within website. tutorials use sample data outlined . BETA demo package can also launched running function finnsurveytext::runDemo() within R.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/ReadMe.html","id":"sample-data","dir":"Articles","previous_headings":"","what":"Sample Data","title":"ReadMe","text":"repository also contains sample data can used demonstrate learn functionality finnsurveytext sample data comes 3 surveys can found ‘data’ folder. raw data (just relevant open-ended questions) data/bullying_data.rda, data/dev_data.rda, data/english_sample_survey.rda. data folder also contains examples data preparation functions applied split sample cohort groups. raw data can also downloaded Finnish Social Science Data Archive. Source: FSD3134 Lapsibarometri 2016 Open-ended questions: q3 ‘Missä asioissa olet hyvä? (Avokysymys)’, q7 ‘Kertoisitko, mitä sinun mielestäsi kiusaaminen ? (Avokysymys)’, q11 ‘Mikä tekee sinut iloiseksi? (Avokysymys)’ Licence: () openly available users without registration (CC 4.0). Link Data: https://urn.fi/urn:nbn:fi:fsd:T-FSD3134 Source: FSD2821 Nuorten ajatuksia kehitysyhteistyöstä 2012 Open-ended questions: q11_1 ‘Jatka lausetta: Kehitysmaa maa, jossa… (Avokysymys)’, q11_2 ‘Jatka lausetta: Kehitysyhteistyö toimintaa, jossa… (Avokysymys)’, q11_3’ Jatka lausetta: Maailman kolme suurinta ongelmaa ovat… (Avokysymys)’ Licence: () openly available users without registration (CC 4.0). Link Data: https://urn.fi/urn:nbn:fi:fsd:T-FSD2821 Source: GESIS – Leibniz Institute Social Sciences Open-ended question: ‘Joe’s doctor told need return two weeks find whether condition improved. Joe asked receptionist appointment, told month next available appointment. Joe ?’ Licence: CC 4.0: Attribution Link Data: https://doi.org/10.7802/2474","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/ReadMe.html","id":"installation-and-license","dir":"Articles","previous_headings":"","what":"Installation and License","title":"ReadMe","text":"package available MIT license. released version finnsurveytext can installed CRAN: install.packages(“finnsurveytext”)","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/ReadMe.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"ReadMe","text":"Fielding, J., Fielding, N., & Hughes, G. (2013). Opening open-ended survey data using qualitative software. Quality & Quantity, 47(6), 3261–3276. https://doi.org/10.1007/s11135-012-9716-1. Finnish Children Youth Foundation: Young People’s Views Development Cooperation 2012 [dataset]. Version 2.0 (2019-01-22). Finnish Social Science Data Archive [distributor]. https://urn.fi/urn:nbn:fi:fsd:T-FSD2821 , Z., & Schonlau, M. (2021). Coding Text Answers Open-ended Questions: Human Coders Statistical Learning Algorithms Make Similar Mistakes. Methods, Data, Analyses, 15(1), Article 1. https://doi.org/10.12758/mda.2020.10. Schonlau, Matthias (2022). Patient Joe (open-ended question). GESIS, Cologne. Data File Version 1.0.0, https://doi.org/10.7802/2474. Office Ombudsman Children: Child Barometer 2016 [dataset]. Version 1.0 (2016-12-09). Finnish Social Science Data Archive [distributor]. https://urn.fi/urn:nbn:fi:fsd:T-FSD3134","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-AnalysingOtherLanguages.html","id":"how-to-use-finnsurveytext-in-another-language","dir":"Articles > Web_only","previous_headings":"","what":"How to Use finnsurveytext in another language!","title":"Extra-AnalysingOtherLanguages","text":"Despite package’s name, finnsurveytext can used analyse surveys LOTS different languages. vignette aims explain use finnsurveytext another language little additional effort possible. reason finnsurveytext can used languages packages employs process raw survey data work multiple languages! developers udpipe stopwords packages thank! survey English provided package called english_sample_survey use demonstrate use package language Finnish.","code":"knitr::kable(head(english_sample_survey, 5))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-AnalysingOtherLanguages.html","id":"essential-your-language-has-a-language-model-available-for-udpipe","dir":"Articles > Web_only","previous_headings":"","what":"1. Essential: Your language has a language model available for udpipe","title":"Extra-AnalysingOtherLanguages","text":"udpipe package available CRAN. relevant udpipe function use udpipe::udpipe_download_model. can see list available models udpipe manual. time writing vignette, : afrikaans-afribooms, ancient_greek-perseus, ancient_greek-proiel, arabic-padt, armenian-armtdp, basque-bdt, belarusian-hse, bulgarian-btb, buryat-bdt, catalan-ancora, chinese-gsd, chinese-gsdsimp, coptic-scriptorium, croatian-set, czech-cac, czech-cltt, czech-fictree, czech-pdt, danish-ddt, dutch-alpino, dutch-lassysmall, english-ewt, english-gum, english-lines, english-partut, estonian-edt, finnish-ftb, finnish-tdt, french-gsd, french-partut, french-sequoia, french-spoken, galician-ctg, galician-treegal, german-gsd, german-hdt, gothic-proiel, greek-gdt, hebrew-htb, hindi-hdtb, hungarian-szeged, indonesian-gsd, irish-idt, italian-isdt, italian-partut, italian-postwita, italian-twittiro, japanese-gsd, kazakh-ktb, korean-gsd, korean-kaist, kurmanji-mg, latin-ittb, latin-perseus, latin-proiel, latvian-lvtb, lithuanian-hse, maltese-mudt, marathi-ufal, north_sami-giella, norwegian-bokmaal, norwegian-nynorsk, norwegian-nynorsklia, old_church_slavonic-proiel, old_french-srcmf, persian-seraji, polish-lfg, polish-sz, portuguese-bosque, portuguese-br, portuguese-gsd, romanian-nonstandard, romanian-rrt, russian-gsd, russian-syntagrus, russian-taiga, sanskrit-ufal, scottish_gaelic-arcosg, serbian-set, slovak-snk, slovenian-ssj, slovenian-sst, spanish-ancora, spanish-gsd, swedish-lines, swedish-talbanken, tamil-ttb, telugu-mtg, turkish-imst, ukrainian-iu, upper_sorbian-ufal, urdu-udtb, uyghur-udt, vietnamese-vtb Alternatively, can find list available models running fst_print_available_models(). providing search term, list filtered models containing language:","code":"fst_print_available_models() #>   [1] \"afrikaans-afribooms\"        \"ancient_greek-perseus\"      #>   [3] \"ancient_greek-proiel\"       \"arabic-padt\"                #>   [5] \"armenian-armtdp\"            \"basque-bdt\"                 #>   [7] \"belarusian-hse\"             \"bulgarian-btb\"              #>   [9] \"buryat-bdt\"                 \"catalan-ancora\"             #>  [11] \"chinese-gsd\"                \"chinese-gsdsimp\"            #>  [13] \"classical_chinese-kyoto\"    \"coptic-scriptorium\"         #>  [15] \"croatian-set\"               \"czech-cac\"                  #>  [17] \"czech-cltt\"                 \"czech-fictree\"              #>  [19] \"czech-pdt\"                  \"danish-ddt\"                 #>  [21] \"dutch-alpino\"               \"dutch-lassysmall\"           #>  [23] \"english-ewt\"                \"english-gum\"                #>  [25] \"english-lines\"              \"english-partut\"             #>  [27] \"estonian-edt\"               \"estonian-ewt\"               #>  [29] \"finnish-ftb\"                \"finnish-tdt\"                #>  [31] \"french-gsd\"                 \"french-partut\"              #>  [33] \"french-sequoia\"             \"french-spoken\"              #>  [35] \"galician-ctg\"               \"galician-treegal\"           #>  [37] \"german-gsd\"                 \"german-hdt\"                 #>  [39] \"gothic-proiel\"              \"greek-gdt\"                  #>  [41] \"hebrew-htb\"                 \"hindi-hdtb\"                 #>  [43] \"hungarian-szeged\"           \"indonesian-gsd\"             #>  [45] \"irish-idt\"                  \"italian-isdt\"               #>  [47] \"italian-partut\"             \"italian-postwita\"           #>  [49] \"italian-twittiro\"           \"italian-vit\"                #>  [51] \"japanese-gsd\"               \"kazakh-ktb\"                 #>  [53] \"korean-gsd\"                 \"korean-kaist\"               #>  [55] \"kurmanji-mg\"                \"latin-ittb\"                 #>  [57] \"latin-perseus\"              \"latin-proiel\"               #>  [59] \"latvian-lvtb\"               \"lithuanian-alksnis\"         #>  [61] \"lithuanian-hse\"             \"maltese-mudt\"               #>  [63] \"marathi-ufal\"               \"north_sami-giella\"          #>  [65] \"norwegian-bokmaal\"          \"norwegian-nynorsk\"          #>  [67] \"norwegian-nynorsklia\"       \"old_church_slavonic-proiel\" #>  [69] \"old_french-srcmf\"           \"old_russian-torot\"          #>  [71] \"persian-seraji\"             \"polish-lfg\"                 #>  [73] \"polish-pdb\"                 \"polish-sz\"                  #>  [75] \"portuguese-bosque\"          \"portuguese-br\"              #>  [77] \"portuguese-gsd\"             \"romanian-nonstandard\"       #>  [79] \"romanian-rrt\"               \"russian-gsd\"                #>  [81] \"russian-syntagrus\"          \"russian-taiga\"              #>  [83] \"sanskrit-ufal\"              \"scottish_gaelic-arcosg\"     #>  [85] \"serbian-set\"                \"slovak-snk\"                 #>  [87] \"slovenian-ssj\"              \"slovenian-sst\"              #>  [89] \"spanish-ancora\"             \"spanish-gsd\"                #>  [91] \"swedish-lines\"              \"swedish-talbanken\"          #>  [93] \"tamil-ttb\"                  \"telugu-mtg\"                 #>  [95] \"turkish-imst\"               \"ukrainian-iu\"               #>  [97] \"upper_sorbian-ufal\"         \"urdu-udtb\"                  #>  [99] \"uyghur-udt\"                 \"vietnamese-vtb\"             #> [101] \"wolof-wtb\"  fst_print_available_models(search = 'estonian') #> [1] \"estonian-edt\" \"estonian-ewt\"  fst_print_available_models('sami') #> [1] \"north_sami-giella\""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-AnalysingOtherLanguages.html","id":"how-to-use","dir":"Articles > Web_only","previous_headings":"1. Essential: Your language has a language model available for udpipe","what":"How to use:","title":"Extra-AnalysingOtherLanguages","text":"relevant model, eg “swedish-talbanken”, used model input fst_format() fst_prepare()","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-AnalysingOtherLanguages.html","id":"demonstration","dir":"Articles > Web_only","previous_headings":"1. Essential: Your language has a language model available for udpipe > How to use:","what":"Demonstration:","title":"Extra-AnalysingOtherLanguages","text":"find English model format English data :","code":"fst_print_available_models(\"english\") #> [1] \"english-ewt\"    \"english-gum\"    \"english-lines\"  \"english-partut\"  en_df <- fst_format(data = english_sample_survey,            question = 'text',             id = 'id',             model = 'english-ewt'            ) #> Downloading udpipe model from https://raw.githubusercontent.com/jwijffels/udpipe.models.ud.2.5/master/inst/udpipe-ud-2.5-191206/english-ewt-ud-2.5-191206.udpipe to /home/runner/work/finnsurveytext/finnsurveytext/vignettes/web_only/english-ewt-ud-2.5-191206.udpipe #>  - This model has been trained on version 2.5 of data from https://universaldependencies.org #>  - The model is distributed under the CC-BY-SA-NC license: https://creativecommons.org/licenses/by-nc-sa/4.0 #>  - Visit https://github.com/jwijffels/udpipe.models.ud.2.5 for model license details. #>  - For a list of all models and their licenses (most models you can download with this package have either a CC-BY-SA or a CC-BY-SA-NC license) read the documentation at ?udpipe_download_model. For building your own models: visit the documentation by typing vignette('udpipe-train', package = 'udpipe') #> Downloading finished, model stored at '/home/runner/work/finnsurveytext/finnsurveytext/vignettes/web_only/english-ewt-ud-2.5-191206.udpipe'  knitr::kable(head(en_df, 5))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-AnalysingOtherLanguages.html","id":"recommended-your-language-has-a-stopwords-list-available-for-stopwords-package","dir":"Articles > Web_only","previous_headings":"","what":"2. Recommended: Your language has a stopwords list available for stopwords package","title":"Extra-AnalysingOtherLanguages","text":"stopwords package available CRAN. relevant stopwords functions stopwords::stopwords, stopwords::stopwords_getsources stopwords::stopwords_getlanguages. recommend first identify two-letter ISO code language using. can see list available sources languages stopwords manual running ‘get sources’ ‘get languages’ functions: Alternatively, can use function fst_find_stopwords simplify process. function provides table lists available stopwords package language provides contents comparison (multiple options!). run , need two-letter ISO language code:","code":"stopwords_getsources() #> [1] \"snowball\"      \"stopwords-iso\" \"misc\"          \"smart\"         #> [5] \"marimo\"        \"ancient\"       \"nltk\"          \"perseus\" stopwords::stopwords_getlanguages(source = 'nltk') #>  [1] \"ar\" \"az\" \"da\" \"nl\" \"en\" \"fi\" \"fr\" \"de\" \"el\" \"hu\" \"id\" \"it\" \"kk\" \"ne\" \"no\" #> [16] \"pt\" \"ro\" \"ru\" \"sl\" \"es\" \"sv\" \"tg\" \"tr\" stopwords('da', source = 'nltk') #>  [1] \"og\"     \"i\"      \"jeg\"    \"det\"    \"at\"     \"en\"     \"den\"    \"til\"    #>  [9] \"er\"     \"som\"    \"på\"     \"de\"     \"med\"    \"han\"    \"af\"     \"for\"    #> [17] \"ikke\"   \"der\"    \"var\"    \"mig\"    \"sig\"    \"men\"    \"et\"     \"har\"    #> [25] \"om\"     \"vi\"     \"min\"    \"havde\"  \"ham\"    \"hun\"    \"nu\"     \"over\"   #> [33] \"da\"     \"fra\"    \"du\"     \"ud\"     \"sin\"    \"dem\"    \"os\"     \"op\"     #> [41] \"man\"    \"hans\"   \"hvor\"   \"eller\"  \"hvad\"   \"skal\"   \"selv\"   \"her\"    #> [49] \"alle\"   \"vil\"    \"blev\"   \"kunne\"  \"ind\"    \"når\"    \"være\"   \"dog\"    #> [57] \"noget\"  \"ville\"  \"jo\"     \"deres\"  \"efter\"  \"ned\"    \"skulle\" \"denne\"  #> [65] \"end\"    \"dette\"  \"mit\"    \"også\"   \"under\"  \"have\"   \"dig\"    \"anden\"  #> [73] \"hende\"  \"mine\"   \"alt\"    \"meget\"  \"sit\"    \"sine\"   \"vor\"    \"mod\"    #> [81] \"disse\"  \"hvis\"   \"din\"    \"nogle\"  \"hos\"    \"blive\"  \"mange\"  \"ad\"     #> [89] \"bliver\" \"hendes\" \"været\"  \"thi\"    \"jer\"    \"sådan\" stopwords('da') # The default source is 'snowball' #>  [1] \"og\"     \"i\"      \"jeg\"    \"det\"    \"at\"     \"en\"     \"den\"    \"til\"    #>  [9] \"er\"     \"som\"    \"på\"     \"de\"     \"med\"    \"han\"    \"af\"     \"for\"    #> [17] \"ikke\"   \"der\"    \"var\"    \"mig\"    \"sig\"    \"men\"    \"et\"     \"har\"    #> [25] \"om\"     \"vi\"     \"min\"    \"havde\"  \"ham\"    \"hun\"    \"nu\"     \"over\"   #> [33] \"da\"     \"fra\"    \"du\"     \"ud\"     \"sin\"    \"dem\"    \"os\"     \"op\"     #> [41] \"man\"    \"hans\"   \"hvor\"   \"eller\"  \"hvad\"   \"skal\"   \"selv\"   \"her\"    #> [49] \"alle\"   \"vil\"    \"blev\"   \"kunne\"  \"ind\"    \"når\"    \"være\"   \"dog\"    #> [57] \"noget\"  \"ville\"  \"jo\"     \"deres\"  \"efter\"  \"ned\"    \"skulle\" \"denne\"  #> [65] \"end\"    \"dette\"  \"mit\"    \"også\"   \"under\"  \"have\"   \"dig\"    \"anden\"  #> [73] \"hende\"  \"mine\"   \"alt\"    \"meget\"  \"sit\"    \"sine\"   \"vor\"    \"mod\"    #> [81] \"disse\"  \"hvis\"   \"din\"    \"nogle\"  \"hos\"    \"blive\"  \"mange\"  \"ad\"     #> [89] \"bliver\" \"hendes\" \"været\"  \"thi\"    \"jer\"    \"sådan\" knitr::kable(fst_find_stopwords(language = 'lv')) fst_find_stopwords(language = 'no') #> # A tibble: 3 × 3 #>   Name          Stopwords   Length    #>   <chr>         <list>      <list>    #> 1 nltk          <chr [172]> <int [1]> #> 2 snowball      <chr [176]> <int [1]> #> 3 stopwords-iso <chr [221]> <int [1]>"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-AnalysingOtherLanguages.html","id":"how-to-use-1","dir":"Articles > Web_only","previous_headings":"2. Recommended: Your language has a stopwords list available for stopwords package","what":"How to use:","title":"Extra-AnalysingOtherLanguages","text":"relevant language stopword list (‘source’), eg “sv” “nltk”, used language stopword_list inputs respectively fst_prepare() (fst_rm_stop_punct() automatically called within fst_prepare()).","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-AnalysingOtherLanguages.html","id":"demonstration-1","dir":"Articles > Web_only","previous_headings":"2. Recommended: Your language has a stopwords list available for stopwords package > How to use:","what":"Demonstration:","title":"Extra-AnalysingOtherLanguages","text":"can find compare English stopwords lists . chosen stopwords list, can run fst_prepare() format data remove stopwords:","code":"knitr::kable(head(fst_find_stopwords(language = 'en'), 5)) en_df2 <- fst_prepare(data = english_sample_survey,                       question = 'text',                       id = 'id',                       model = 'english-ewt',                       stopword_list = 'smart',                        language = 'en')  knitr::kable(head(en_df2, 5))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-AnalysingOtherLanguages.html","id":"b--optional-provide-your-own-list-of-stopwords","dir":"Articles > Web_only","previous_headings":"","what":"2b. Optional: Provide your own list of stopwords","title":"Extra-AnalysingOtherLanguages","text":"stopword list available language, like provide , can use manual_list option within fst_prepare() (fst_rm_stop_punct()) making sure also either set manual = TRUE stopwords_list = \"manual\". can also chose remove stopwords may find want remove get meaningful results! provide manual list, can leave language default values.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-AnalysingOtherLanguages.html","id":"demonstration-2","dir":"Articles > Web_only","previous_headings":"2b. Optional: Provide your own list of stopwords","what":"Demonstration","title":"Extra-AnalysingOtherLanguages","text":"remainder package works regardless language survey responses.","code":"#EXAMPLE OF PROVIDING A MANUAL LIST manualList <- c('and', 'the', 'of', 'you', 'me', 'ours', 'mine', 'them', 'theirs') manualList2 <- \"to, the, I\"  df1 <- fst_prepare(data = english_sample_survey,                   question = 'text',                   id = 'id',                   model = 'english-ewt',                   manual_list = manualList,                   stopword_list = 'manual'                   )  knitr::kable(head(df1, 5)) df2 <- fst_prepare(data = english_sample_survey,                   question = 'text',                   id = 'id',                   model = 'english-ewt',                   manual = TRUE,                   manual_list = manualList2                   )  knitr::kable(head(df2, 5))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-UseWithSurveyPackage.html","id":"introduction","dir":"Articles > Web_only","previous_headings":"","what":"Introduction","title":"Extra-UseWithSurveyPackage","text":"new updated version finnsurveytext works svydesign objects can created survey R package. two ways svydesign objects can used: input pre-processing data. way add weights additional columns within data exploration comparison functions","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-UseWithSurveyPackage.html","id":"first-lets-create-a-svydesign-object-for-use-in-this-tutorial","dir":"Articles > Web_only","previous_headings":"Introduction","what":"First, let’s create a svydesign object for use in this tutorial:","title":"Extra-UseWithSurveyPackage","text":"use dev_coop sample dataset tutorial, create svydesign object sample data.","code":"svy_d <- survey::svydesign(id = ~1,                             weights = ~paino,                             data = dev_coop)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-UseWithSurveyPackage.html","id":"option-1-formatting-data-using-svydesign-object","dir":"Articles > Web_only","previous_headings":"","what":"Option 1: Formatting data using svydesign object","title":"Extra-UseWithSurveyPackage","text":"relevant function fst_prepare_svydesign().","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-UseWithSurveyPackage.html","id":"explanation-of-parameters","dir":"Articles > Web_only","previous_headings":"Option 1: Formatting data using svydesign object","what":"Explanation of parameters:","title":"Extra-UseWithSurveyPackage","text":"svydesign: name svydesign object question: column ‘data’ contains open-ended question id: ID column ‘data’ model: language model available udpipe, “ftb” “tdt”. (provide value, default “ftb”.) stopword_list: list stopwords remove ‘data’. (find relevant stopwords lists, can run fst_find_stopwords(). provide value, default “nltk”. “manual” can used indicate manual list provided.) language two-letter ISO code language stopword list. default language “fi”. use_weights: optional, boolean whether include weights svydesign. (provide value, default TRUE.) add_columns: columns want add formatted data svydesign object, use comparison functions. (provide values, default NULL.) manual: optional boolean indicate manual list provided. (stopword_list = \"manual\" can also instead used. provide values, default FALSE.) manual_list: manual list stopwords choose provide one. (provide values, default empty list.)","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-UseWithSurveyPackage.html","id":"lets-prepare-our-data-below","dir":"Articles > Web_only","previous_headings":"Option 1: Formatting data using svydesign object","what":"Let’s prepare our data below:","title":"Extra-UseWithSurveyPackage","text":"data now formatted:","code":"df <- fst_prepare_svydesign(svydesign = svy_d,                             question = 'q11_3',                             id = 'fsd_id',                             model = 'tdt',                             stopword_list = 'snowball',                             use_weights = TRUE,                             add_cols = c('gender','region')                             ) knitr::kable(head(df, 5))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/Extra-UseWithSurveyPackage.html","id":"option-2-using-svydesign-object-in-data-exploration","dir":"Articles > Web_only","previous_headings":"","what":"Option 2: Using svydesign object in data exploration","title":"Extra-UseWithSurveyPackage","text":"svydesign object can used add weights columns data exploration. First, let’s create formatted data without weights additional columns ready use svydesign object. Within data analysis functions, 3 parameters (function) used add information svydesign object. : use_svydesign_weights: set TRUE want use weights within svydesign object. id: required weights coming svydesign object svydesign: svydesign object Within initial functions (ones used comparison groups) used add weights svydesign object. example,   Within comparison functions, following additional parameter: use_svydesign_field: set TRUE want get field splitting data svydesign object  functions call function fst_use_svydesign() background add svydesign data formatted dataframe.","code":"df2 <- fst_prepare(data = dev_coop,                    question = 'q11_3',                    id = 'fsd_id',                    model = 'ftb',                    stopword_list = 'nltk',                    weights = NULL,                    add_cols = NULL) fst_wordcloud(df2,                pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),               max=50,                use_svydesign_weights = TRUE,                id = 'fsd_id',                svydesign = svy_d) fst_freq(df2,          number = 10,          norm = NULL,          pos_filter = NULL,          strict = TRUE,          name = NULL,          use_svydesign_weights = TRUE,          id = \"fsd_id\",          svydesign = svy_d,          use_column_weights = FALSE) fst_ngrams_compare(fst_dev_coop_2,                    field = 'gender',                    number = 10,                    ngrams = 1,                    norm = NULL,                    pos_filter = NULL,                    strict = TRUE,                    use_svydesign_weights = TRUE,                    use_svydesign_field = TRUE,                    id = \"fsd_id\",                    svydesign = svy_d,                    use_column_weights = FALSE,                    exclude_nulls = TRUE,                    rename_nulls = 'null_data',                    unique_colour = \"indianred\",                    title_size = 20,                    subtitle_size = 15) # FUNCTION DEFINITION: fst_use_svydesign <- function(data,                               svydesign,                               id,                               add_cols = NULL,                               add_weights = TRUE)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"introduction","dir":"Articles > Web_only","previous_headings":"","what":"Introduction","title":"InDetail1-DataPreparation","text":"Many natural language processing (NLP) tasks require data systematically pre-processed format useful analysis. Pre-processing commonly involves activities : tokenisation words sentences conversion lowercase removing stopwords (common words like ‘’, ‘’, etc.) finnsurveytext uses lemmatisation rather stemming. Stemming straightforward process (just removes common suffixes ‘ing’) can cause errors change word meaning (eg. ‘caring’ stemmed ‘car’) Lemmatisation often considered superior slower requires dictionary words. part--speech (POS) tagging","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"installation-of-package-","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Installation of package.","title":"InDetail1-DataPreparation","text":"package installed, can load finnsurveytext package : (required packages dplyr stringr also installed currently installed environment.)","code":"library(finnsurveytext)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"overview-of-functions","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Overview of Functions","title":"InDetail1-DataPreparation","text":"functions covered tutorial : fst_format() fst_find_stopwords() fst_rm_stop_punct() fst_prepare()","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"data","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Data","title":"InDetail1-DataPreparation","text":"tutorial uses two sources data Finnish Social Science Data Archive:","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"child-barometer-data","dir":"Articles > Web_only","previous_headings":"Introduction > Data","what":"1. Child Barometer Data","title":"InDetail1-DataPreparation","text":"Source: FSD3134 Lapsibarometri 2016 Question: q7 ‘Kertoisitko, mitä sinun mielestäsi kiusaaminen ? (Avokysymys)’ Licence: () openly available users without registration (CC 4.0). Link Data: https://urn.fi/urn:nbn:fi:fsd:T-FSD3134","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"development-cooperation-data","dir":"Articles > Web_only","previous_headings":"Introduction > Data","what":"2. Development Cooperation Data","title":"InDetail1-DataPreparation","text":"Source: FSD2821 Nuorten ajatuksia kehitysyhteistyöstä 2012 Questions: q11_1 ‘Jatka lausetta: Kehitysmaa maa, jossa… (Avokysymys)’, q11_2 ‘Jatka lausetta: Kehitysyhteistyö toimintaa, jossa… (Avokysymys)’, q11_3’ Jatka lausetta: Maailman kolme suurinta ongelmaa ovat… (Avokysymys)’ Licence: () openly available users without registration (CC 4.0). Link Data: https://urn.fi/urn:nbn:fi:fsd:T-FSD2821 demonstrated either can used complete tutorial. prefer use data, can read data read.csv() similar ‘raw’ dataframe ready R environment.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"conll-u-format-overview","dir":"Articles > Web_only","previous_headings":"Introduction > Data","what":"CoNLL-U Format Overview","title":"InDetail1-DataPreparation","text":"finnsurveytext package uses CoNLL-U format. tutorial demonstrates process preparing Finnish survey text data format using functions r/01_prepare.r. CoNLL-U popular annotation scheme often used Natural Language Processing (NLP) tasks tokenise annotate text. CoNLL-U format, text split one line per word ten features word recorded including ID, part--speech tagging, word (eg. ‘likes’), word lemma (eg. ‘like’). CoNLL stands Conference Natural Language Learning CoNLL-U format introduced 2014. information CoNLL-U format can found Universal Dependencies Project, https://universaldependencies.org/format.html.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"the-whole-story","dir":"Articles > Web_only","previous_headings":"","what":"The Whole Story","title":"InDetail1-DataPreparation","text":"single function, fst_prepare (calls data preparation functions within package) can used prepare data required CoNNL-U format.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"child-barometer-data-1","dir":"Articles > Web_only","previous_headings":"The Whole Story","what":"1. Child Barometer Data","title":"InDetail1-DataPreparation","text":"Using Child Barometer bullying data, can call function follows: Summary components data dataframe interest. case, using data comes package called ‘child_barometer’. Otherwise, read csv containing dataframe, read.csv() base R use tutorial. question name column data contains open-ended survey question. example, responses bullying question 7. id unique identifier response. chosen remove stopwords “nltk” stopword list example. find relevant lists stopwords, can run fst_find_stopwords() function outlined . Punctuation also removed data whenever stopwords removed. function also requires language model available udpipe, case using default Finnish Treebank, model = \"ftb\". (two options Finnish langage model; option Turku Dependency Treebank. detail treebanks, see Format CoNLL-U section .) Optionally, can add weight column /columns comparing different groups respondents later analysis. adding example. manual manual_list can used want manually provide list stopwords remove data. results CoNLL-U format stored local environment “prepd_bullying”.","code":"prepd_bullying <- fst_prepare(   data = child,   question = \"q7\",   id = 'fsd_id'   stopword_list = \"nltk\",   language = \"fi\"   model = \"ftb\",   weights = NULL,   add_cols = NULL )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"development-cooperation-data-1","dir":"Articles > Web_only","previous_headings":"The Whole Story","what":"2. Development Cooperation Data","title":"InDetail1-DataPreparation","text":"example, Development Cooperation survey q11_2 data prepared using function call: data dataframe interest. case, using data comes package called ‘dev_data’. Otherwise, read csv containing dataframe, read.csv() base R use tutorial. question name column data contains open-ended survey question. example, responses question 11_2. chosen remove stopwords example. (stopword_list = NULL) function also requires language model available [udpipe], case using Turku Dependency Treebank, model = \"tdt\". results CoNLL-U format stored local environment “prepd_dev”.","code":"prepd_dev <- fst_prepare_conllu(   dev_coop,   question = \"q11_2\",   stopword_list = \"none\",   model = \"tdt\",    weights = NULL,   add_cols = NULL,    manual = FALSE,   manual_list = \"\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"in-greater-detail","dir":"Articles > Web_only","previous_headings":"","what":"In greater detail","title":"InDetail1-DataPreparation","text":"better understand fst_prepare() function, go functions one calls. : fst_format() fst_rm_stopwords_punct() Additionally, fst_find_stopwords() function can used find currently available lists stopwords exclusion data. (default “language” “fi”, ) “name” column can used choose list stopword_list variable . Stopword lists lists common words (eg. “”, “”, “”, Finnish “olla”, “ollet”, “ollen”, “”…) often filtered data, leaving less frequently-occurring, thus meaningful, words remaining. stopwords lists can long, one (nltk) shown . Another two lists, snowball stopwords-iso, can found running fst_find_stopwords() function local environment.","code":"stopwords <- fst_find_stopwords(\"fi\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"format-as-connl-u","dir":"Articles > Web_only","previous_headings":"In greater detail","what":"Format as CoNNL-U","title":"InDetail1-DataPreparation","text":"fst_format() function used format data open-ended survey question CoNLL-U format. also: trims trailing whitespace data; converts ‘lemma’ ‘token’ columns lowercase; , removes NA values. package works two Finnish language models available, Turku Dependency Treebank (TDT) FinnTreeBank (FTB). information treebanks can found links , brief, TDT considered “broad coverage” includes texts Wikipedia news sources, FTB consists manually annotated grammatical examples VISK. fst_format_conllu() function utilises udpipe package can run follows: Note: first time run function, download relevant treebank udpipe use annotations. top 5 rows “conllu_cb_bullying” table shown : ´fst_format()` takes 6 arguments: data dataframe containing survey data. question open-ended survey question header table, “q9” id unique ID survey response. model chosen Finnish treebank annotation, either “ftb” (default) “tdt”. weights, optional, column containing weights reponses. add_cols, optional, columns bring formatted data.","code":"conllu_dev_q11_1 <- fst_format(data = dev_coop, question = \"q11_1\", id = 'fsd_id') #> Downloading udpipe model from https://raw.githubusercontent.com/jwijffels/udpipe.models.ud.2.5/master/inst/udpipe-ud-2.5-191206/finnish-ftb-ud-2.5-191206.udpipe to /home/runner/work/finnsurveytext/finnsurveytext/vignettes/web_only/finnish-ftb-ud-2.5-191206.udpipe #>  - This model has been trained on version 2.5 of data from https://universaldependencies.org #>  - The model is distributed under the CC-BY-SA-NC license: https://creativecommons.org/licenses/by-nc-sa/4.0 #>  - Visit https://github.com/jwijffels/udpipe.models.ud.2.5 for model license details. #>  - For a list of all models and their licenses (most models you can download with this package have either a CC-BY-SA or a CC-BY-SA-NC license) read the documentation at ?udpipe_download_model. For building your own models: visit the documentation by typing vignette('udpipe-train', package = 'udpipe') #> Downloading finished, model stored at '/home/runner/work/finnsurveytext/finnsurveytext/vignettes/web_only/finnish-ftb-ud-2.5-191206.udpipe' conllu_cb_bullying <- fst_format(data = child, question = \"q7\", model = \"tdt\", id = 'fsd_id') #> Downloading udpipe model from https://raw.githubusercontent.com/jwijffels/udpipe.models.ud.2.5/master/inst/udpipe-ud-2.5-191206/finnish-tdt-ud-2.5-191206.udpipe to /home/runner/work/finnsurveytext/finnsurveytext/vignettes/web_only/finnish-tdt-ud-2.5-191206.udpipe #>  - This model has been trained on version 2.5 of data from https://universaldependencies.org #>  - The model is distributed under the CC-BY-SA-NC license: https://creativecommons.org/licenses/by-nc-sa/4.0 #>  - Visit https://github.com/jwijffels/udpipe.models.ud.2.5 for model license details. #>  - For a list of all models and their licenses (most models you can download with this package have either a CC-BY-SA or a CC-BY-SA-NC license) read the documentation at ?udpipe_download_model. For building your own models: visit the documentation by typing vignette('udpipe-train', package = 'udpipe') #> Downloading finished, model stored at '/home/runner/work/finnsurveytext/finnsurveytext/vignettes/web_only/finnish-tdt-ud-2.5-191206.udpipe'"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"remove-stopwords-and-punctuation-from-conll-u-data","dir":"Articles > Web_only","previous_headings":"In greater detail","what":"Remove stopwords and punctuation from CoNLL-U data","title":"InDetail1-DataPreparation","text":"fst_rm_stop_punct() (optional) function remove stopwords punctuation CoNLL-U data. fst_find_stopwords can used find options stopwords lists. fst_rm_stop_punct() takes 2 arguments: data output fst_format_conllu() stopword_list list Finnish stopwords, default “nltk” “Name” column fst_find_stopwords() can used. top 5 rows “conllu_bullying_iso” table shown :","code":"conllu_dev_q11_1_nltk <- fst_rm_stop_punct(data = conllu_dev_q11_1) conllu_cb_bullying_iso <- fst_rm_stop_punct(conllu_cb_bullying, \"stopwords-iso\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"conclusion","dir":"Articles > Web_only","previous_headings":"","what":"Conclusion","title":"InDetail1-DataPreparation","text":"Now data CoNLL-U format, pre-processed data ready analysis using finnsurveytext functions. information , please review vignettes package.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail1-DataPreparation.html","id":"citation","dir":"Articles > Web_only","previous_headings":"","what":"Citation","title":"InDetail1-DataPreparation","text":"Office Ombudsman Children: Child Barometer 2016 [dataset]. Version 1.0 (2016-12-09). Finnish Social Science Data Archive [distributor]. http://urn.fi/urn:nbn:fi:fsd:T-FSD3134 Finnish Children Youth Foundation: Young People’s Views Development Cooperation 2012 [dataset]. Version 2.0 (2019-01-22). Finnish Social Science Data Archive [distributor]. http://urn.fi/urn:nbn:fi:fsd:T-FSD2821","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"introduction","dir":"Articles > Web_only","previous_headings":"","what":"Introduction","title":"InDetail2-DataExploration","text":"Exploratory Data Analysis (EDA) common activity data cleaned prepared. EDA involves running functions allow better understand responses begin formulate initial hypotheses based data. tutorial follows Tutorial 1 guides EDA data prepared CoNLL-U format. EDA functions contained r/02_data_exploration.R.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"installation-of-package-","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Installation of package.","title":"InDetail2-DataExploration","text":"package installed, can load finnsurveytext package : (required packages dplyr stringr also installed currently installed environment.)","code":"library(finnsurveytext)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"overview-of-functions","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Overview of Functions","title":"InDetail2-DataExploration","text":"functions covered tutorial : fst_summarise_short() fst_summarise() fst_pos() fst_length_summary() fst_freq_table() fst_ngrams_table() fst_ngrams_table2() fst_freq_plot() fst_ngrams_plot() fst_wordcloud() fst_freq() fst_ngrams()","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"data","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Data","title":"InDetail2-DataExploration","text":"two sets data files available within package used tutorial. files created following process demonstrated Tutorial 1.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"child-barometer-data","dir":"Articles > Web_only","previous_headings":"Introduction > Data","what":"1. Child Barometer Data","title":"InDetail2-DataExploration","text":"data/fst_child.rda","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"development-cooperation-data","dir":"Articles > Web_only","previous_headings":"Introduction > Data","what":"2. Development Cooperation Data","title":"InDetail2-DataExploration","text":"data/fst_dev_coop can read follows:","code":"df1 <- fst_child df2 <- fst_dev_coop"},{"path":[]},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"get-summary-table-functions","dir":"Articles > Web_only","previous_headings":"Summary Tables","what":"Get Summary Table functions","title":"InDetail2-DataExploration","text":"fst_summarise_short() fst_summarise() first function creates simple summary table data shows total number words, number unique words, number unique lemmas data. can either view table console, define variable contain table. second function adds information number proportion survey respondents answered question. fst_summarise_short() fst_summarise() take 1 argument: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). fst_summarise() takes optional second argument: desc optional string describing respondents. description included table first column. defined, default ‘respondents’.","code":"fst_summarise_short(data = df1) #>   Respondents Total Words Unique Words Unique Lemmas #> 1         413        1580          559           414  summary_table <- fst_summarise(data = df2, desc = \"All\") knitr::kable(summary_table)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"get-part-of-speech-summary-table-function","dir":"Articles > Web_only","previous_headings":"Summary Tables","what":"Get Part-Of-Speech Summary Table function","title":"InDetail2-DataExploration","text":"fst_pos() function creates table counts number proportion words part--speech (POS) tag within data. , can either view table console, define variable contain table. fst_pos() takes 1 argument: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu().","code":"fst_pos(data = df1) #>     UPOS                  UPOS_Name Count Proportion #> 1    ADJ                  adjective   156      0.099 #> 2    ADP                 adposition     5      0.003 #> 3    ADV                     adverb    98      0.062 #> 4    AUX                  auxiliary    36      0.023 #> 5  CCONJ   coordinating conjunction     1      0.001 #> 6    DET                 determiner    72      0.046 #> 7   INTJ               interjection    16      0.010 #> 8   NOUN                       noun   455      0.288 #> 9    NUM                    numeral     2      0.001 #> 10  PART                   particle    38      0.024 #> 11  PRON                    pronoun   148      0.094 #> 12 PROPN                proper noun     6      0.004 #> 13 PUNCT                punctuation     0      0.000 #> 14 SCONJ  subordinating conjunction     0      0.000 #> 15   SYM                     symbol     0      0.000 #> 16  VERB                       verb   545      0.345 #> 17     X                      other     2      0.001  pos_table <- fst_pos(data = df2) knitr::kable(pos_table)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"get-length-summary-table-function","dir":"Articles > Web_only","previous_headings":"Summary Tables","what":"Get Length Summary Table function","title":"InDetail2-DataExploration","text":"fst_length_summary() function creates table summarises distribution lengths responses. , can either view table console, define variable contain table. fst_length_summary() takes 3 arguments: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). desc optional string describing respondents. defined, remain blank table meaning ‘Description’ column show whether row showing data words sentences. incl_sentences boolean whether include sentence data table, default TRUE. incl_sentences = TRUE, table also provide length information number sentences within responses. incl_sentences = FALSE, table show show results number words responses.","code":"fst_length_summary(data = df1, desc = \"All Children\") #> # A tibble: 2 × 8 #>   Description             Respondents  Mean Minimum    Q1 Median    Q3 Maximum #>   <chr>                         <int> <dbl>   <int> <dbl>  <int> <dbl>   <int> #> 1 All Children- Words             413  5.33       1     2      4     7      37 #> 2 All Children- Sentences         413  1.22       1     1      1     1       6  length_table <- fst_length_summary(data = df2, incl_sentences = FALSE) knitr::kable(length_table)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"top-words-and-n-grams-tables","dir":"Articles > Web_only","previous_headings":"","what":"Top Words and N-grams Tables","title":"InDetail2-DataExploration","text":"Next demonstrate functions used create plots frequent words n-grams occurring data. n-gram set n successive words data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"make-top-words-table-function","dir":"Articles > Web_only","previous_headings":"Top Words and N-grams Tables","what":"Make Top Words Table function","title":"InDetail2-DataExploration","text":"fst_freq_table() functions creates table frequently occurring words data (noting “stopwords” may removed previous data preparation steps.) top words tables able words normalised choose. variable norm method normalising data. Valid settings 'number_words' (number words responses), 'number_resp' (number responses), NULL (raw count returned, default). Optionally, can indicate POS tags include. function, must determine want case ties variable strict. Words equal occurrence presented alphabetial order. default, words presented order number cutoff word. means equally-occurring later-alphabetically words beyond cutoff word displayed. Alternatively, can decide cutoff strict, case words occurring equally often number cutoff words displayed. (fst_freq_table() print message regarding decision.) run functions follows: fst_freq_table() takes following arguments: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). number number top words/n-grams return, default 10 means top 10 words returned. norm method normalising data. Valid settings 'number_words' (number words responses), 'number_resp' (number responses), NULL (raw count returned, default). pos_filter optional list POS tags include 'c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")'. default NULL, case words data considered. strict boolean determines function deal ‘ties’. strict = TRUE, table cut-exact number(words presented alphabetical order later-alphabetically, equally occurring words word number shown.) strict = FALSE, table show words occur equally frequently number cutoff word. use_svydesign_weights boolean whether get weights responses svydesign object weights coming svydesign object, id field needs empty, used join data. Similarly, weights coming svydesign object named object. use_column_weights boolean weights already included formatted data included.","code":"fst_freq_table(data = df1) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>       words occurrence #> 1    toinen        118 #> 2     lyödä         71 #> 3  lyöminen         53 #> 4      joku         46 #> 5      paha         43 #> 6     tehdä         34 #> 7     sanoa         33 #> 8    tietää         32 #> 9     jokin         30 #> 10    tulla         30  fst_freq_table(   data = df1,   number = 15,   norm = NULL,   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = FALSE,    use_svydesign_weights = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE ) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, words occurring equally often as the `number` cutoff word will be displayed. #>         words occurrence #> 1       lyödä         71 #> 2    lyöminen         53 #> 3        paha         42 #> 4       sanoa         33 #> 5       tehdä         33 #> 6      tietää         32 #> 7       tulla         29 #> 8       ottaa         28 #> 9      potkia         27 #> 10    kiusata         26 #> 11 potkiminen         24 #> 12    haukkua         22 #> 13     kaveri         22 #> 14  töniminen         22 #> 15     toinen         17 #> 16      tyhmä         17 #> 17      tönia         17                              table1 <- fst_freq_table(data = df2, number = 5) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. knitr::kable(table1) table2 <- fst_freq_table(data = df2, number = 5, norm = \"number_resp\", pos_filter = c(\"NOUN\", \"VERB\"), strict = FALSE) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, words occurring equally often as the `number` cutoff word will be displayed. knitr::kable(table2)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"make-top-n-grams-table-function","dir":"Articles > Web_only","previous_headings":"Top Words and N-grams Tables","what":"Make Top N-Grams Table function","title":"InDetail2-DataExploration","text":"fst_ngrams_table() Similar fst_freq_table(), functions creates table frequently occurring n-grams data (noting “stopwords” may removed previous data preparation steps.) top n-grams tables able n-grams normalised choose. variable norm method normalising data. Valid settings 'number_words' (number words responses), 'number_resp' (number responses), NULL (raw count returned, default). Optionally, can indicate POS tags include. function, must determine want case ties variable strict. N-grams equal occurrence presented alphabetial order. default, n-grams presented order number cutoff n-gram. means equally-occurring later-alphabetically n-grams beyond cutoff n-gram displayed. Alternatively, can decide cutoff strict, case n-grams occurring equally often number cutoff n-gram displayed. (fst_get_top_ngrams() print message regarding decision. another function fst_ngrams_table2() doesn’t print message. function used within comparison functions 04_comparison_functions.R) run functions follows: fst_freq_table() setup fst_ngrams_table() plus additional argument ngrams: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). number number top words/n-grams return, default 10 means top 10 n-grams returned. ngrams type n-grams. default “1” (top words). Set ngrams = 2 get bigrams n = 3 get trigrams etc. norm method normalising data. Valid settings 'number_words' (number words responses, default), 'number_resp' (number responses), NULL (raw count returned). pos_filter optional list POS tags include 'c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")'. default NULL, case words data considered. strict boolean determines function deal ‘ties’. strict = TRUE, table cut-exact number(n-grams presented alphabetical order later-alphabetically, equally occurring n-grams n-gram number shown.) strict = FALSE, table show n-grams occur equally frequently number cutoff n-gram. use_svydesign_weights, svydesign, id use_column_weights defined .","code":"fst_ngrams_table(data = df1, ngrams = 2) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed. #>                  words occurrence #> 1  lyöminen potkiminen         17 #> 2           joku lyödä         11 #> 3         lyödä potkia         11 #> 4          osata sanoa          9 #> 5       haukkua toinen          8 #> 6          sanoa jokin          7 #> 7          tulla mieli          7 #> 8          joku toinen          6 #> 9         ottaa toinen          6 #> 10          paha mieli          6  fst_ngrams_table(data = df1, ngrams = 2, norm = \"number_words\", strict = FALSE) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, n-grams occurring equally often as the `number` cutoff n-gram will be displayed. #>                  words occurrence #> 1  lyöminen potkiminen      0.011 #> 2           joku lyödä      0.007 #> 3         lyödä potkia      0.007 #> 4          osata sanoa      0.006 #> 5       haukkua toinen      0.005 #> 6          sanoa jokin      0.004 #> 7          tulla mieli      0.004 #> 8          joku toinen      0.004 #> 9         ottaa toinen      0.004 #> 10          paha mieli      0.004 #> 11     pyytää anteeksi      0.004 #> 12         tehdä jokin      0.004 #> 13        tietää lyödä      0.004 #> 14        toinen tulla      0.004 #> 15  töniminen lyöminen      0.004  table3 <- fst_ngrams_table(data = df2, number = 15, ngrams = 3) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed. knitr::kable(table3) table4 <- fst_ngrams_table(data = df2, number = 15, ngrams = 2, pos_filter = c(\"NOUN\", \"VERB\"), strict = FALSE) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, n-grams occurring equally often as the `number` cutoff n-gram will be displayed. knitr::kable(table4)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"make-top-wordsn-grams-tables-functions","dir":"Articles > Web_only","previous_headings":"Top Words and N-grams Tables","what":"Make Top Words/N-grams Tables functions","title":"InDetail2-DataExploration","text":"fst_freq_plot() functions plots results fst_freq_table().  arguments : table output fst_get_top_words fst_get_top_ngrams() number number words/n-grams, default 10. name optional “name” plot, default NULL","code":"fst_freq_plot(table = table1, number = 5, name = \"Table 1\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"make-top-n-grams-tables-functions","dir":"Articles > Web_only","previous_headings":"Top Words and N-grams Tables","what":"Make Top N-grams Tables functions","title":"InDetail2-DataExploration","text":"fst_ngrams_plot() functions plots results fst_get_top_ngrams().   arguments : table output fst_get_top_words fst_get_top_ngrams() number number words/n-grams, default 10. name optional “name” plot, default NULL ngrams type n-grams. can see , can plot top words using ngrams = 1.","code":"fst_ngrams_plot(table = table3, number = 15, ngrams = 3, \"Trigrams\") fst_ngrams_plot(table = table4, number = 15, ngrams = 2, \"Bigrams\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"find-and-plot-top-words-function","dir":"Articles > Web_only","previous_headings":"Top Words and N-grams Tables","what":"Find and Plot Top Words function","title":"InDetail2-DataExploration","text":"fst_freq() functions runs fst_get_top_words() fst_freq_plot() within one function:  arguments defined component functions: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). number number top words/n+grams return, default 10. norm method normalising data. Valid settings 'number_words' (number words responses, default), 'number_resp' (number responses), NULL (raw count returned). pos_filter optional list POS tags include 'c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")'. default NULL, case words data considered. strict boolean determines function deal ‘ties’. strict = TRUE, table cut-exact number(words presented alphabetical order later-alphabetically, equally occurring words word number shown.) strict = FALSE, table show words occur equally frequently number cutoff word. name optional “name” plot, default NULL use_svydesign_weights, svydesign, id use_column_weights defined .","code":"fst_freq(data = df2, number = 12, strict = FALSE, name = \"Q11_1\") #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, words occurring equally often as the `number` cutoff word will be displayed."},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"find-and-plot-top-n-grams-function","dir":"Articles > Web_only","previous_headings":"Top Words and N-grams Tables","what":"Find and Plot Top N-Grams function","title":"InDetail2-DataExploration","text":"fst_ngrams() functions runs fst_get_top_ngrams() fst_ngrams_plot() within one function:  arguments defined commponent functions: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). number number top words/n+grams return, default 10. ngrams type n-grams. default “1” (top words). Set ngrams = 2 get bigrams n = 3 get trigrams etc. norm method normalising data. Valid settings 'number_words' (number words responses, default), 'number_resp' (number responses), NULL (raw count returned). pos_filter optional list POS tags include 'c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")'. default NULL, case words data considered. strict boolean determines function deal ‘ties’. strict = TRUE, table cut-exact number(n-grams presented alphabetical order later-alphabetically, equally occurring n-grams n-gram number shown.) strict = FALSE, table show n-grams occur equally frequently number cutoff word. use_svydesign_weights, svydesign, id use_column_weights defined .","code":"fst_ngrams(data = df1, number = 12, ngrams = 2) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed."},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"make-wordcloud-function","dir":"Articles > Web_only","previous_headings":"Top Words and N-grams Tables","what":"Make Wordcloud function","title":"InDetail2-DataExploration","text":"fst_wordcloud() function create wordcloud plot data. option select specific word types (POS tag).   fst_wordclouds() takes 7 arguments: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). pos_filter optional list POS tags inclusion wordcloud. defaul NULL. max maximum number words display, default 100. use_svydesign_weights, svydesign, id use_column_weights defined .","code":"fst_wordcloud(data = df1) fst_wordcloud(   data = df2,   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   max = 150 )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"conclusion","dir":"Articles > Web_only","previous_headings":"","what":"Conclusion","title":"InDetail2-DataExploration","text":"EDA open-ended survey questions can conducted using functions r/02_data_exploration.R finding frequent words n-grams, summarising length responses words used, visualising responses word clouds. results EDA can help researchers better understand data, create hypotheses based initial insights, inform future analysis surveys.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail2-DataExploration.html","id":"citation","dir":"Articles > Web_only","previous_headings":"","what":"Citation","title":"InDetail2-DataExploration","text":"Office Ombudsman Children: Child Barometer 2016 [dataset]. Version 1.0 (2016-12-09). Finnish Social Science Data Archive [distributor]. http://urn.fi/urn:nbn:fi:fsd:T-FSD3134 Finnish Children Youth Foundation: Young People’s Views Development Cooperation 2012 [dataset]. Version 2.0 (2019-01-22). Finnish Social Science Data Archive [distributor]. http://urn.fi/urn:nbn:fi:fsd:T-FSD2821","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"introduction","dir":"Articles > Web_only","previous_headings":"","what":"Introduction","title":"InDetail3-ConceptNetworkOverview","text":"One way investigate co-occurring ideas within texts network keywords visualises relative word importance co-occurrence words. networks also attempt identify multiple co-occurring words represent concept, pairs co-occurring words act links different concepts. produce network requires keywords co-occurring terms identified, relative importance quantified. networks allow investigation common concepts thoughts within text. Within network, concept identified single word, multiple words, entire plot depending search terms. finnsurveytext package currently contains first iteration function plots concept network. plots visualise keywords identified TextRank algorithm maps co-occurrences terms. Vertices represent words vertex size indicating word importance co-occurrence words shown edges edge thickness indicating number co-occurrences. Word importance determined recursively (unsupervised TextRank algorithm, graph-based ranking model text processing) words get weight based many words co-occur weight co-occurring words. concept network functions take search terms input user algorithm suggests words related input terms co-occurrence. input terms can identified functions package (fst_cn_search() fst_freq_table()) analysis separately conducted user. concept network function can used identify concepts individual words group co-occurring words, may contain single ’concept’ whose component words investigated identified within single network plot. utilise TextRank algorithm finnsurveytext, use textrank package. information package, please see documentation. package implements TextRank PageRank algorithms. (PageRank algorithm Google uses rank webpages.) can read underlying TextRank algorithm PageRank algorithm .","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"installation-of-package-","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Installation of package.","title":"InDetail3-ConceptNetworkOverview","text":"package installed, can load finnsurveytext package : (required packages dplyr stringr also installed currently installed environment.)","code":"library(finnsurveytext)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"overview-of-functions","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Overview of Functions","title":"InDetail3-ConceptNetworkOverview","text":"functions covered tutorial r/03_concept_network.R. : fst_cn_search() fst_cn_edges() fst_cn_nodes() fst_cn_plot() fst_concept_network()","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"data","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Data","title":"InDetail3-ConceptNetworkOverview","text":"two sets data files available within package used tutorial. files created following process demonstrated Tutorial 1. suffixes ‘iso’, ‘nltk’ ‘snow’ refer types stopwords removed data preparation activities.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"child-barometer-data","dir":"Articles > Web_only","previous_headings":"Introduction > Data","what":"1. Child Barometer Data","title":"InDetail3-ConceptNetworkOverview","text":"data/fst_child","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"development-cooperation-data","dir":"Articles > Web_only","previous_headings":"Introduction > Data","what":"2. Development Cooperation Data","title":"InDetail3-ConceptNetworkOverview","text":"data/fst_dev_coop can read follows:","code":"df1 <- fst_child df2 <- fst_dev_coop"},{"path":[]},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"concept-network---search-textrank-for-concepts","dir":"Articles > Web_only","previous_headings":"FUNCTIONS","what":"Concept Network - Search TextRank for Concepts","title":"InDetail3-ConceptNetworkOverview","text":"fst_cn_search() function used find words related list provided terms. utilises textrank_keywords() function part textrank package. function goes following process: separates search string individual terms applies textrank_keywords() function finds n-grams text occur multiple times finds pairs words included common ngrams filters pairs least one pair searched term. function fst_cn_search() demonstrated . resulting dataframe formatted : run fst_cn_search, provide following arguments function: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). concepts string concept terms search , separated commas. relevant_pos list UPOS tags inclusion, default c(“NOUN”, “VERB”, “ADJ”, “ADV”).","code":"bullying_concepts <- fst_cn_search(   data = df1,   concepts = \"kiusata, lyöminen, lyödä, potkia\" ) dev_concepts <- fst_cn_search(   data = df2,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\" ) knitr::kable(head(dev_concepts, n = 10))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"concept-network---get-textrank-edges","dir":"Articles > Web_only","previous_headings":"FUNCTIONS","what":"Concept Network - Get TextRank Edges","title":"InDetail3-ConceptNetworkOverview","text":"fst_cn_edges() Get Edges function runs search function, fst_cn_search() filters edges (pairs co-occurring words one concept word) larger threshold (occurring enough times). resulting dataframe simplified preparation plotting. dataframe simplified format fst_cn_search() results, columns “”, “” “n” indicates number occurrences. arguments fst_cn_search() plus threshold. data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). concepts string concept terms search , separated commas. threshold minimum number occurrences threshold ‘edge’ concept term word, default NULL. norm method normalising data. Valid settings 'number_words' (number words responses, default), 'number_resp' (number responses), NULL (raw count returned). Normalisation occurs threshold (exists) applied. pos_filter list UPOS tags inclusion, default NULL.","code":"bullying_edges <- fst_cn_edges(   data = df1,   concepts = \"kiusata, lyöminen, lyödä, potkia\" )  dev_edges <- fst_cn_edges(   data = df2,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\",   threshold = 2 ) knitr::kable(head(dev_edges, n = 10))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"concept-network---get-textrank-nodes","dir":"Articles > Web_only","previous_headings":"FUNCTIONS","what":"Concept Network - Get TextRank Nodes","title":"InDetail3-ConceptNetworkOverview","text":"fst_cn_nodes() function runs textrank_keywords() function part textrank package returns dataframe containing relevant lemmas associated PageRank. demonstrated follows: fst_cn_nodes() requires following arguments: data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). edges output fst_cn_edges(). pos_filter list UPOS tags inclusion, default NULL.","code":"bullying_nodes <- fst_cn_nodes(data = df1, edges = bullying_edges) dev_nodes <- fst_cn_nodes(data = df2, edges = dev_edges) knitr::kable(head(dev_nodes, n = 10))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"plot-concept-network","dir":"Articles > Web_only","previous_headings":"FUNCTIONS","what":"Plot Concept Network","title":"InDetail3-ConceptNetworkOverview","text":"fst_cn_plot() function takes output previous functions plots concept network. Edges words plot show number occurrences thicker opaque edges showing occurrences. Similarly, size word circle indicates PageRank higher PageRank resulting larger circle. Concept words coloured red terms black.  Recall dev_edges set threshold 2. fewer words included plot despite words available (including stopwords) data.  fst_cn_plot() uses results previous functions, 4 arguments: edges output fst_cn_edges(). nodes output fst_cn_nodes() concepts list terms searched , separated commas. title optional title plot, default NULL generic title, (‘TextRank extracted keyword occurrences’) used.","code":"fst_cn_plot(   edges = bullying_edges,   nodes = bullying_nodes,   concepts = \"kiusata, lyöminen\",   title = \"Bullying Data CN\" ) fst_cn_plot(   edges = dev_edges,   nodes = dev_nodes,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"plot-concept-network-1","dir":"Articles > Web_only","previous_headings":"FUNCTIONS","what":"Plot Concept Network","title":"InDetail3-ConceptNetworkOverview","text":"fst_concept_network() don’t want run individual functions, fst_cn_search(), fst_cn_edges(), fst_cn_nodes(), fst_cn_plot(), can run within one function, fst_concept_network(). function run follows:    arguments : data output data preparation, prepared data CoNLL-U format, output fst_prepare_connlu(). concept string concept terms search , separated commas. threshold minimum number occurrences threshold ‘edge’ concept term word, default NULL. norm method normalising data. Valid settings 'number_words' (number words responses, default), 'number_resp' (number responses), NULL (raw count returned). Normalisation occurs threshold (exists) applied. pos_filter list UPOS tags inclusion, default NULL. title optional title plot, default NULL generic title, (‘TextRank extracted keyword occurrences’) used.","code":"fst_concept_network(   data = df1,   concepts = \"kiusata, lyöminen\",   title = \"Concept Network of Bullying Data\" ) fst_concept_network(   data = df2,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\" ) fst_concept_network(   data = df2,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\",   threshold = 3 )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"conclusion","dir":"Articles > Web_only","previous_headings":"","what":"Conclusion","title":"InDetail3-ConceptNetworkOverview","text":"tutorial ran functions used create Concept Networks included finnsurveytext. concept network visualises word importance co-occurrence words.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail3-ConceptNetworkOverview.html","id":"citation","dir":"Articles > Web_only","previous_headings":"","what":"Citation","title":"InDetail3-ConceptNetworkOverview","text":"Office Ombudsman Children: Child Barometer 2016 [dataset]. Version 1.0 (2016-12-09). Finnish Social Science Data Archive [distributor]. http://urn.fi/urn:nbn:fi:fsd:T-FSD3134 Finnish Children Youth Foundation: Young People’s Views Development Cooperation 2012 [dataset]. Version 2.0 (2019-01-22). Finnish Social Science Data Archive [distributor]. http://urn.fi/urn:nbn:fi:fsd:T-FSD2821","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"introduction","dir":"Articles > Web_only","previous_headings":"","what":"Introduction","title":"InDetail4-ComparisonFunctions","text":"analysing responses open-ended questions, may want look whether different groups survey participants , general, responded differently prompt. finnsurveytext contains number comparison functions intended used compare responses groups. comparison functions covered defined r/04_comparison_functions.R r/05_comparison_concept_network.R. One way split data using different question within survey categorical question (eg. gender, location, level education) ordinal variable (age income bracket). tutorial, look comparing responses question based gender. using comparison functions, run preparation functions r/01_prepare_conll-u.R (covered detail ‘Tutorial1-Prepare CoNLL-U’) group separately. comparison functions : fst_summarise_compare() fst_pos_compare() fst_length_compare() fst_comparisoncloud() fst_get_unique_ngrams() fst_join_unique() fst_ngrams_compare_plot() fst_ngrams_compare_plot2() fst_plot_multiple() fst_freq_compare() fst_ngrams_compare() fst_cn_get_unique() fst_cn_compare_plot() fst_concept_network_compare() look following question: (English) q11_2 Continue sentence: Development cooperation activity … (Open question)","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"installation-of-package-","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Installation of package.","title":"InDetail4-ComparisonFunctions","text":"package installed, can load finnsurveytext package : (required packages dplyr stringr also installed currently installed environment.)","code":"library(finnsurveytext)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"the-data","dir":"Articles > Web_only","previous_headings":"Introduction","what":"The Data","title":"InDetail4-ComparisonFunctions","text":"files created following process demonstrated Tutorial 1.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"child-barometer-data","dir":"Articles > Web_only","previous_headings":"Introduction > The Data","what":"1. Child Barometer Data","title":"InDetail4-ComparisonFunctions","text":"data/fst_child.rda","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"development-cooperation-data","dir":"Articles > Web_only","previous_headings":"Introduction > The Data","what":"2. Development Cooperation Data","title":"InDetail4-ComparisonFunctions","text":"data/fst_dev_coop can read follows:","code":"df1 <- fst_child df2 <- fst_dev_coop"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"comparison-of-responses-based-on-gender","dir":"Articles > Web_only","previous_headings":"","what":"Comparison of responses based on gender","title":"InDetail4-ComparisonFunctions","text":"comparison functions can compare groups respondents based another field raw data included formatting. following common arguments appear multiple functions defined way : field field data used split responses. exclude_nulls (default value FALSE) used indicate whether want include group repondents value field column. rename_nulls (default value ‘null_data’) name group missing field data. First, look summary functions compare responses overall. functions : fst_summarise_compare() fst_pos_summary() fst_length_compare()","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"make-comparison-summary","dir":"Articles > Web_only","previous_headings":"Comparison of responses based on gender","what":"Make Comparison Summary","title":"InDetail4-ComparisonFunctions","text":"can run function create summary table data: (use knitr::kable function display results “prettier” table) Remarks: can already see data quite unbalanced. lot female respondents male unspecified. response (question) rate high (97%) slightly lower unspecified respondents. Unsurprisingly, since female responses, female responses question contain larger variety words.","code":"knitr::kable(   fst_summarise_compare(data = df2,                         field = 'gender',                         exclude_nulls = FALSE,                         rename_nulls = 'no gender provided'   ) )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"pos-and-length-comparisons","dir":"Articles > Web_only","previous_headings":"Comparison of responses based on gender","what":"POS and Length Comparisons","title":"InDetail4-ComparisonFunctions","text":"Next, look part--speech tags lengths responses. Remarks: terms POS tags, scale differences likely mostly due differences number respondents genders. can also see female responses generally slightly longer (average 6 words 5 words) respondents (across genders) wrote single sentence.","code":"knitr::kable(   fst_pos_compare(data = df2,                   field = 'gender',                   exclude_nulls = TRUE   ) ) knitr::kable(   fst_length_compare(data = df2,                      field = 'gender',                      incl_sentences = TRUE,                      exclude_nulls = TRUE   ) )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"comparison-cloud","dir":"Articles > Web_only","previous_headings":"Comparison of responses based on gender","what":"Comparison Cloud","title":"InDetail4-ComparisonFunctions","text":"Now ’ve looked overview comparisons, create comparison cloud responses, using versions stopwords removed meaningful words remain. comparison cloud compares relative frequency term used two documents. cloud shows words occur regularly responses specific type respondent. information comparison clouds, can read documentation. create comparison cloud follows:  run fst_comparison_cloud(), provide following arguments function: data, field, exclude_nulls `rename_nulls`` (defined ) norm method normalising data. Valid settings 'number_words' (number words responses), 'number_resp' (number responses), NULL (raw count returned, default). pos_filter optional list POS tags include 'c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")'. default NULL, case words data considered. max maximum number words display, default 100. use_svydesign_weights boolean whether get weights responses svydesign object weights coming svydesign object, id field needs empty, used join data. Similarly, weights coming svydesign object named object. use_column_weights boolean weights already included formatted data included.","code":"# WEIGHTED fst_comparison_cloud(data = df2,                      field = 'gender',                      pos_filter = NULL,                      norm = NULL,                      max = 100,                      use_svydesign_weights = FALSE,                      use_svydesign_field = FALSE,                      id = \"\",                      svydesign = NULL,                      use_column_weights = TRUE,                      exclude_nulls = TRUE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"common-words-and-n-grams","dir":"Articles > Web_only","previous_headings":"Comparison of responses based on gender","what":"Common Words and N-grams","title":"InDetail4-ComparisonFunctions","text":"Now, look common words occurring responses. First, consider responses question. filtering data based POS tag, leave default strict = TRUE cut-list 10 words (see warning note ). also use default norm means standardising groups dividing count word total number words responses. definition fst_freq_table() fst_ngrams_table() functions, see “InDetail2-DataExploration”.","code":"all_top10 <- fst_freq_table(df2,   number = 10,   norm = \"number_words\",   pos_filter = NULL,   strict = FALSE ) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, words occurring equally often as the `number` cutoff word will be displayed. all_top10bigrams <- fst_ngrams_table(df2,   number = 10,   ngrams = 2,   norm = \"number_words\",   pos_filter = NULL,   strict = TRUE ) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed.  knitr::kable(all_top10) knitr::kable(all_top10bigrams)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"comparison-n-gram-plots","dir":"Articles > Web_only","previous_headings":"Comparison of responses based on gender","what":"Comparison N-Gram Plots","title":"InDetail4-ComparisonFunctions","text":"Now look top words gender. two functions create plots one function simply. fst_freq_compare() fst_ngrams_compare().   functions fst_freq_compare() fst_ngrams_compare() parameters defined previously. Remarks: Note words unique gender highlighted red. comparing top 10 words, aware word likely still appears genders, just less frequently! Interestingly, top 4 words, seems top 3 words differs across genders ‘ilmastonmuutos’ 3rd frequent male responses ‘nälänhätä’ top 3 females. frequent bigram female responses ‘puhdas vesi’ commonly mentioned male respondents.","code":"fst_freq_compare(   df2,   field = 'gender',   number = 10,   norm = NULL,   pos_filter = NULL,   unique_colour = \"indianred\",   strict = TRUE,    exclude_nulls = TRUE,    use_column_weights = TRUE ) fst_ngrams_compare(   df2,   field = 'gender',   number = 10,   ngrams = 2,   norm = NULL,   pos_filter = NULL,   unique_colour = \"indianred\",   strict = TRUE,    use_column_weights = TRUE,    exclude_nulls = TRUE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"comparison-concept-network","dir":"Articles > Web_only","previous_headings":"Comparison of responses based on gender","what":"Comparison Concept Network","title":"InDetail4-ComparisonFunctions","text":"Since top 4 words ‘köyhyys’, ‘nälänhätä’, ‘sota’, ‘ilmastonmuutos’, create Concept Networks based terms. run comparison Concept Network . , ’re keeping default norm.  parameters previously described. Remarks: Concept Networks created separately, means weights words based responses within gender. Despite , many words female plot (possibly due responses data leading increased variation).","code":"fst_concept_network_compare(data = df2,                             concepts = 'köyhyys, nälänhätä, sota, ilmastonmuutos',                             field = 'gender',                             norm = NULL,                             threshold = NULL,                             pos_filter = NULL,                             exclude_nulls = TRUE,                             )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"conclusion","dir":"Articles > Web_only","previous_headings":"","what":"Conclusion","title":"InDetail4-ComparisonFunctions","text":"demonstrated tutorial, finnsurveytext contains number functions can used compare responses groups. analysis form start work responses question 11_3 respondents based gender, just one many different splits used investigate responses.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail4-ComparisonFunctions.html","id":"citation","dir":"Articles > Web_only","previous_headings":"","what":"Citation","title":"InDetail4-ComparisonFunctions","text":"Finnish Children Youth Foundation: Young People’s Views Development Cooperation 2012 [dataset]. Version 2.0 (2019-01-22). Finnish Social Science Data Archive [distributor]. http://urn.fi/urn:nbn:fi:fsd:T-FSD2821","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"introduction","dir":"Articles > Web_only","previous_headings":"","what":"Introduction","title":"InDetail5-AnalysisExample1","text":"tutorial goes details demonstrating use package, covering functions r/02_data_exploration.R r/03_concept_network.R. intention provide example initial analysis open-ended survey question used inform settings concept words Concept Network plot. , demonstrate Concept Network settings can fine-tuned produce plots persuasive visualisations findings.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"installation-of-package-","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Installation of package.","title":"InDetail5-AnalysisExample1","text":"package installed, can load finnsurveytext package : (required packages dplyr stringr also installed currently installed environment.)","code":"library(finnsurveytext)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"overview-of-functions","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Overview of Functions","title":"InDetail5-AnalysisExample1","text":"functions covered tutorial : fst_summarise() fst_pos() fst_length_summary() fst_freq() fst_ngrams() fst_wordcloud() fst_concept_network()","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"the-data","dir":"Articles > Web_only","previous_headings":"Introduction","what":"The Data","title":"InDetail5-AnalysisExample1","text":"’re looking FSD2821 Young People’s Views Development Cooperation 2012 (FSD2821 Nuorten ajatuksia kehitysyhteistyöstä 2012) survey provided sample data package.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"development-cooperation-data","dir":"Articles > Web_only","previous_headings":"Introduction > The Data","what":"Development Cooperation Data","title":"InDetail5-AnalysisExample1","text":"data/dev_coop.rda 3 open-ended questions look within data set threshold function arguments suit question.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"the-open-ended-questions","dir":"Articles > Web_only","previous_headings":"Introduction > The Data","what":"The open-ended questions","title":"InDetail5-AnalysisExample1","text":"q11_1 Continue sentence: developing country country … (Open question) q11_2 Continue sentence: Development cooperation activity … (Open question) q11_3 Continue sentence: world’s three biggest problems … (Open question)","code":""},{"path":[]},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"format","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis","what":"Format","title":"InDetail5-AnalysisExample1","text":"First, format data data. ’ll print first 10 rows raw data one processed datasets (Q11_1).","code":"dev_coop <- dev_coop  q11_1 <- fst_prepare(data = dev_coop,                      question = 'q11_1',                      id = 'fsd_id',                      model = \"ftb\",                      stopword_list = \"nltk\",                      weights = 'paino',                      add_cols = NULL,                      manual = FALSE,                      manual_list = \"\") #> Downloading udpipe model from https://raw.githubusercontent.com/jwijffels/udpipe.models.ud.2.5/master/inst/udpipe-ud-2.5-191206/finnish-ftb-ud-2.5-191206.udpipe to /home/runner/work/finnsurveytext/finnsurveytext/vignettes/web_only/finnish-ftb-ud-2.5-191206.udpipe #>  - This model has been trained on version 2.5 of data from https://universaldependencies.org #>  - The model is distributed under the CC-BY-SA-NC license: https://creativecommons.org/licenses/by-nc-sa/4.0 #>  - Visit https://github.com/jwijffels/udpipe.models.ud.2.5 for model license details. #>  - For a list of all models and their licenses (most models you can download with this package have either a CC-BY-SA or a CC-BY-SA-NC license) read the documentation at ?udpipe_download_model. For building your own models: visit the documentation by typing vignette('udpipe-train', package = 'udpipe') #> Downloading finished, model stored at '/home/runner/work/finnsurveytext/finnsurveytext/vignettes/web_only/finnish-ftb-ud-2.5-191206.udpipe'  q11_2 <- fst_prepare(data = dev_coop,                      question = 'q11_2',                      id = 'fsd_id',                      model = \"ftb\",                      stopword_list = \"nltk\",                      weights = 'paino',                      add_cols = NULL,                      manual = FALSE,                      manual_list = \"\")  q11_3 <- fst_prepare(data = dev_coop,                      question = 'q11_3',                      id = 'fsd_id',                      model = \"ftb\",                      stopword_list = \"nltk\",                      weights = 'paino',                      add_cols = NULL,                      manual = FALSE,                      manual_list = \"\") knitr::kable(head(dev_coop, 5)) knitr::kable(head(q11_1, 10))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"initial-eda","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis","what":"Initial EDA","title":"InDetail5-AnalysisExample1","text":"begin , let’s look differences types reponses get open-ended questions using EDA functions. (details functions, see “Tutorial2-Data_Exploration”) First, let’s consider functions: fst_summarise() - table indicate response rate, word counts. fst_pos() - table counts number proportion words part--speech tag. fst_length_summary() - table gives average quartile values lengths responses words sentences. differences types responses can seen exploratory data analysis results :","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"summarise","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis > Initial EDA","what":"Summarise","title":"InDetail5-AnalysisExample1","text":"Remarks: 3 questions high (97/98%) response rate. Q11_1 contains unique words. 3 questions similar number unique lemmas.","code":"knitr::kable(   fst_summarise(data = q11_1, desc = \"Q11_1\") ) knitr::kable(   fst_summarise(data = q11_2, desc = \"Q11_2\") ) knitr::kable(   fst_summarise(data = q11_3, desc = \"Q11_3\") )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"pos-summary","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis > Initial EDA","what":"POS Summary","title":"InDetail5-AnalysisExample1","text":"Remarks: Nouns common word type across 3 questions. Q11_1 also commonly contains adjectives, adverbs nouns. Q11_2 similar number nouns verbs, smaller number adjectives adverbs. Q11_3 also lot adjectives verbs adverbs.","code":"knitr::kable(   fst_pos(data = q11_1) ) knitr::kable(   fst_pos(data = q11_2) ) knitr::kable(   fst_pos(data = q11_3) )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"length-summary","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis > Initial EDA","what":"Length Summary","title":"InDetail5-AnalysisExample1","text":"Remarks: 3 questions responses one sentence. question longest response 30 words responses 5 words.","code":"knitr::kable(   fst_length_summary(     data = q11_1,     desc = \"Q11_1\",     incl_sentences = TRUE   ) ) knitr::kable(   fst_length_summary(     data = q11_2,     desc = \"Q11_2\",     incl_sentences = TRUE   ) ) knitr::kable(   fst_length_summary(     data = q11_3,     desc = \"Q11_2\",     incl_sentences = TRUE   ) )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"most-common-words-and-n-grams","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis","what":"Most common words and n-grams","title":"InDetail5-AnalysisExample1","text":"Now, lets create tables common words, bigrams trigrams using following functions: fst_freq() fst_ngrams()","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"top-words","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis > Most common words and n-grams","what":"Top Words","title":"InDetail5-AnalysisExample1","text":"(leave default norm “occurrence” based number words set responses question.) can see clear ‘top’ set words question: Q11_1: ‘ihminen’ (man) Q11_2: ‘kehitysmaa’ (developing country), ‘auttaa’ (helps) Q11_3: ‘köyhyys’ (poverty), ‘nälänhätä’ (famine), ‘sota’ (war)","code":"fst_freq(   data = q11_1,   number = 10,   norm = \"number_words\",   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = TRUE,   name = \"Q11_1\" ) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. fst_freq(   data = q11_2,   number = 10,   norm = \"number_words\",   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = TRUE,   name = \"Q11_2\" ) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. fst_freq(   data = q11_3,   number = 10,   norm = \"number_words\",   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = TRUE,   name = \"Q11_3\" ) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed."},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"bi-grams-and-trigrams","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis > Most common words and n-grams","what":"Bi-grams and Trigrams","title":"InDetail5-AnalysisExample1","text":"look common sets two three words.       Recall open-ended questions q11_1 Continue sentence: developing country country … (Open question) q11_2 Continue sentence: Development cooperation activity … (Open question) q11_3 Continue sentence: world’s three biggest problems … (Open question) Common themes raised bigrams trigrams: Discussion groups people living poverty ‘suuri osa ihminen’, ‘tarvita apu’, ‘ihminen nähdaä nälkä’, ‘osa ihminen elää’, ihminen elää köyhyysraja’, ‘köyhä ihminen’ Themes helping countries develop ‘auttaa kehitysmaa’, ‘pyrkiä auttaa kehitysmaa’, ‘auttaa kehitysmaa auttaa’ Concern lack water, clean water ‘vesi puute’, ‘puhdas vesi’, ‘puhdas vesi puute’","code":"fst_ngrams(   data = q11_1,   number = 10,   ngrams = 2,   norm = \"number_words\",   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = TRUE,   name = \"Q11_1\" ) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed. fst_ngrams(   data = q11_1,   number = 10,   ngrams = 3,   norm = \"number_words\",   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = TRUE,   name = \"Q11_1\" ) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed. fst_ngrams(   data = q11_2,   number = 10,   ngrams = 2,   norm = \"number_words\",   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = TRUE,   name = \"Q11_2\" ) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed. fst_ngrams(   data = q11_2,   number = 10,   ngrams = 3,   norm = \"number_words\",   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = TRUE,   name = \"Q11_2\" ) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed. fst_ngrams(   data = q11_3,   number = 10,   ngrams = 2,   norm = \"number_words\",   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = TRUE,   name = \"Q11_3\" ) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed. fst_ngrams(   data = q11_3,   number = 10,   ngrams = 3,   norm = \"number_words\",   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   strict = TRUE,   name = \"Q11_3\" ) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed."},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"wordcloud","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis > Most common words and n-grams","what":"Wordcloud","title":"InDetail5-AnalysisExample1","text":"fst_wordcloud() can see frequent words identified also coming wordclouds.","code":"fst_wordcloud(   data = q11_1,   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   max = 100 ) fst_wordcloud(   data = q11_2,   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   max = 100 ) fst_wordcloud(   data = q11_3,   pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"),   max = 100 )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"exploring-some-concept-networks-based-on-thematic-frequently-occurring-words","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis","what":"Exploring some concept networks based on thematic frequently occurring words","title":"InDetail5-AnalysisExample1","text":"fst_concept_network() Based frequently-occurring words, chosen lists “concepts” question create Concept Networks based . can see threshold can used make sure concept network isn’t “busy” removing less frequent connection words. Similarly, can see length “concepts” list impacts “busyness” plot. Often, “concept” list appropriate threshold product trial error.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"q11_1","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis > Exploring some concept networks based on thematic frequently occurring words","what":"Q11_1","title":"InDetail5-AnalysisExample1","text":"q11_1 Continue sentence: developing country country … (Open question) (English) standard living, poor, man     Remarks: , first plot may best. can see threshold required many words displayed can get insight use words (English, ‘standard--living’ ‘poor’). can see plots 3 4, including common word, ‘ihminen’ (‘human ’ ‘man’), threshold 3 advisable.","code":"fst_concept_network(   data = q11_1,   concepts = \"elintaso, köyhä\",   threshold = NULL,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_1 - No threshold\" ) fst_concept_network(   data = q11_1,   concepts = \"elintaso, köyhä\",   threshold = 3,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_1 - Threshold = 3\" ) fst_concept_network(   data = q11_1,   concepts = \"elintaso, köyhä, ihminen\",   threshold = NULL,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_1 - No threshold\" ) fst_concept_network(   data = q11_1,   concepts = \"elintaso, köyhä, ihminen\",   threshold = 3,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_1 - Threshold = 3\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"q11_2","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis > Exploring some concept networks based on thematic frequently occurring words","what":"Q11_2","title":"InDetail5-AnalysisExample1","text":"q11_2 Continue sentence: Development cooperation activity … (Open question) (English) development, help, strive, country, man      Remarks: Q11_2, plots 1-3 show include 5 words (‘developing country’, ‘help’, ‘strive’, ‘country’, ‘man’) subset threshold required, threshold 10 large gain additional words Network. threshold = 5 seems appropriate.","code":"fst_concept_network(   data = q11_2,   concepts = \"kehitysmaa, auttaa, pyrkiä, maa, ihminen\",   threshold = NULL,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_2 - No threshold\" ) fst_concept_network(   data = q11_2,   concepts = \"kehitysmaa, auttaa, pyrkiä, maa, ihminen\",   threshold = 10,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_2 - Threshold = 10\" ) fst_concept_network(   data = q11_2,   concepts = \"kehitysmaa, auttaa, pyrkiä, maa, ihminen\",   threshold = 5,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_2 - Threshold = 5\" ) fst_concept_network(   data = q11_2,   concepts = \"kehitysmaa, auttaa, pyrkiä\",   threshold = NULL,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_2 - No threshold\" ) fst_concept_network(   data = q11_2,   concepts = \"kehitysmaa, auttaa, pyrkiä\",   threshold = 5,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_2 - Threshold = 5\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"q11_3","dir":"Articles > Web_only","previous_headings":"Demonstration of analysis > Exploring some concept networks based on thematic frequently occurring words","what":"Q11_3","title":"InDetail5-AnalysisExample1","text":"q11_3 Continue sentence: world’s three biggest problems … (Open question) (English) poverty, famine, war, climate change, lack      Remarks: Q11_3, can see concept word list short (single word) thresholds generally required, longer concept lists, setting threshold = 2 threshold = 3, can simplify improve plot little crowded case. “best” threshold generally matter context analyst’s discretion.","code":"fst_concept_network(   data = q11_3,   concepts = \"köyhyys\",   threshold = NULL,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_3 - köyhyys / No threshold\" ) fst_concept_network(   data = q11_3,   concepts = \"köyhyys, puute\",   threshold = NULL,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_3 - köyhyys, puute / No threshold\" ) fst_concept_network(   data = q11_3,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\",   threshold = NULL,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_3 - No threshold\" ) fst_concept_network(   data = q11_3,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\",   threshold = 3,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_3 - Threshold = 3\" ) fst_concept_network(   data = q11_3,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute\",   threshold = 2,   norm = \"number_words\",   pos_filter = NULL,   title = \"Q11_3 - Threshold = 2\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"conclusion","dir":"Articles > Web_only","previous_headings":"","what":"Conclusion","title":"InDetail5-AnalysisExample1","text":", can see different settings create different Concept Networks. “right” setting Concept Network, worthwhile exploring Concept Networks result different concept words thresholds investigate data identify trends warrant analysis. Initial Concept Network settings can informed functions finnsurveytext, choosing frequent words/n-grams considering insights wordclouds.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail5-AnalysisExample1.html","id":"citation","dir":"Articles > Web_only","previous_headings":"","what":"Citation","title":"InDetail5-AnalysisExample1","text":"Finnish Children Youth Foundation: Young People’s Views Development Cooperation 2012 [dataset]. Version 2.0 (2019-01-22). Finnish Social Science Data Archive distributor]. http://urn.fi/urn:nbn:fi:fsd:T-FSD2821","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"introduction","dir":"Articles > Web_only","previous_headings":"","what":"Introduction","title":"InDetail6-AnalysisExample2","text":"tutorial demonstrates use package analyse survey question. intended demonstrate use package start finish detail. example, look responses split gender expected might look variety different splits data analysis.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"installation-of-package-","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Installation of package.","title":"InDetail6-AnalysisExample2","text":"package installed, can load finnsurveytext package : (required packages dplyr stringr also installed currently installed environment.)","code":"library(finnsurveytext)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"the-question","dir":"Articles > Web_only","previous_headings":"Introduction","what":"The Question","title":"InDetail6-AnalysisExample2","text":"look Q11_3 data Development Cooperation 2012 survey data included sample data package. specific question ’re looking follows: q11_3 Continue sentence: world’s three biggest problems … (Open question) prepared data can found data/fst_dev_coop.rda.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"overview-of-functions","dir":"Articles > Web_only","previous_headings":"Introduction","what":"Overview of Functions","title":"InDetail6-AnalysisExample2","text":"tutorial covers functions throughout package. details functions, see previous tutorials. following excerpt prepared datasets:","code":"knitr::kable(head(fst_dev_coop, 10))"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"analysis","dir":"Articles > Web_only","previous_headings":"","what":"Analysis","title":"InDetail6-AnalysisExample2","text":"First, let’s consider data get initial information responses question. run following functions: fst_summarise() fst_pos() fst_length_summary() fst_wordcloud() information functions, please see “InDetail2-DataExploration”. Remarks: overall response rate 97%. might wonder, response rate consist across different types survey participants? Responses consist mostly adjectives (10% words stopwords-removed responses), nouns (80%) verbs (7%) Responses question 1 32 words, 1 3 sentences. responses seem 1 sentence average 4-5 words.  Remarks: Top words seem ‘nälänhätä’, ‘köyhyys’, ‘sota’ Next tier common words might : ‘vesi’ ‘puute’, ‘ihminen’, ‘ilmastonmuutos’, ‘ahneus’, ‘nälka’, ‘epätasa-arvo’","code":"knitr::kable(   fst_summarise(fst_dev_coop) ) knitr::kable(   fst_pos(fst_dev_coop) ) knitr::kable(   fst_length_summary(fst_dev_coop) ) fst_wordcloud(fst_dev_coop)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"translations","dir":"Articles > Web_only","previous_headings":"Analysis","what":"Translations","title":"InDetail6-AnalysisExample2","text":"‘köyhyys’ = poverty ‘nälänhätä’ = famine ‘sota’ = war ‘vesi’ = water ‘puute’ = lack ‘ihminen’ = human ‘ilmastonmuutos’ = climate change ‘ahneus’ = greed ‘nälka’ = hunger ‘epätasa-arvo’ = inequality","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"top-n-grams","dir":"Articles > Web_only","previous_headings":"Analysis","what":"Top N-Grams","title":"InDetail6-AnalysisExample2","text":"Next, look common words (unigrams), bigrams trigrams data.    Remarks: Note set norm = 'number_resp' ’re interested proportion responses list specific word. Around 1/4 respondents list ‘nälänhätä’, ‘köyhyys’, ‘sota’ ‘puhdas vesi’ = clean water ‘vesi puute’ = lack water ‘puhdas vesi puute’ common trigram. can assume answers like ‘nälänhätä sota’ probably listing different terms responses. , bigrams meaningful others.","code":"fst_freq(fst_dev_coop, 10, strict = FALSE, norm = \"number_resp\") #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, words occurring equally often as the `number` cutoff word will be displayed. fst_ngrams(fst_dev_coop, 10, ngrams = 2, strict = FALSE, norm = \"number_resp\") #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, n-grams occurring equally often as the `number` cutoff n-gram will be displayed. fst_ngrams(fst_dev_coop, 10, ngrams = 3, strict = FALSE, norm = \"number_resp\") #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, n-grams occurring equally often as the `number` cutoff n-gram will be displayed."},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"a-concept-network","dir":"Articles > Web_only","previous_headings":"Analysis","what":"A Concept Network","title":"InDetail6-AnalysisExample2","text":"Next, let’s look Concept Networks look gender. (detail Concept Network functions, see “InDetail3-ConceptNetworkOverview”.) Concept Network function can used visualise words occur around words interest. , set norm = 'number_resp'.    Remarks: ‘threshold’ graph seems meaningful . can see top three words, red, highly related use. can see relationship ‘vesi’ ‘puute’ ‘puhdas’ plot. Now, let’s add words :   Remarks: ‘-threshold’ plot busy. introduce threshold, plot splits two indicates two groups words “connected” responses. Now, let’s see people talk water tend also say responses:   Remarks: , see strong relationship ‘puute’ ‘puhdas’ , less-frequent words .","code":"fst_concept_network(fst_dev_coop,   concepts = \"köyhyys, nälänhätä, sota\",   title = \"Q11_3 - No threshold\",   norm = \"number_resp\" ) fst_concept_network(fst_dev_coop,   concepts = \"köyhyys, nälänhätä, sota\",   threshold = 5,   title = \"Q11_3 - Threshold = 5\",   norm = \"number_resp\" ) fst_concept_network(fst_dev_coop,   concepts = \"köyhyys, nälänhätä, sota\",   threshold = 3,   title = \"Q11_3 - Threshold = 3\",   norm = \"number_resp\" ) fst_concept_network(fst_dev_coop,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute, ihminen, vesi, epätasa-arvo\",   title = \"Q11_3 - Lots of words\",   norm = \"number_words\" ) fst_concept_network(fst_dev_coop,   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos, puute, ihminen, vesi, epätasa-arvo\",   title = \"Q11_3 - Lots of words, threshold = 3\", threshold = 5,   norm = \"number_resp\" ) fst_concept_network(fst_dev_coop, concepts = \"vesi\", title = \"Q11_3 - Vesi\") fst_concept_network(fst_dev_coop, concepts = \"puute, puhdas, vesi\", title = \"Q11_3 - \")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"comparison-in-responses-split-by-gender","dir":"Articles > Web_only","previous_headings":"","what":"Comparison in responses split by gender","title":"InDetail6-AnalysisExample2","text":"Now ’ve looked responses whole, consider whether gender impacts word choice. details comparison functions, please refer “InDetail4-ComparisonFunctions”.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"summary-comparisons","dir":"Articles > Web_only","previous_headings":"Comparison in responses split by gender","what":"Summary Comparisons","title":"InDetail6-AnalysisExample2","text":"start comparison looking summary functions: fst_summarise_compare() fst_pos_compare() fst_length_compare() Remarks: Relatively consistent response rate, slightly higher (98%) response rate females consistent distribution across word type! - slightly less nouns (75%) NA much smaller sample Lengths responses similar across cohorts","code":"knitr::kable(   fst_summarise_compare(fst_dev_coop, field = 'gender') ) knitr::kable(   fst_pos_compare(fst_dev_coop, field = 'gender') ) knitr::kable(   fst_length_compare(fst_dev_coop, field = 'gender') )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"wordclouds","dir":"Articles > Web_only","previous_headings":"Comparison in responses split by gender","what":"Wordclouds","title":"InDetail6-AnalysisExample2","text":"Now let’s consider comparison cloud. (weight responses weight column included formatted data, exclude responses without gender listed.)  Based comparison cloud, looks like: ‘epätasa-arvo’ ‘köyhyys’, ’nälänhätä associated females ‘ilmastonmuutos’ associated males","code":"fst_comparison_cloud(   fst_dev_coop,   field = 'gender',    use_column_weights = TRUE,    exclude_nulls = TRUE,   max = 50 )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"n-grams-and-top-words","dir":"Articles > Web_only","previous_headings":"Comparison in responses split by gender","what":"N-grams and top words","title":"InDetail6-AnalysisExample2","text":"Now look common words n-grams. , continue exclude responses ‘NA’ gender go , always weight data.   Remarks: see male female respondents top 4 words, ‘nälänhätä’ frequent females males, ‘ilmastonmuutos’ conversely. may prompt research whether male survey participants show concern climate change females remainder survey. Also, note frequent words female respondents occur nearly 30% responses whereas males ’s just 20%. Perhaps less consistency males mentioning? bigrams, can identify genders frequently list lack water mostly females mention clean water.","code":"fst_freq_compare(   fst_dev_coop,    field = 'gender',   number = 10,   norm = NULL,   pos_filter = NULL,   unique_colour = \"indianred\",   strict = TRUE,    use_column_weights = TRUE,    exclude_nulls = TRUE ) fst_ngrams_compare(   fst_dev_coop,    field = 'gender',   number = 10,   ngrams = 2,   pos_filter = NULL,   unique_colour = \"indianred\",   strict = TRUE,    use_column_weights = TRUE,    exclude_nulls = TRUE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"concept-network-of-top-4-words","dir":"Articles > Web_only","previous_headings":"Comparison in responses split by gender","what":"Concept Network of top 4 words","title":"InDetail6-AnalysisExample2","text":"Now, ’ll look Concept Network 4 top words female male responses. words ‘sota’, ‘köyhyys’, nälänhätä’, ‘ilmastonmuutos’.  Remarks: Interestingly, Concept Network plots top 4 words show much larger variety terms used female respondents mention 4 common responses. part explained fact nearly 4 times many responses female participants since plots vertex weights determined cohort’s responses. Therefore, may subgroups within male respondents discuss independent themes .","code":"fst_concept_network_compare(   fst_dev_coop,    field = 'gender',   concepts = \"köyhyys, nälänhätä, sota, ilmastonmuutos\", threshold = 1,   exclude_nulls = TRUE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"conclusion","dir":"Articles > Web_only","previous_headings":"","what":"Conclusion","title":"InDetail6-AnalysisExample2","text":"tutorial demonstrates use finnsurveytext look single question consider whether gender impacts response. Gender just one many ways split data used example context. likely analyst also want split data ways age, education level, etc. Following use finnsurveytext, number hypotheses, “Male survey respondents concerned climate change females”, inform analysis survey whole.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/articles/web_only/InDetail6-AnalysisExample2.html","id":"citation","dir":"Articles > Web_only","previous_headings":"","what":"Citation","title":"InDetail6-AnalysisExample2","text":"Finnish Children Youth Foundation: Young People’s Views Development Cooperation 2012 [dataset]. Version 2.0 (2019-01-22). Finnish Social Science Data Archive [distributor]. http://urn.fi/urn:nbn:fi:fsd:T-FSD2821","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adeline Clarke. Maintainer, author. Krista Lagus. Author. Katja Laine. Author. Maria Litova. Author. Matti Nelimarkka. Author. Joni Oksanen. Author. Jaakko Peltonen. Author. Tuukka Oikarinen. Author. Jani-Matti Tirkkonen. Author. Ida Toivanen. Author. Maria Valaste. Author. Shannon Emilia Carson. Contributor. Sirpa Lappalainen. Contributor. Tuukka Puonti. Contributor. Kimmo Vehkalahti. Contributor. DARIAH-FI. Copyright holder, funder.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clarke , Lagus K, Laine K, Litova M, Nelimarkka M, Oksanen J, Peltonen J, Oikarinen T, Tirkkonen J, Toivanen , Valaste M (2024). finnsurveytext: Analyse Open-Ended Survey Responses Finnish. R package version 2.1.0, https://github.com/DARIAH-FI-Survey-Concept-Network/finnsurveytext, https://dariah-fi-survey-concept-network.github.io/finnsurveytext/.","code":"@Manual{,   title = {finnsurveytext: Analyse Open-Ended Survey Responses in Finnish},   author = {Adeline Clarke and Krista Lagus and Katja Laine and Maria Litova and Matti Nelimarkka and Joni Oksanen and Jaakko Peltonen and Tuukka Oikarinen and Jani-Matti Tirkkonen and Ida Toivanen and Maria Valaste},   year = {2024},   note = {R package version 2.1.0, https://github.com/DARIAH-FI-Survey-Concept-Network/finnsurveytext},   url = {https://dariah-fi-survey-concept-network.github.io/finnsurveytext/}, }"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Analyse Open-Ended Survey Responses in Finnish","text":"DARIAH-FI one two components FIN-CLARIAH research infrastructure project Social Sciences Humanities (SSH) Finland. DARIAH-FI involves Finnish universities research SSH. first version package, finnsurveytext, output WP3.3 DARIAH-FI. joint work package Tampere University, University Eastern Finland, University Jyvaskyla University Helsinki objective “better use unstructured textual data context Finnish surveys.” second release output WP4.1.6. main updates release : integration survey package allowing svydesign objects inputs inclusion survey response weights within tables plots simplification splitting data groups within ‘comparison functions’ enable use package multiple languages (just Finnish!)","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Analyse Open-Ended Survey Responses in Finnish","text":"Open-ended questions important challenging way obtain informative data surveys. Open-ended question data usually requires extra time investment (Fielding et al., 2013), open-ended questions particularly useful researchers want constrain respondents’ answers pre-specified selections. Open-ended questions allow respondents provide diverse answers based experience, answers probably never thought researchers. (& Schonlau, 2021.) ’s limited support conducting qualitative analysis Finnish open-ended survey responses many researchers confident analysing responses closed questions within surveys. package aims provide useful user friendly set tools social science researchers able analyse understand responses open-ended questions within surveys.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/index.html","id":"components","dir":"","previous_headings":"","what":"Components","title":"Analyse Open-Ended Survey Responses in Finnish","text":"5 sets functions included finnsurveytext package. : functions annotate survey data useful format (CoNLL-U) analysis. ‘main’ function within set, fst_prepare() combines preparation functions can run single function prepare data analysis. second set preparation functions enables use svydesign object input. file contains number functions can used exploratory data analysis summary tables, plotting frequently occurring words phrases, creating wordclouds. concept network functions single network file. concept network one way visualising data allows interpretation. concept network function uses TextRank algorithm graph-based ranking model text processing. Vertices represent words co-occurrence words shown edges. Word importance determined recursively words get weight based many words co-occur weight co-occurring words. created partner functions data exploration functions compare different sets data. comparison functions can used compare different cohorts survey respondents based responses closed questions gender, education level, location, age, etc. Similarly, script functions comparing respondent cohort responses concept networks.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/index.html","id":"function-demos-and-tutorials","dir":"","previous_headings":"","what":"Function Demos and Tutorials","title":"Analyse Open-Ended Survey Responses in Finnish","text":"Tutorials accompanying R scripts can found ‘Articles’ tab within website. tutorials use sample data outlined . BETA demo package can also launched running function finnsurveytext::runDemo() within R.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/index.html","id":"sample-data","dir":"","previous_headings":"","what":"Sample Data","title":"Analyse Open-Ended Survey Responses in Finnish","text":"repository also contains sample data can used demonstrate learn functionality finnsurveytext. sample data comes 3 surveys can found ‘data’ folder. raw data (just relevant open-ended questions) data/bullying_data.rda, data/dev_data.rda, data/english_sample_survey.rda. data folder also contains examples data preparation functions applied split sample cohort groups. raw Finnish data can also downloaded Finnish Social Science Data Archive English survey available GESIS – Leibniz Institute Social Sciences. Source: FSD3134 Lapsibarometri 2016 Open-ended questions: q3 ‘Missä asioissa olet hyvä? (Avokysymys)’, q7 ‘Kertoisitko, mitä sinun mielestäsi kiusaaminen ? (Avokysymys)’, q11 ‘Mikä tekee sinut iloiseksi? (Avokysymys)’ Licence: () openly available users without registration (CC 4.0). Link Data: https://urn.fi/urn:nbn:fi:fsd:T-FSD3134 Source: FSD2821 Nuorten ajatuksia kehitysyhteistyöstä 2012 Open-ended questions: q11_1 ‘Jatka lausetta: Kehitysmaa maa, jossa… (Avokysymys)’, q11_2 ‘Jatka lausetta: Kehitysyhteistyö toimintaa, jossa… (Avokysymys)’, q11_3’ Jatka lausetta: Maailman kolme suurinta ongelmaa ovat… (Avokysymys)’ Licence: () openly available users without registration (CC 4.0). Link Data: https://urn.fi/urn:nbn:fi:fsd:T-FSD2821 Source: GESIS – Leibniz Institute Social Sciences Open-ended question: ‘Joe’s doctor told need return two weeks find whether condition improved. Joe asked receptionist appointment, told month next available appointment. Joe ?’ Licence: CC 4.0: Attribution Link Data: https://doi.org/10.7802/2474","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/index.html","id":"installation-and-license","dir":"","previous_headings":"","what":"Installation and License","title":"Analyse Open-Ended Survey Responses in Finnish","text":"package available MIT license. released version finnsurveytext can installed CRAN: install.packages(“finnsurveytext”)","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Analyse Open-Ended Survey Responses in Finnish","text":"Fielding, J., Fielding, N., & Hughes, G. (2013). Opening open-ended survey data using qualitative software. Quality & Quantity, 47(6), 3261–3276. https://doi.org/10.1007/s11135-012-9716-1. Finnish Children Youth Foundation: Young People’s Views Development Cooperation 2012 [dataset]. Version 2.0 (2019-01-22). Finnish Social Science Data Archive [distributor]. https://urn.fi/urn:nbn:fi:fsd:T-FSD2821 , Z., & Schonlau, M. (2021). Coding Text Answers Open-ended Questions: Human Coders Statistical Learning Algorithms Make Similar Mistakes. Methods, Data, Analyses, 15(1), Article 1. https://doi.org/10.12758/mda.2020.10. Schonlau, Matthias (2022). Patient Joe (open-ended question). GESIS, Cologne. Data File Version 1.0.0, https://doi.org/10.7802/2474. Office Ombudsman Children: Child Barometer 2016 [dataset]. Version 1.0 (2016-12-09). Finnish Social Science Data Archive [distributor]. https://urn.fi/urn:nbn:fi:fsd:T-FSD3134","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/child.html","id":null,"dir":"Reference","previous_headings":"","what":"Child Barometer 2016 response data — child","title":"Child Barometer 2016 response data — child","text":"data contains background variables responses q3 \"Missä asioissa olet hyvä? (Avokysymys)\", q7 \"Kertoisitko, mitä sinun mielestäsi kiusaaminen ? (Avokysymys)\", q11 \"Mikä tekee sinut iloiseksi? (Avokysymys)\" FSD3134 Lapsibarometri 2016 dataset.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/child.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Child Barometer 2016 response data — child","text":"","code":"child"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/child.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Child Barometer 2016 response data — child","text":"## `child` dataframe 414 rows 8 columns: fsd_id FSD case id q3 'things good ?' response text q7 'think bullying ?' response text q11 'makes happy?' response text paino Weight gender Gender) major_region Major region) daycare_before_school Daycare pre-school","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/child.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Child Barometer 2016 response data — child","text":"<https://urn.fi/urn:nbn:fi:fsd:T-FSD3134>","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/dev_coop.html","id":null,"dir":"Reference","previous_headings":"","what":"Young People's Views on Development Cooperation 2012 response data — dev_coop","title":"Young People's Views on Development Cooperation 2012 response data — dev_coop","text":"data contains background variables responses q11_1 'Jatka lausetta: Kehitysmaa maa, jossa... (Avokysymys)', q11_2 'Jatka lausetta: Kehitysyhteistyö toimintaa, jossa... (Avokysymys)', q11_3' Jatka lausetta: Maailman kolme suurinta ongelmaa ovat... (Avokysymys)' FSD2821 Nuorten ajatuksia kehitysyhteistyöstä 2012 dataset.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/dev_coop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Young People's Views on Development Cooperation 2012 response data — dev_coop","text":"","code":"dev_coop"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/dev_coop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Young People's Views on Development Cooperation 2012 response data — dev_coop","text":"## `dev_coop` dataframe 925 rows 9 columns: fsd_id FSD case id q11_1 response text q11_1 q11_2 response text q11_2 q11_3 response text q11_3 paino Weight gender Gender year_of_birth Year Birth region Region Residence education_level Education level","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/dev_coop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Young People's Views on Development Cooperation 2012 response data — dev_coop","text":"<https://urn.fi/urn:nbn:fi:fsd:T-FSD2821>","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/english_sample_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"English Sample Survey Data: Patient Joe — english_sample_survey","title":"English Sample Survey Data: Patient Joe — english_sample_survey","text":"data contains English text responses \"\"Joe’s doctor told need return two weeks find whether condition improved. Joe asked receptionist appointment, told month next available appointment. Joe ?\" well categorisation responses two coders either destructive, passive, somewhat proactive, proactive.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/english_sample_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"English Sample Survey Data: Patient Joe — english_sample_survey","text":"","code":"english_sample_survey"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/english_sample_survey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"English Sample Survey Data: Patient Joe — english_sample_survey","text":"## `english_sample_survey` dataframe 585 rows 5 columns: id ID label Label: destructive, passive, somewhat proactive, proactive label_coder1 Label coder 1 label_coder2 Label coder 2 text Text response","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/english_sample_survey.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"English Sample Survey Data: Patient Joe — english_sample_survey","text":"<https://doi.org/10.7802/2474>","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_child.html","id":null,"dir":"Reference","previous_headings":"","what":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed and background variables — fst_child","title":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed and background variables — fst_child","text":"data contains responses q7 \"Kertoisitko, mitä sinun mielestäsi kiusaaminen ? (Avokysymys)\" FSD3134 Lapsibarometri 2016 dataset CoNLL-U format NLTK stopwords punctuation removed plus weights background variables.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_child.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed and background variables — fst_child","text":"","code":"fst_child"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_child.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed and background variables — fst_child","text":"## `fst_child` dataframe 1580 rows 18 columns: doc_id identifier document paragraph_id identifier paragraph sentence_id identifier sentence sentence text sentence token part token_id Word index, integer starting 1 new sentence; may range multi-word tokens; may decimal number empty nodes. token Word form punctuation symbol. lemma Lemma stem word form. upos Universal part--speech tag. xpos Language-specific part--speech tag; underscore available. feats List morphological features universal feature inventory defined language-specific extension; underscore available. head_token_id Head current word, either value token_id zero (0). dep_rel Universal dependency relation HEAD (root iff HEAD = 0) defined language-specific subtype one. deps Enhanced dependency graph form list head-deprel pairs. misc annotation. weight Weight gender Gender major_region Major region daycare_before_school Daycare pre-school","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_child.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed and background variables — fst_child","text":"<https://urn.fi/urn:nbn:fi:fsd:T-FSD3134>","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_child_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed — fst_child_2","title":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed — fst_child_2","text":"data contains responses q7 \"Kertoisitko, mitä sinun mielestäsi kiusaaminen ? (Avokysymys)\" FSD3134 Lapsibarometri 2016 dataset CoNLL-U format NLTK stopwords punctuation removed.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_child_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed — fst_child_2","text":"","code":"fst_child_2"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_child_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed — fst_child_2","text":"## `fst_child_2` dataframe 1580 rows 14 columns: doc_id identifier document paragraph_id identifier paragraph sentence_id identifier sentence sentence text sentence token part token_id Word index, integer starting 1 new sentence; may range multi-word tokens; may decimal number empty nodes. token Word form punctuation symbol. lemma Lemma stem word form. upos Universal part--speech tag. xpos Language-specific part--speech tag; underscore available. feats List morphological features universal feature inventory defined language-specific extension; underscore available. head_token_id Head current word, either value token_id zero (0). dep_rel Universal dependency relation HEAD (root iff HEAD = 0) defined language-specific subtype one. deps Enhanced dependency graph form list head-deprel pairs. misc annotation.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_child_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Child Barometer 2016 Bullying response data in CoNLL-U format with NLTK stopwords removed — fst_child_2","text":"<https://urn.fi/urn:nbn:fi:fsd:T-FSD3134>","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_compare_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Concept Network- Plot comparison Concept Network — fst_cn_compare_plot","title":"Concept Network- Plot comparison Concept Network — fst_cn_compare_plot","text":"Creates Concept Network plot list edges nodes (respective weights) indicates unique words plot comparison another Network.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_compare_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concept Network- Plot comparison Concept Network — fst_cn_compare_plot","text":"","code":"fst_cn_compare_plot(   edges,   nodes,   concepts,   unique_lemmas,   name = NULL,   concept_colour = \"#cd1719\",   unique_colour = \"#4DAF4A\",   min_edge = NULL,   max_edge = NULL,   min_node = NULL,   max_node = NULL,   title_size = 20 )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_compare_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concept Network- Plot comparison Concept Network — fst_cn_compare_plot","text":"edges Output `fst_cn_edges()`, dataframe 'edges' connecting two words. nodes Output `fst_cn_nodes()`, dataframe relevant lemmas associated pagerank. concepts List terms searched , separated commas. unique_lemmas List unique lemmas, output `fst_cn_get_unique()` name optional \"name\" plot, default `NULL` generic title (\"TextRank extracted keyword occurrences\") used. concept_colour Colour display concept words, default `\"indianred\"`. unique_colour Colour display unique words, default `\"darkgreen\"`. min_edge numeric value scale edges, smallest co_occurrence value edge across Networks plotted together. max_edge numeric value scale edges, largest co_occurrence value edge across Networks plotted together. min_node numeric value scale nodes, smallest pagerank value node across Networks plotted together. max_node numeric value scale nodes, largest pagerank value node across Networks plotted together. title_size size display plot title","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_compare_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concept Network- Plot comparison Concept Network — fst_cn_compare_plot","text":"Plot concept network concept unique words (nodes)  highlighted.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_compare_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concept Network- Plot comparison Concept Network — fst_cn_compare_plot","text":"","code":"pos_filter <- c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\") e1 <- fst_cn_edges(fst_child, \"lyödä\", pos_filter = pos_filter) e2 <- fst_cn_edges(fst_child, \"lyöminen\", pos_filter = pos_filter) n1 <- fst_cn_nodes(fst_child, e1) n2 <- fst_cn_nodes(fst_child, e2) u <- fst_cn_get_unique_separate(n1, n2)  fst_cn_compare_plot(e1, n1, \"lyödä\", unique_lemma = u)  fst_cn_compare_plot(e2, n2, \"lyöminen\", u, unique_colour = \"purple\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Concept Network - Get TextRank edges — fst_cn_edges","title":"Concept Network - Get TextRank edges — fst_cn_edges","text":"function takes string terms (separated commas) single term , using `fst_cn_search()` find words connected searched terms. , dataframe returned 'edges' two words connected together frequently-occurring n-gram containing concept term.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concept Network - Get TextRank edges — fst_cn_edges","text":"","code":"fst_cn_edges(   data,   concepts,   threshold = NULL,   norm = \"number_words\",   pos_filter = NULL )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concept Network - Get TextRank edges — fst_cn_edges","text":"data dataframe text CoNLL-U format, optional additional columns. concepts List terms search , separated commas. threshold minimum number occurrences threshold 'edge' searched term word, default `NULL`. Note, threshold applied normalisation. norm method normalising data. Valid settings `\"number_words\"` (number words responses), `\"number_resp\"` (number responses), `NULL` (raw count returned, default, also used weights applied). pos_filter List UPOS tags inclusion, default `NULL` include UPOS tags.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concept Network - Get TextRank edges — fst_cn_edges","text":"Dataframe co-occurrences two connected words.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concept Network - Get TextRank edges — fst_cn_edges","text":"","code":"con <- \"kiusata, lyöminen\" fst_cn_edges(fst_child, con, pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")) #> # A tibble: 2 × 3 #>   from      to         co_occurrence #>   <chr>     <chr>              <dbl> #> 1 lyöminen  potkiminen       0.00696 #> 2 töniminen lyöminen         0.00127 fst_cn_edges(fst_child, con, pos_filter = 'VERB, NOUN') #> # A tibble: 3 × 3 #>   from      to         co_occurrence #>   <chr>     <chr>              <dbl> #> 1 lyöminen  potkiminen       0.00886 #> 2 lyöminen  sanoa            0.00127 #> 3 töniminen lyöminen         0.00127 fst_cn_edges(fst_child, \"lyöminen\", threshold = 2, norm = \"number_resp\") #> # A tibble: 2 × 3 #>   from      to         co_occurrence #>   <chr>     <chr>              <dbl> #> 1 lyöminen  potkiminen       0.0145  #> 2 töniminen lyöminen         0.00484"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Concept Network- Get unique nodes from a list of top n-grams tables — fst_cn_get_unique","title":"Concept Network- Get unique nodes from a list of top n-grams tables — fst_cn_get_unique","text":"Takes least two tables nodes pagerank (output `fst_cn_nodes()`) finds nodes unique one table.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concept Network- Get unique nodes from a list of top n-grams tables — fst_cn_get_unique","text":"","code":"fst_cn_get_unique(list)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concept Network- Get unique nodes from a list of top n-grams tables — fst_cn_get_unique","text":"list list top nodes","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concept Network- Get unique nodes from a list of top n-grams tables — fst_cn_get_unique","text":"Dataframe words whether word unique .","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concept Network- Get unique nodes from a list of top n-grams tables — fst_cn_get_unique","text":"","code":"pos_filter <- 'NOUN, VERB, ADJ, ADV' e1 <- fst_cn_edges(fst_child, \"lyödä\", pos_filter = pos_filter) e2 <- fst_cn_edges(fst_child, \"lyöminen\", pos_filter = pos_filter) n1 <- fst_cn_nodes(fst_child, e1) n2 <- fst_cn_nodes(fst_child, e2) list_of_nodes <- list() list_of_nodes <- append(list_of_nodes, list(n1)) list_of_nodes <- append(list_of_nodes, list(n2)) fst_cn_get_unique(list_of_nodes) #> [1] \"lyödä\"      \"lyöminen\"   \"potkia\"     \"potkiminen\" \"sanoa\"      #> [6] \"toinen\"     \"töniminen\""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique_separate.html","id":null,"dir":"Reference","previous_headings":"","what":"Concept Network- Get unique nodes from separate top n-grams tables — fst_cn_get_unique_separate","title":"Concept Network- Get unique nodes from separate top n-grams tables — fst_cn_get_unique_separate","text":"Takes least two tables nodes pagerank (output `fst_cn_nodes()`) finds nodes unique one table.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique_separate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concept Network- Get unique nodes from separate top n-grams tables — fst_cn_get_unique_separate","text":"","code":"fst_cn_get_unique_separate(table1, table2, ...)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique_separate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concept Network- Get unique nodes from separate top n-grams tables — fst_cn_get_unique_separate","text":"table1 first table. table2 second table. ... tables want include.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique_separate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concept Network- Get unique nodes from separate top n-grams tables — fst_cn_get_unique_separate","text":"Dataframe words whether word unique .","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_get_unique_separate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concept Network- Get unique nodes from separate top n-grams tables — fst_cn_get_unique_separate","text":"","code":"pos_filter <- c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\") e1 <- fst_cn_edges(fst_child, \"lyödä\", pos_filter = pos_filter) e2 <- fst_cn_edges(fst_child, \"lyöminen\", pos_filter = pos_filter) n1 <- fst_cn_nodes(fst_child, e1) n2 <- fst_cn_nodes(fst_child, e2) fst_cn_get_unique_separate(n1, n2) #> [1] \"lyödä\"      \"lyöminen\"   \"potkia\"     \"potkiminen\" \"sanoa\"      #> [6] \"toinen\"     \"töniminen\""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Concept Network - Get TextRank nodes — fst_cn_nodes","title":"Concept Network - Get TextRank nodes — fst_cn_nodes","text":"function takes string terms (separated commas) single term , using `textrank_keywords()` `textrank` package, filters data based `pos_filter` ranks words filtered connected search terms.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concept Network - Get TextRank nodes — fst_cn_nodes","text":"","code":"fst_cn_nodes(data, edges, pos_filter = NULL)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concept Network - Get TextRank nodes — fst_cn_nodes","text":"data dataframe text CoNLL-U format, optional additional columns. edges Output `fst_cn_edges()`, dataframe co-occurrences two words. pos_filter List UPOS tags inclusion, default `NULL` include UPOS tags.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concept Network - Get TextRank nodes — fst_cn_nodes","text":"dataframe containing relevant lemmas associated pagerank.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concept Network - Get TextRank nodes — fst_cn_nodes","text":"","code":"con <- \"kiusata, lyöminen\" cb <- fst_child edges <- fst_cn_edges(cb, con, pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")) edges2 <- fst_cn_edges(cb, con, pos_filter = 'NOUN, VERB, ADJ, ADV') fst_cn_nodes(cb, edges, c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")) #>        lemma   pagerank #> 1   lyöminen 0.03726201 #> 2  töniminen 0.01468423 #> 3 potkiminen 0.01594663 fst_cn_nodes(cb, edges, 'NOUN, VERB, ADJ, ADV') #>        lemma   pagerank #> 1   lyöminen 0.03726201 #> 2  töniminen 0.01468423 #> 3 potkiminen 0.01594663"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Concept Network — fst_cn_plot","title":"Plot Concept Network — fst_cn_plot","text":"Creates Concept Network plot list edges nodes (respective weights).","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Concept Network — fst_cn_plot","text":"","code":"fst_cn_plot(edges, nodes, concepts, title = NULL)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Concept Network — fst_cn_plot","text":"edges Output `fst_cn_edges()`, dataframe 'edges' connecting two words. nodes Output `fst_cn_nodes()`, dataframe relevant lemmas associated pagerank. concepts List terms searched , separated commas. title Optional title plot, default `NULL` generic title (\"TextRank extracted keyword occurrences\") used.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Concept Network — fst_cn_plot","text":"Plot Concept Network.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Concept Network — fst_cn_plot","text":"","code":"con <- \"kiusata, lyöminen\" cb <- fst_child edges <- fst_cn_edges(cb, con, pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")) nodes <- fst_cn_nodes(cb, edges, c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\")) fst_cn_plot(edges = edges, nodes = nodes, concepts = con)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Concept Network - Search TextRank for concepts — fst_cn_search","title":"Concept Network - Search TextRank for concepts — fst_cn_search","text":"function takes string terms (separated commas) single term , using `textrank_keywords()` `textrank` package, filters data based `pos_filter` finds words connected search terms.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concept Network - Search TextRank for concepts — fst_cn_search","text":"","code":"fst_cn_search(data, concepts, pos_filter = NULL)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concept Network - Search TextRank for concepts — fst_cn_search","text":"data dataframe text CoNLL-U format, optional additional columns. concepts String terms search , separated commas. pos_filter List UPOS tags inclusion, default `NULL` include UPOS tags.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concept Network - Search TextRank for concepts — fst_cn_search","text":"Dataframe n-grams containing searched terms.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_cn_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concept Network - Search TextRank for concepts — fst_cn_search","text":"","code":"con <- \"kiusata, lyöminen, lyödä, potkia\" pf <- c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\") pf2 <- \"NOUN, VERB, ADJ, ADV\" fst_cn_search(fst_child, concepts = con, pos_filter = pf) #> # A tibble: 7 × 5 #>   keyword                       ngram  freq word1     word2      #>   <chr>                         <int> <int> <chr>     <chr>      #> 1 lyöminen-potkiminen               2     9 lyöminen  potkiminen #> 2 lyödä-potkia                      2     7 lyödä     potkia     #> 3 potkia-lyödä                      2     3 potkia    lyödä      #> 4 lyödä-toinen                      2     2 lyödä     toinen     #> 5 lyödä-sanoa                       2     2 lyödä     sanoa      #> 6 töniminen-lyöminen-potkiminen     3     2 töniminen lyöminen   #> 7 töniminen-lyöminen-potkiminen     3     2 lyöminen  potkiminen fst_cn_search(fst_child, concepts = con, pos_filter = pf2) #> # A tibble: 7 × 5 #>   keyword                       ngram  freq word1     word2      #>   <chr>                         <int> <int> <chr>     <chr>      #> 1 lyöminen-potkiminen               2     9 lyöminen  potkiminen #> 2 lyödä-potkia                      2     7 lyödä     potkia     #> 3 potkia-lyödä                      2     3 potkia    lyödä      #> 4 lyödä-toinen                      2     2 lyödä     toinen     #> 5 lyödä-sanoa                       2     2 lyödä     sanoa      #> 6 töniminen-lyöminen-potkiminen     3     2 töniminen lyöminen   #> 7 töniminen-lyöminen-potkiminen     3     2 lyöminen  potkiminen fst_cn_search(fst_child, concepts = con) #> # A tibble: 7 × 5 #>   keyword                       ngram  freq word1     word2      #>   <chr>                         <int> <int> <chr>     <chr>      #> 1 lyödä-potkia                      2     7 lyödä     potkia     #> 2 lyöminen-potkiminen               2     4 lyöminen  potkiminen #> 3 lyödä-toinen                      2     2 lyödä     toinen     #> 4 töniminen-lyöminen-potkiminen     3     2 töniminen lyöminen   #> 5 töniminen-lyöminen-potkiminen     3     2 lyöminen  potkiminen #> 6 tietää-lyödä-potkia               3     2 tietää    lyödä      #> 7 tietää-lyödä-potkia               3     2 lyödä     potkia"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_comparison_cloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Make comparison cloud — fst_comparison_cloud","title":"Make comparison cloud — fst_comparison_cloud","text":"Creates comparison wordcloud showing words occur differently group. Data split based different values `field` column formatted data. Results shown within plots pane.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_comparison_cloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make comparison cloud — fst_comparison_cloud","text":"","code":"fst_comparison_cloud(   data,   field,   pos_filter = NULL,   max = 100,   norm = NULL,   use_svydesign_weights = FALSE,   use_svydesign_field = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE,   exclude_nulls = FALSE,   rename_nulls = \"null_data\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_comparison_cloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make comparison cloud — fst_comparison_cloud","text":"data dataframe text CoNLL-U format additional `field` column splitting data. field Column `data` used splitting groups pos_filter List UPOS tags inclusion, default `NULL` means word types included. max maximum number words display, default `100`. norm method normalising data. Valid settings `\"number_words\"` (number words responses), `\"number_resp\"` (number responses), `NULL` (raw count returned, default, also used weights applied). use_svydesign_weights Option weight words wordcloud using weights  svydesign object containing raw data, default `FALSE` use_svydesign_field Option get `field` splitting data svydesign object, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign svydesign object contains raw data weights. use_column_weights Option weight words wordcloud using weights  formatted data includes addition `weight` column, default `FALSE` exclude_nulls Whether include NULLs `field` column, default `FALSE` rename_nulls fill NULL values `exclude_nulls = FALSE`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_comparison_cloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make comparison cloud — fst_comparison_cloud","text":"comparison cloud wordcloud package.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_comparison_cloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make comparison cloud — fst_comparison_cloud","text":"","code":"fst_comparison_cloud(fst_child, 'gender', max = 50)  s <- survey::svydesign(id=~1, weights= ~paino, data = child) i <- 'fsd_id' c2 <- fst_child_2 fst_comparison_cloud(c2, 'gender', NULL, 100, NULL, TRUE, TRUE, i, s)  T <- TRUE fst_comparison_cloud(fst_dev_coop, 'education_level', use_column_weights = T)  pf <- c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\") pf2 <- \"NOUN, VERB, ADJ, ADV\" fst_comparison_cloud(fst_dev_coop, 'gender', pos_filter = pf)  fst_comparison_cloud(fst_dev_coop, 'gender', pos_filter = pf2)  fst_comparison_cloud(fst_dev_coop, 'gender', norm = 'number_resp')"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Concept Network - Make Concept Network plot — fst_concept_network","title":"Concept Network - Make Concept Network plot — fst_concept_network","text":"function takes string terms (separated commas) single term , using `textrank_keywords()` `textrank` package, filters data based `pos_filter` finds words connected search terms. plots Concept Network based calculated weights terms frequency co-occurrences.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concept Network - Make Concept Network plot — fst_concept_network","text":"","code":"fst_concept_network(   data,   concepts,   threshold = NULL,   norm = \"number_words\",   pos_filter = NULL,   title = NULL )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concept Network - Make Concept Network plot — fst_concept_network","text":"data dataframe text CoNLL-U format, optional additional columns. concepts List terms search , separated commas. threshold minimum number occurrences threshold 'edge' searched term word, default `NULL`. Note, threshold applied normalisation. norm method normalising data. Valid settings `\"number_words\"` (number words responses), `\"number_resp\"` (number responses), `NULL` (raw count returned, default, also used weights applied). pos_filter List UPOS tags inclusion, default `NULL` include UPOS tags. title Optional title plot, default `NULL` generic title (\"TextRank extracted keyword occurrences\") used.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concept Network - Make Concept Network plot — fst_concept_network","text":"Plot Concept Network.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concept Network - Make Concept Network plot — fst_concept_network","text":"","code":"data <- fst_child con <- \"kiusata, lyöminen\" pf <- c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\") title <- \"Bullying Concept Network\" fst_concept_network(data, concepts = con, pos_filter = pf, title = title)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Concept Network- Compare and plot Concept Network — fst_concept_network_compare","title":"Concept Network- Compare and plot Concept Network — fst_concept_network_compare","text":"function takes string terms (separated commas) single term , using `textrank_keywords()` `textrank` package, filters data based `pos_filter` finds words connected search terms group. plots Concept Network group based calculated weights terms frequency co-occurrences, indicating words unique group's Network plot.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concept Network- Compare and plot Concept Network — fst_concept_network_compare","text":"","code":"fst_concept_network_compare(   data,   concepts,   field,   norm = NULL,   threshold = NULL,   pos_filter = NULL,   use_svydesign_field = FALSE,   id = \"\",   svydesign = NULL,   exclude_nulls = FALSE,   rename_nulls = \"null_data\",   title_size = 20,   subtitle_size = 15 )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concept Network- Compare and plot Concept Network — fst_concept_network_compare","text":"data dataframe text CoNLL-U format additional `field` column splitting data. concepts List terms search , separated commas. field Column `data` used splitting groups norm method normalising data. Valid settings `\"number_words\"` (number words responses, default), `\"number_resp\"` (number responses), `NULL` (raw count returned). threshold minimum number occurrences threshold 'edge' searched term word, default `NULL`. Note, threshold applied normalisation. pos_filter List UPOS tags inclusion, default `NULL` include UPOS tags. use_svydesign_field Option get `field` splitting data svydesign object, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign svydesign object contains raw data weights. exclude_nulls Whether include NULLs `field` column, default `FALSE` rename_nulls fill NULL values `exclude_nulls = FALSE`. title_size size display plot title subtitle_size size display title individual concept network","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concept Network- Compare and plot Concept Network — fst_concept_network_compare","text":"Multiple concept network plots concept unique words highlighted.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_concept_network_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concept Network- Compare and plot Concept Network — fst_concept_network_compare","text":"","code":"con1 <- \"lyödä, lyöminen\" fst_concept_network_compare(fst_child, concepts = con1, field = 'gender')  s <- survey::svydesign(id=~1, weights= ~paino, data = child) c2 <- fst_child_2 i <- 'fsd_id' fst_concept_network_compare(c2, con1, 'gender', NULL, NULL, NULL, TRUE, i, s)  con2 <- \"köyhyys, nälänhätä, sota\" fst_concept_network_compare(fst_dev_coop, con2, 'gender')"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_dev_coop.html","id":null,"dir":"Reference","previous_headings":"","what":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed and background variables. — fst_dev_coop","title":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed and background variables. — fst_dev_coop","text":"data contains responses Development Cooperation q11_3 dataset CoNLL-U format NLTK stopwords punctuation removed plus weights background variables.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_dev_coop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed and background variables. — fst_dev_coop","text":"","code":"fst_dev_coop"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_dev_coop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed and background variables. — fst_dev_coop","text":"## `fst_dev_coop` dataframe 4192 rows 19 columns: doc_id identifier document paragraph_id identifier paragraph sentence_id identifier sentence sentence text sentence token part token_id Word index, integer starting 1 new sentence; may range multi-word tokens; may decimal number empty nodes. token Word form punctuation symbol. lemma Lemma stem word form. upos Universal part--speech tag. xpos Language-specific part--speech tag; underscore available. feats List morphological features universal feature inventory defined language-specific extension; underscore available. head_token_id Head current word, either value token_id zero (0). dep_rel Universal dependency relation HEAD (root iff HEAD = 0) defined language-specific subtype one. deps Enhanced dependency graph form list head-deprel pairs. misc annotation. weight Weight gender Gender year_of_birth Year Birth region Region Residence","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_dev_coop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed and background variables. — fst_dev_coop","text":"<https://urn.fi/urn:nbn:fi:fsd:T-FSD2821>","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_dev_coop_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed — fst_dev_coop_2","title":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed — fst_dev_coop_2","text":"data contains responses Development Cooperation q11_3 dataset CoNLL-U format NLTK stopwords punctuation removed.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_dev_coop_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed — fst_dev_coop_2","text":"","code":"fst_dev_coop_2"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_dev_coop_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed — fst_dev_coop_2","text":"## `fst_dev_coop_2` dataframe 4192 rows 14 columns: doc_id identifier document paragraph_id identifier paragraph sentence_id identifier sentence sentence text sentence token part token_id Word index, integer starting 1 new sentence; may range multi-word tokens; may decimal number empty nodes. token Word form punctuation symbol. lemma Lemma stem word form. upos Universal part--speech tag. xpos Language-specific part--speech tag; underscore available. feats List morphological features universal feature inventory defined language-specific extension; underscore available. head_token_id Head current word, either value token_id zero (0). dep_rel Universal dependency relation HEAD (root iff HEAD = 0) defined language-specific subtype one. deps Enhanced dependency graph form list head-deprel pairs. misc annotation.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_dev_coop_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Young People's Views on Development Cooperation 2012 q11_3 response data in CoNLL-U format with NTLK stopwords removed — fst_dev_coop_2","text":"<https://urn.fi/urn:nbn:fi:fsd:T-FSD2821>","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_find_stopwords.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available Finnish stopwords lists — fst_find_stopwords","title":"Get available Finnish stopwords lists — fst_find_stopwords","text":"Returns tibble containing available stopword lists language, contents, size lists.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_find_stopwords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available Finnish stopwords lists — fst_find_stopwords","text":"","code":"fst_find_stopwords(language = \"fi\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_find_stopwords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get available Finnish stopwords lists — fst_find_stopwords","text":"language two-letter ISO code language stopword list","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_find_stopwords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available Finnish stopwords lists — fst_find_stopwords","text":"tibble containing stopwords lists.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_find_stopwords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get available Finnish stopwords lists — fst_find_stopwords","text":"","code":"fst_find_stopwords() #> # A tibble: 3 × 3 #>   Name          Stopwords   Length    #>   <chr>         <list>      <list>    #> 1 nltk          <chr [229]> <int [1]> #> 2 snowball      <chr [68]>  <int [1]> #> 3 stopwords-iso <chr [847]> <int [1]> fst_find_stopwords(language = 'et') #> # A tibble: 1 × 3 #>   Name          Stopwords  Length    #>   <chr>         <list>     <list>    #> 1 stopwords-iso <chr [35]> <int [1]>"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate open-ended survey responses in Finnish into CoNLL-U format — fst_format","title":"Annotate open-ended survey responses in Finnish into CoNLL-U format — fst_format","text":"Creates dataframe CoNLL-U format dataframe containing Finnish text using [udpipe] package Finnish language model plus additional columns included `weights` columns added `add_cols`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate open-ended survey responses in Finnish into CoNLL-U format — fst_format","text":"","code":"fst_format(data, question, id, model = \"ftb\", weights = NULL, add_cols = NULL)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate open-ended survey responses in Finnish into CoNLL-U format — fst_format","text":"data dataframe survey responses contains open-ended question. question column dataframe contains open-ended question. id column dataframe contains ids responses. model language model available [udpipe]. `\"ftb\"` (default) `\"tdt\"` recognised shorthand \"finnish-ftb\" \"finnish-tdt\". full list available [udpipe] documentation. weights Optional, column dataframe contains respective weights response. add_cols Optional, column (columns) dataframe contain information like retain (instance, covariate columnns splitting data comparison plots).","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate open-ended survey responses in Finnish into CoNLL-U format — fst_format","text":"Dataframe annotated text CoNLL-U format plus additional  columns.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate open-ended survey responses in Finnish into CoNLL-U format — fst_format","text":"","code":"if (FALSE) { # \\dontrun{ i <- \"fsd_id\" fst_format(data = child, question = \"q7\", id = i) fst_format(data = child, question = \"q7\", id = i, model = \"tdt\") fst_format(data = child, question = \"q7\", id = i, weights=\"paino\") cols <- c(\"gender\", \"major_region\", \"daycare_before_school\") fst_format(child, question = \"q7\", id = i, add_cols = cols) fst_format(child, question = \"q7\", id = i, add_cols = \"gender, major_region\") fst_format(child, question = 'q7', id = i, model = 'swedish-talbanken') unlink(\"finnish-ftb-ud-2.5-191206.udpipe\") unlink(\"finnish-tdt-ud-2.5-191206.udpipe\") unlink(\"swedish-talkbanken-ud-2.5-191206.udpipe\") } # }"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format_svydesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate open-ended survey responses in Finnish within a `svydesign` object into CoNLL-U format — fst_format_svydesign","title":"Annotate open-ended survey responses in Finnish within a `svydesign` object into CoNLL-U format — fst_format_svydesign","text":"Creates dataframe CoNLL-U format `svydesign` object including Finnish text using [udpipe] package Finnish language model plus weights included `svydesign` object columns added `add_cols`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format_svydesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate open-ended survey responses in Finnish within a `svydesign` object into CoNLL-U format — fst_format_svydesign","text":"","code":"fst_format_svydesign(   svydesign,   question,   id,   model = \"ftb\",   use_weights = TRUE,   add_cols = NULL )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format_svydesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate open-ended survey responses in Finnish within a `svydesign` object into CoNLL-U format — fst_format_svydesign","text":"svydesign `svydesign` object contains open-ended question. question column dataframe contains open-ended question. id column dataframe contains ids responses. model language model available [udpipe], `\"ftb\"` (default) `\"tdt\"` available Finnish. use_weights Optional, whether use weights within `svydesign` add_cols Optional, column (columns) dataframe contain information like retain (instance, dimension columnns splitting data comparison plots).","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format_svydesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate open-ended survey responses in Finnish within a `svydesign` object into CoNLL-U format — fst_format_svydesign","text":"Dataframe annotated text CoNLL-U format plus additional  columns.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_format_svydesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate open-ended survey responses in Finnish within a `svydesign` object into CoNLL-U format — fst_format_svydesign","text":"","code":"if (FALSE) { # \\dontrun{ i <- \"fsd_id\" svy_child <- survey::svydesign(id=~1, weights= ~paino, data = child) fst_format_svydesign(svy_child, question = 'q7', id = 'fsd_id') fst_format_svydesign(svy_child, question = 'q7', id = i, use_weights = FALSE) cols <- c('gender', 'major_region') fst_format_svydesign(svy_child, 'q7', 'fsd_id', add_cols = cols)  svy_dev <- survey::svydesign(id = ~1, weights = ~paino, data = dev_coop) fst_format_svydesign(svy_dev, 'q11_1', 'fsd_id', add_cols = 'gender, region')  fst_format_svydesign(svy_dev, 'q11_2', 'fsd_id', 'finnish-ftb') unlink(\"finnish-ftb-ud-2.5-191206.udpipe\") unlink(\"finnish-tdt-ud-2.5-191206.udpipe\") } # }"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and Plot Top Words — fst_freq","title":"Find and Plot Top Words — fst_freq","text":"Creates plot frequently-occurring words (unigrams) within data. Optionally, weights can provided either `weight` column formatted data, `svydesign` object raw (preformatted) data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and Plot Top Words — fst_freq","text":"","code":"fst_freq(   data,   number = 10,   norm = NULL,   pos_filter = NULL,   strict = TRUE,   name = NULL,   use_svydesign_weights = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and Plot Top Words — fst_freq","text":"data dataframe text CoNLL-U format, optional additional columns. number number top words return, default `10`. norm method normalising data. Valid settings `\"number_words\"` (number words responses, default), `\"number_resp\"` (number responses), `NULL` (raw count returned). pos_filter List UPOS tags inclusion, default `NULL` means word types included. strict Whether strictly cut-`number` (ties alphabetically ordered), default `TRUE`. name optional \"name\" plot add title, default `NULL`. use_svydesign_weights Option weight words plot using weights `svydesign` containing raw data, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign `svydesign` contains raw data weights, required `use_svydesign_weights = TRUE`. use_column_weights Option weight words plot using weights  formatted data includes addition `weight` column, default `FALSE`","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find and Plot Top Words — fst_freq","text":"Plot top words.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find and Plot Top Words — fst_freq","text":"","code":"fst_freq(fst_child, number = 12, norm = 'number_resp',  name = \"All\") #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>   fst_freq(fst_child, use_column_weights = TRUE) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>   s <- survey::svydesign(id=~1, weights= ~paino, data = child) i <- 'fsd_id' fst_freq(fst_child_2, use_svydesign_weights = TRUE, svydesign = s, id = i) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare and plot top words — fst_freq_compare","title":"Compare and plot top words — fst_freq_compare","text":"Find top unique top words different groups participants. Data split based different values `field` column formatted data. Results shown within plots pane.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare and plot top words — fst_freq_compare","text":"","code":"fst_freq_compare(   data,   field,   number = 10,   norm = NULL,   pos_filter = NULL,   strict = TRUE,   use_svydesign_weights = FALSE,   use_svydesign_field = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE,   exclude_nulls = FALSE,   rename_nulls = \"null_data\",   unique_colour = \"indianred\",   title_size = 20,   subtitle_size = 15 )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare and plot top words — fst_freq_compare","text":"data dataframe text CoNLL-U format additional `field` column splitting data. field Column `data` used splitting groups number number n-grams return, default `10`. norm method normalising data. Valid settings `\"number_words\"` (number words responses), `\"number_resp\"` (number responses), `NULL` (raw count returned, default, also used weights applied). pos_filter List UPOS tags inclusion, default `NULL` means word types included. strict Whether strictly cut-`number` (ties alphabetically ordered), default `TRUE`. use_svydesign_weights Option weight words wordcloud using weights  svydesign object containing raw data, default `FALSE` use_svydesign_field Option get `field` splitting data svydesign object, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign svydesign object contains raw data weights. use_column_weights Option weight words wordcloud using weights  formatted data includes addition `weight` column, default `FALSE` exclude_nulls Whether include NULLs `field` column, default `FALSE` rename_nulls fill NULL values `exclude_nulls = FALSE`. unique_colour Colour display unique words, default `\"indianred\"`. title_size size display plot title subtitle_size size display title individual top words plot","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare and plot top words — fst_freq_compare","text":"Plots frequent words plots pane unique words  highlighted.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare and plot top words — fst_freq_compare","text":"","code":"fst_freq_compare(fst_child, 'gender', number = 10, norm = \"number_resp\")  fst_freq_compare(fst_child, 'gender', number = 10, norm = NULL)  s <- survey::svydesign(id=~1, weights= ~paino, data = child) c2 <- fst_child_2 c <- fst_child g <- 'gender' fst_freq_compare(c2, g, 10, NULL, NULL, TRUE, TRUE, TRUE, 'fsd_id', s)  fst_freq_compare(c, g, use_column_weights = TRUE, strict = FALSE)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Top Words plot — fst_freq_plot","title":"Make Top Words plot — fst_freq_plot","text":"Plots common words.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Top Words plot — fst_freq_plot","text":"","code":"fst_freq_plot(table, number = NULL, name = NULL)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Top Words plot — fst_freq_plot","text":"table Output `fst_freq_table()` `fst_ngrams_table()`. number Optional number n-grams title, default `NULL`. name optional \"name\" plot add title, default `NULL`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Top Words plot — fst_freq_plot","text":"Plot top words.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Top Words plot — fst_freq_plot","text":"","code":"pf <- c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\") top_words <- fst_freq_table(fst_child, number = 15, pos_filter = pf) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  fst_freq_plot(top_words, number = 15, name = \"Bullying\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Top Words Table — fst_freq_table","title":"Make Top Words Table — fst_freq_table","text":"Creates table frequently-occurring words (unigrams) within data. Optionally, weights can provided either `weight` column formatted data, `svydesign` object raw (preformatted) data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Top Words Table — fst_freq_table","text":"","code":"fst_freq_table(   data,   number = 10,   norm = NULL,   pos_filter = NULL,   strict = TRUE,   use_svydesign_weights = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Top Words Table — fst_freq_table","text":"data dataframe text CoNLL-U format, optional additional columns. number number top words return, default `10`. norm method normalising data. Valid settings `\"number_words\"` (number words responses), `\"number_resp\"` (number responses), `NULL` (raw count returned, default, also used weights applied). pos_filter List UPOS tags inclusion, default `NULL` means word types included. strict Whether strictly cut-`number` (ties alphabetically ordered), default `TRUE`. use_svydesign_weights Option weight words table using weights  `svydesign` containing raw data, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign `svydesign` contains raw data weights, required `use_svydesign_weights = TRUE`. use_column_weights Option weight words table using weights  formatted data includes addition `weight` column, default `FALSE`","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Top Words Table — fst_freq_table","text":"table frequently occurring words data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_freq_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Top Words Table — fst_freq_table","text":"","code":"pf <- c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\") pf2 <- \"NOUN, VERB, ADJ, ADV\" fst_freq_table(fst_child, number = 15, strict = FALSE, pos_filter = pf) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, words occurring equally often as the `number` cutoff word will be displayed.  #>  #>         words occurrence #> 1       lyödä         71 #> 2    lyöminen         53 #> 3        paha         42 #> 4       sanoa         33 #> 5       tehdä         33 #> 6      tietää         32 #> 7       tulla         29 #> 8       ottaa         28 #> 9      potkia         27 #> 10    kiusata         26 #> 11 potkiminen         24 #> 12    haukkua         22 #> 13     kaveri         22 #> 14  töniminen         22 #> 15     toinen         17 #> 16      tyhmä         17 #> 17      tönia         17 fst_freq_table(fst_child, number = 15, strict = FALSE, pos_filter = pf2) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, words occurring equally often as the `number` cutoff word will be displayed.  #>  #>         words occurrence #> 1       lyödä         71 #> 2    lyöminen         53 #> 3        paha         42 #> 4       sanoa         33 #> 5       tehdä         33 #> 6      tietää         32 #> 7       tulla         29 #> 8       ottaa         28 #> 9      potkia         27 #> 10    kiusata         26 #> 11 potkiminen         24 #> 12    haukkua         22 #> 13     kaveri         22 #> 14  töniminen         22 #> 15     toinen         17 #> 16      tyhmä         17 #> 17      tönia         17 fst_freq_table(fst_child, norm = 'number_words') #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  #>       words occurrence #> 1    toinen      0.075 #> 2     lyödä      0.045 #> 3  lyöminen      0.034 #> 4      joku      0.029 #> 5      paha      0.027 #> 6     tehdä      0.022 #> 7     sanoa      0.021 #> 8    tietää      0.020 #> 9     jokin      0.019 #> 10    tulla      0.019 fst_freq_table(fst_child, use_column_weights = TRUE) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  #>       words occurrence #> 1    toinen  17538.566 #> 2     lyödä  10472.019 #> 3  lyöminen   7837.492 #> 4      joku   6794.576 #> 5      paha   6329.575 #> 6     tehdä   5056.231 #> 7     sanoa   4865.005 #> 8    tietää   4677.499 #> 9     jokin   4484.374 #> 10    tulla   4402.931 c2 <- fst_child_2 s <- survey::svydesign(id=~1, weights= ~paino, data = child) i <- 'fsd_id' fst_freq_table(c2, use_svydesign_weights = TRUE, svydesign = s, id = i) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  #>       words occurrence #> 1    toinen  17538.566 #> 2     lyödä  10472.019 #> 3  lyöminen   7837.492 #> 4      joku   6794.576 #> 5      paha   6329.575 #> 6     tehdä   5056.231 #> 7     sanoa   4865.005 #> 8    tietää   4677.499 #> 9     jokin   4484.374 #> 10    tulla   4402.931"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique n-grams from a list of top n-grams tables — fst_get_unique_ngrams","title":"Get unique n-grams from a list of top n-grams tables — fst_get_unique_ngrams","text":"Takes list containing least two tables n-grams frequencies (either output `fst_freq_table()` `fst_ngrams_table()`) finds n-grams unique one table.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique n-grams from a list of top n-grams tables — fst_get_unique_ngrams","text":"","code":"fst_get_unique_ngrams(list_of_top_ngrams)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique n-grams from a list of top n-grams tables — fst_get_unique_ngrams","text":"list_of_top_ngrams list top ngrams","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique n-grams from a list of top n-grams tables — fst_get_unique_ngrams","text":"Dataframe words whether word unique .","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get unique n-grams from a list of top n-grams tables — fst_get_unique_ngrams","text":"","code":"top_child <- fst_freq_table(fst_child) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  top_dev <- fst_freq_table(fst_dev_coop) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  list_of_top_words <- list() list_of_top_words <- append(list_of_top_words, list(top_child)) list_of_top_words <- append(list_of_top_words, list(top_dev)) fst_get_unique_ngrams(list_of_top_words) #> # A tibble: 20 × 2 #>    words          word_type #>    <fct>          <chr>     #>  1 jokin          Unique    #>  2 tulla          Unique    #>  3 tietää         Unique    #>  4 sanoa          Unique    #>  5 tehdä          Unique    #>  6 paha           Unique    #>  7 joku           Unique    #>  8 lyöminen       Unique    #>  9 lyödä          Unique    #> 10 toinen         Unique    #> 11 nälkä          Unique    #> 12 ahneus         Unique    #> 13 epätasa-arvo   Unique    #> 14 vesi           Unique    #> 15 ihminen        Unique    #> 16 puute          Unique    #> 17 ilmastonmuutos Unique    #> 18 sota           Unique    #> 19 nälänhätä      Unique    #> 20 köyhyys        Unique"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams_separate.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique n-grams from separate top n-grams tables — fst_get_unique_ngrams_separate","title":"Get unique n-grams from separate top n-grams tables — fst_get_unique_ngrams_separate","text":"Takes least two separate tables n-grams frequencies (either output `fst_freq_table()` `fst_ngrams_table()`) finds n-grams unique one table.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams_separate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique n-grams from separate top n-grams tables — fst_get_unique_ngrams_separate","text":"","code":"fst_get_unique_ngrams_separate(table1, table2, ...)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams_separate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique n-grams from separate top n-grams tables — fst_get_unique_ngrams_separate","text":"table1 first n-grams table. table2 second n-grams table. ... n-grams tables want include.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams_separate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique n-grams from separate top n-grams tables — fst_get_unique_ngrams_separate","text":"Dataframe words whether word unique .","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_get_unique_ngrams_separate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get unique n-grams from separate top n-grams tables — fst_get_unique_ngrams_separate","text":"","code":"top_child <- fst_freq_table(fst_child) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  top_dev <- fst_freq_table(fst_dev_coop) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  fst_get_unique_ngrams_separate(top_child, top_dev) #> # A tibble: 20 × 2 #>    words          word_type #>    <fct>          <chr>     #>  1 jokin          Unique    #>  2 tulla          Unique    #>  3 tietää         Unique    #>  4 sanoa          Unique    #>  5 tehdä          Unique    #>  6 paha           Unique    #>  7 joku           Unique    #>  8 lyöminen       Unique    #>  9 lyödä          Unique    #> 10 toinen         Unique    #> 11 nälkä          Unique    #> 12 ahneus         Unique    #> 13 epätasa-arvo   Unique    #> 14 vesi           Unique    #> 15 ihminen        Unique    #> 16 puute          Unique    #> 17 ilmastonmuutos Unique    #> 18 sota           Unique    #> 19 nälänhätä      Unique    #> 20 köyhyys        Unique"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_join_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge N-grams table with unique words — fst_join_unique","title":"Merge N-grams table with unique words — fst_join_unique","text":"Merges list unique words `fst_get_unique_ngrams()` output `fst_freq_table()` `fst_ngrams_table()` unique words can displayed comparison plots.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_join_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge N-grams table with unique words — fst_join_unique","text":"","code":"fst_join_unique(table, unique_table)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_join_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge N-grams table with unique words — fst_join_unique","text":"table Output `fst_freq_table()` `fst_ngrams_table()`. unique_table Output `fst_get_unique_ngrams()`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_join_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge N-grams table with unique words — fst_join_unique","text":"table top n-grams, frequency, whether n-gram  \"unique\".","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_join_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge N-grams table with unique words — fst_join_unique","text":"","code":"top_child <- fst_freq_table(fst_child) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  top_dev <- fst_freq_table(fst_dev_coop) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  unique_words <- fst_get_unique_ngrams_separate(top_child, top_dev) fst_join_unique(top_child, unique_words) #>       words occurrence word_type #> 1    toinen        118    Unique #> 2     lyödä         71    Unique #> 3  lyöminen         53    Unique #> 4      joku         46    Unique #> 5      paha         43    Unique #> 6     tehdä         34    Unique #> 7     sanoa         33    Unique #> 8    tietää         32    Unique #> 9     jokin         30    Unique #> 10    tulla         30    Unique fst_join_unique(top_dev, unique_words) #>             words occurrence word_type #> 1         köyhyys        258    Unique #> 2       nälänhätä        239    Unique #> 3            sota        231    Unique #> 4  ilmastonmuutos        141    Unique #> 5           puute        117    Unique #> 6         ihminen        105    Unique #> 7            vesi         98    Unique #> 8    epätasa-arvo         87    Unique #> 9          ahneus         84    Unique #> 10          nälkä         81    Unique"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare response lengths — fst_length_compare","title":"Compare response lengths — fst_length_compare","text":"Compare length text responses different groups participants. Data split based different values `field` column formatted data. Results shown within plots pane.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare response lengths — fst_length_compare","text":"","code":"fst_length_compare(   data,   field,   incl_sentences = TRUE,   exclude_nulls = FALSE,   rename_nulls = \"null_data\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare response lengths — fst_length_compare","text":"data dataframe text CoNLL-U format additional `field` column splitting data. field Column `data` used splitting groups incl_sentences Whether include sentence data table, default `TRUE`. exclude_nulls Whether include NULLs `field` column, default `FALSE` rename_nulls fill NULL values `exclude_nulls = FALSE`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare response lengths — fst_length_compare","text":"Dataframe summarising response lengths.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare response lengths — fst_length_compare","text":"","code":"fst_length_compare(fst_child, 'gender') #>        Description Respondents  Mean Minimum    Q1 Median    Q3 Maximum #>             <char>       <int> <num>   <int> <num>  <num> <num>   <int> #> 1:      boy- Words         212 4.802       1     2      3     6      31 #> 2:  boy- Sentences         212 1.156       1     1      1     1       4 #> 3:     girl- Words         201 5.896       1     3      4     8      37 #> 4: girl- Sentences         201 1.284       1     1      1     1       6 fst_length_compare(fst_dev_coop, 'education_level', incl_sentences = FALSE) #>                                        Description Respondents  Mean Minimum #>                                             <char>       <int> <num>   <int> #> 1:                Matriculation examination- Words         440 5.809       1 #> 2:                        Primary education- Words          44 4.000       1 #> 3: Upper secondary vocational qualification- Words          86 5.023       3 #> 4:                                null_data- Words         350 5.457       1 #>       Q1 Median    Q3 Maximum #>    <num>  <num> <num>   <int> #> 1:     4      5     6      32 #> 2:     3      4     4      18 #> 3:     4      4     6      14 #> 4:     4      5     6      20"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Length Summary Table — fst_length_summary","title":"Make Length Summary Table — fst_length_summary","text":"Creates table summarising  distribution length responses.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Length Summary Table — fst_length_summary","text":"","code":"fst_length_summary(data, desc = \"All responses\", incl_sentences = TRUE)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Length Summary Table — fst_length_summary","text":"data dataframe text CoNLL-U format, optional additional columns. desc optional string describing responses table, default `\"responses\"`. incl_sentences Whether include sentence data table, default `TRUE`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Length Summary Table — fst_length_summary","text":"Table summarising distribution lengths responses.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_length_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Length Summary Table — fst_length_summary","text":"","code":"fst_length_summary(fst_child, incl_sentences = FALSE) #> # A tibble: 1 × 8 #>   Description          Respondents  Mean Minimum    Q1 Median    Q3 Maximum #>   <chr>                      <int> <dbl>   <int> <dbl>  <int> <dbl>   <int> #> 1 All responses- Words         413  5.33       1     2      4     7      37 fst_length_summary(fst_dev_coop, desc = \"Q11_3\") #> # A tibble: 2 × 8 #>   Description      Respondents  Mean Minimum    Q1 Median    Q3 Maximum #>   <chr>                  <int> <dbl>   <int> <dbl>  <dbl> <dbl>   <int> #> 1 Q11_3- Words             920  5.52       1     4      5     6      32 #> 2 Q11_3- Sentences         920  1.01       1     1      1     1       3"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and Plot Top N-grams — fst_ngrams","title":"Find and Plot Top N-grams — fst_ngrams","text":"Creates plot frequently-occurring n-grams within data. Optionally, weights can provided either `weight` column formatted data, `svydesign` object raw (preformatted) data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and Plot Top N-grams — fst_ngrams","text":"","code":"fst_ngrams(   data,   number = 10,   ngrams = 1,   norm = NULL,   pos_filter = NULL,   strict = TRUE,   name = NULL,   use_svydesign_weights = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and Plot Top N-grams — fst_ngrams","text":"data dataframe text CoNLL-U format, optional additional columns. number number top words return, default `10`. ngrams type n-grams, default `1`. norm method normalising data. Valid settings `\"number_words\"` (number words responses, default), `\"number_resp\"` (number responses), `NULL` (raw count returned). pos_filter List UPOS tags inclusion, default `NULL` means word types included. strict Whether strictly cut-`number` (ties alphabetically ordered), default `TRUE`. name optional \"name\" plot add title, default `NULL`. use_svydesign_weights Option weight words plot using weights  `svydesign` containing raw data, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign `svydesign` contains raw data weights, required `use_svydesign_weights = TRUE`. use_column_weights Option weight words plot using weights  formatted data includes addition `weight` column, default `FALSE`","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find and Plot Top N-grams — fst_ngrams","text":"Plot top n-grams","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find and Plot Top N-grams — fst_ngrams","text":"","code":"fst_ngrams(fst_child, 12, ngrams = 2, strict = FALSE, name = \"All\") #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  With `strict` = FALSE, n-grams occurring equally often as the `number` cutoff n-gram will be displayed.  #>   c <- fst_child_2 s <- survey::svydesign(id=~1, weights= ~paino, data = child) i <- 'fsd_id' T <- TRUE fst_ngrams(c, ngrams = 3, use_svydesign_weights = T, svydesign = s, id = i) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed.  #>"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare and plot top n-grams — fst_ngrams_compare","title":"Compare and plot top n-grams — fst_ngrams_compare","text":"Find top unique top n-grams different groups participants. Data split based different values `field` column formatted data. Results shown within plots pane.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare and plot top n-grams — fst_ngrams_compare","text":"","code":"fst_ngrams_compare(   data,   field,   number = 10,   ngrams = 1,   norm = NULL,   pos_filter = NULL,   strict = TRUE,   use_svydesign_weights = FALSE,   use_svydesign_field = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE,   exclude_nulls = FALSE,   rename_nulls = \"null_data\",   unique_colour = \"indianred\",   title_size = 20,   subtitle_size = 15 )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare and plot top n-grams — fst_ngrams_compare","text":"data dataframe text CoNLL-U format additional `field` column splitting data. field Column `data` used splitting groups number number n-grams return, default `10`. ngrams type n-grams return, default `1`. norm method normalising data. Valid settings `\"number_words\"` (number words responses), `\"number_resp\"` (number responses), `NULL` (raw count returned, default, also used weights applied). pos_filter List UPOS tags inclusion, default `NULL` means word types included. strict Whether strictly cut-`number` (ties alphabetically ordered), default `TRUE`. use_svydesign_weights Option weight words wordcloud using weights  svydesign object containing raw data, default `FALSE` use_svydesign_field Option get `field` splitting data svydesign object, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign svydesign object contains raw data weights. use_column_weights Option weight words wordcloud using weights  formatted data includes addition `weight` column, default `FALSE` exclude_nulls Whether include NULLs `field` column, default `FALSE` rename_nulls fill NULL values `exclude_nulls = FALSE`. unique_colour Colour display unique words, default `\"indianred\"`. title_size size display plot title subtitle_size size display title individual top ngrams plot","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare and plot top n-grams — fst_ngrams_compare","text":"Plots top n-grams plots pane unique n-grams  highlighted.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare and plot top n-grams — fst_ngrams_compare","text":"","code":"c <- fst_child g <- 'gender' fst_ngrams_compare(c, g, ngrams = 4, number = 10, norm = \"number_resp\")  fst_ngrams_compare(c, g, ngrams = 2, number = 10, norm = NULL)  s <- survey::svydesign(id=~1, weights= ~paino, data = child) c2 <- fst_child_2 fst_ngrams_compare(c2, g, 10, 3, NULL, NULL, TRUE, TRUE, TRUE, 'fsd_id', s)  fst_ngrams_compare(c, g, 10, 2, use_column_weights = TRUE, strict = TRUE)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot comparison n-grams — fst_ngrams_compare_plot","title":"Plot comparison n-grams — fst_ngrams_compare_plot","text":"Plots frequency n-grams unique n-grams highlighted.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot comparison n-grams — fst_ngrams_compare_plot","text":"","code":"fst_ngrams_compare_plot(   table,   number = 10,   ngrams = 1,   unique_colour = \"indianred\",   name = NULL,   override_title = NULL,   title_size = 20 )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot comparison n-grams — fst_ngrams_compare_plot","text":"table table n-grams, output `get_unique_ngrams()`. number number n-grams, default `10`. ngrams type n-grams, default `1`. unique_colour Colour display unique words, default `\"indianred\"`. name optional \"name\" plot, default `NULL`. override_title optional title override automatic one plot. Default `NULL`. `NULL`, title plot `number` \"Common 'Term'\". 'Term' \"Words\", \"Bigrams\", \"N-Grams\" N > 2. title_size size display plot title","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot comparison n-grams — fst_ngrams_compare_plot","text":"Plot top n-grams unique terms highlighted.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_compare_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot comparison n-grams — fst_ngrams_compare_plot","text":"","code":"top_child <- fst_freq_table(fst_child) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  top_dev <- fst_freq_table(fst_dev_coop) #> Note: #>  Words with equal occurrence are presented in alphabetical order.  #>  By default, words are presented in order to the `number` cutoff word.  #>  This means that equally-occurring later-alphabetically words beyond the cutoff word will not be displayed. #>  unique_words <- fst_get_unique_ngrams_separate(top_child, top_dev) top_child_u <- fst_join_unique(top_child, unique_words) top_dev_u <- fst_join_unique(top_dev, unique_words) fst_ngrams_compare_plot(top_child_u, ngrams = 1, name = \"Child\")  fst_ngrams_compare_plot(top_dev_u, ngrams = 1, name = \"Dev\", title_size = 10)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make N-grams plot — fst_ngrams_plot","title":"Make N-grams plot — fst_ngrams_plot","text":"Plots frequency n-grams.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make N-grams plot — fst_ngrams_plot","text":"","code":"fst_ngrams_plot(table, number = NULL, ngrams = 1, name = NULL)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make N-grams plot — fst_ngrams_plot","text":"table Output `fst_get_top_words()` `fst_get_top_ngrams()`. number Optional number n-grams title, default `NULL`. ngrams type n-grams, default `1`. name optional \"name\" plot add title, default `NULL`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make N-grams plot — fst_ngrams_plot","text":"Plot top n-grams.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make N-grams plot — fst_ngrams_plot","text":"","code":"top_bigrams <- fst_ngrams_table(fst_child, ngrams = 2, number = 15) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed.  #>  fst_ngrams_plot(top_bigrams, ngrams = 2, number = 15, name = \"Children\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Top N-grams Table — fst_ngrams_table","title":"Make Top N-grams Table — fst_ngrams_table","text":"Creates table frequently-occurring n-grams within data. Optionally, weights can provided either `weight` column formatted data, `svydesign` object raw (preformatted) data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Top N-grams Table — fst_ngrams_table","text":"","code":"fst_ngrams_table(   data,   number = 10,   ngrams = 1,   norm = NULL,   pos_filter = NULL,   strict = TRUE,   use_svydesign_weights = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Top N-grams Table — fst_ngrams_table","text":"data dataframe text CoNLL-U format, optional additional columns. number number n-grams return, default `10`. ngrams type n-grams return, default `1`. norm method normalising data. Valid settings `\"number_words\"` (number words responses), `\"number_resp\"` (number responses), `NULL` (raw count returned, default, also used weights applied). pos_filter List UPOS tags inclusion, default `NULL` means word types included. strict Whether strictly cut-`number` (ties alphabetically ordered), default `TRUE`. use_svydesign_weights Option weight words table using weights  `svydesign` containing raw data, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign `svydesign` contains raw data weights, required `use_svydesign_weights = TRUE`. use_column_weights Option weight words table using weights  formatted data includes addition `weight` column, default `FALSE`","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Top N-grams Table — fst_ngrams_table","text":"table frequently occurring n-grams data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Top N-grams Table — fst_ngrams_table","text":"","code":"pf <- c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\") pf2 <- \"NOUN, VERB, ADJ, ADV\" fst_ngrams_table(fst_child, norm = NULL) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed.  #>  #>       words occurrence #> 1    toinen        118 #> 2     lyödä         71 #> 3  lyöminen         53 #> 4      joku         46 #> 5      paha         43 #> 6     tehdä         34 #> 7     sanoa         33 #> 8    tietää         32 #> 9     jokin         30 #> 10    tulla         30 fst_ngrams_table(fst_child, ngrams = 2, norm = \"number_resp\") #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed.  #>  #>                  words occurrence #> 1  lyöminen potkiminen      0.041 #> 2           joku lyödä      0.027 #> 3         lyödä potkia      0.027 #> 4          osata sanoa      0.022 #> 5       haukkua toinen      0.019 #> 6          sanoa jokin      0.017 #> 7          tulla mieli      0.017 #> 8          joku toinen      0.015 #> 9         ottaa toinen      0.015 #> 10          paha mieli      0.015 fst_ngrams_table(fst_child, ngrams = 2, pos_filter = pf) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed.  #>  #>                  words occurrence #> 1  lyöminen potkiminen         17 #> 2         lyödä potkia         12 #> 3          osata sanoa          9 #> 4          tulla mieli          9 #> 5         potkia lyödä          8 #> 6         tietää lyödä          7 #> 7           paha mieli          6 #> 8      pyytää anteeksi          6 #> 9           tehdä paha          6 #> 10  töniminen lyöminen          6 fst_ngrams_table(fst_child, ngrams = 2, pos_filter = pf2) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed.  #>  #>                  words occurrence #> 1  lyöminen potkiminen         17 #> 2         lyödä potkia         12 #> 3          osata sanoa          9 #> 4          tulla mieli          9 #> 5         potkia lyödä          8 #> 6         tietää lyödä          7 #> 7           paha mieli          6 #> 8      pyytää anteeksi          6 #> 9           tehdä paha          6 #> 10  töniminen lyöminen          6 c2 <- fst_child_2 s <- survey::svydesign(id=~1, weights= ~paino, data = child) i <- 'fsd_id' fst_ngrams_table(c2, use_svydesign_weights = TRUE, svydesign = s, id = i) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed.  #>  #>       words occurrence #> 1    toinen  17538.566 #> 2     lyödä  10472.019 #> 3  lyöminen   7837.492 #> 4      joku   6794.576 #> 5      paha   6329.575 #> 6     tehdä   5056.231 #> 7     sanoa   4865.005 #> 8    tietää   4677.499 #> 9     jokin   4484.374 #> 10    tulla   4402.931 fst_ngrams_table(fst_child, use_column_weights = TRUE, ngrams = 3) #> Note: #>  N-grams with equal occurrence are presented in alphabetical order.  #>  By default, n-grams are presented in order to the `number` cutoff n-gram.  #>  This means that equally-occurring later-alphabetically n-grams beyond the cutoff n-gram will not be displayed.  #>  #>                            words occurrence #> 1               tehdä jokin paha    462.179 #> 2              joku lyödä potkia    452.272 #> 3               tulla paha mieli    452.028 #> 4              ottaa toinen lelu    450.961 #> 5  töniminen lyöminen potkiminen    449.407 #> 6               joku lyödä tönia    439.120 #> 7                 jokin run sana    307.801 #> 8                sanoa jokin run    307.801 #> 9          semmoinen sanoa jokin    307.801 #> 10             toinen tulla paha    307.801"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table2.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Top N-grams Table 2 — fst_ngrams_table2","title":"Make Top N-grams Table 2 — fst_ngrams_table2","text":"Creates table frequently-occurring n-grams within data. Optionally, weights can provided either `weight` column formatted data, `svydesign` object raw (preformatted) data. Equivalent `fst_get_top_ngrams` print message ties.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Top N-grams Table 2 — fst_ngrams_table2","text":"","code":"fst_ngrams_table2(   data,   number = 10,   ngrams = 1,   norm = NULL,   pos_filter = NULL,   strict = TRUE,   use_svydesign_weights = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Top N-grams Table 2 — fst_ngrams_table2","text":"data dataframe text CoNLL-U format, optional additional columns. number number n-grams return, default `10`. ngrams type n-grams return, default `1`. norm method normalising data. Valid settings `\"number_words\"` (number words responses, default), `\"number_resp\"` (number responses), `NULL` (raw count returned). pos_filter List UPOS tags inclusion, default `NULL` means word types included. strict Whether strictly cut-`number` (ties alphabetically ordered), default `TRUE`. use_svydesign_weights Option weight words table using weights `svydesign` containing raw data, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign `svydesign` contains raw data weights, required `use_svydesign_weights = TRUE`. use_column_weights Option weight words table using weights  formatted data includes addition `weight` column, default `FALSE`","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Top N-grams Table 2 — fst_ngrams_table2","text":"table frequently occurring n-grams data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_ngrams_table2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Top N-grams Table 2 — fst_ngrams_table2","text":"","code":"fst_ngrams_table2(fst_child, norm = NULL) #>       words occurrence #> 1    toinen        118 #> 2     lyödä         71 #> 3  lyöminen         53 #> 4      joku         46 #> 5      paha         43 #> 6     tehdä         34 #> 7     sanoa         33 #> 8    tietää         32 #> 9     jokin         30 #> 10    tulla         30 fst_ngrams_table2(fst_child, ngrams = 2, norm = \"number_resp\") #>                  words occurrence #> 1  lyöminen potkiminen      0.041 #> 2           joku lyödä      0.027 #> 3         lyödä potkia      0.027 #> 4          osata sanoa      0.022 #> 5       haukkua toinen      0.019 #> 6          sanoa jokin      0.017 #> 7          tulla mieli      0.017 #> 8          joku toinen      0.015 #> 9         ottaa toinen      0.015 #> 10          paha mieli      0.015 c <- fst_child_2 s <- survey::svydesign(id=~1, weights= ~paino, data = child) i <- 'fsd_id' T <- TRUE fst_ngrams_table2(c, 10, 2, use_svydesign_weights = T, svydesign = s, id = i) #>                  words occurrence #> 1  lyöminen potkiminen   2526.929 #> 2           joku lyödä   1638.069 #> 3         lyödä potkia   1635.803 #> 4          osata sanoa   1312.750 #> 5       haukkua toinen   1172.935 #> 6          sanoa jokin   1046.724 #> 7          tulla mieli   1028.394 #> 8         toinen tulla    914.070 #> 9          tehdä jokin    903.588 #> 10  töniminen lyöminen    898.814"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Make POS Summary Table — fst_pos","title":"Make POS Summary Table — fst_pos","text":"Creates summary table input CoNLL-U data counts number words part--speech tag within data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make POS Summary Table — fst_pos","text":"","code":"fst_pos(data)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make POS Summary Table — fst_pos","text":"data dataframe text CoNLL-U format, optional additional columns.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make POS Summary Table — fst_pos","text":"dataframe count proportion UPOS tag data  full name tag.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make POS Summary Table — fst_pos","text":"","code":"fst_pos(fst_child) #>     UPOS                  UPOS_Name Count Proportion #> 1    ADJ                  adjective   156      0.099 #> 2    ADP                 adposition     5      0.003 #> 3    ADV                     adverb    98      0.062 #> 4    AUX                  auxiliary    36      0.023 #> 5  CCONJ   coordinating conjunction     1      0.001 #> 6    DET                 determiner    72      0.046 #> 7   INTJ               interjection    16      0.010 #> 8   NOUN                       noun   455      0.288 #> 9    NUM                    numeral     2      0.001 #> 10  PART                   particle    38      0.024 #> 11  PRON                    pronoun   148      0.094 #> 12 PROPN                proper noun     6      0.004 #> 13 PUNCT                punctuation     0      0.000 #> 14 SCONJ  subordinating conjunction     0      0.000 #> 15   SYM                     symbol     0      0.000 #> 16  VERB                       verb   545      0.345 #> 17     X                      other     2      0.001 fst_pos(fst_dev_coop) #>     UPOS                  UPOS_Name Count Proportion #> 1    ADJ                  adjective   389      0.093 #> 2    ADP                 adposition    24      0.006 #> 3    ADV                     adverb    64      0.015 #> 4    AUX                  auxiliary     3      0.001 #> 5  CCONJ   coordinating conjunction     3      0.001 #> 6    DET                 determiner    28      0.007 #> 7   INTJ               interjection     2      0.000 #> 8   NOUN                       noun  3311      0.790 #> 9    NUM                    numeral     5      0.001 #> 10  PART                   particle    29      0.007 #> 11  PRON                    pronoun    12      0.003 #> 12 PROPN                proper noun    31      0.007 #> 13 PUNCT                punctuation     0      0.000 #> 14 SCONJ  subordinating conjunction     0      0.000 #> 15   SYM                     symbol     1      0.000 #> 16  VERB                       verb   278      0.066 #> 17     X                      other    12      0.003"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare parts-of-speech — fst_pos_compare","title":"Compare parts-of-speech — fst_pos_compare","text":"Count POS type different groups participants. Data split based different values `field` column formatted data. Results shown within plots pane.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare parts-of-speech — fst_pos_compare","text":"","code":"fst_pos_compare(data, field, exclude_nulls = FALSE, rename_nulls = \"null_data\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare parts-of-speech — fst_pos_compare","text":"data dataframe text CoNLL-U format additional `field` column splitting data. field Column `data` used splitting groups exclude_nulls Whether include NULLs `field` column, default `FALSE` rename_nulls fill NULL values `exclude_nulls = FALSE`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare parts-of-speech — fst_pos_compare","text":"Table POS tag counts groups.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_pos_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare parts-of-speech — fst_pos_compare","text":"","code":"fst_pos_compare(fst_child, 'gender') #>     UPOS        Part_of_Speech_Name boy-Count boy-Prop girl-Count girl-Prop #> 1    ADJ                  adjective        61    0.085         95     0.111 #> 2    ADP                 adposition         2    0.003          3     0.003 #> 3    ADV                     adverb        48    0.067         50     0.058 #> 4    AUX                  auxiliary        22    0.031         14     0.016 #> 5  CCONJ   coordinating conjunction         1    0.001          0     0.000 #> 6    DET                 determiner        30    0.042         42     0.049 #> 7   INTJ               interjection        11    0.015          5     0.006 #> 8   NOUN                       noun       204    0.283        251     0.292 #> 9    NUM                    numeral         0    0.000          2     0.002 #> 10  PART                   particle        16    0.022         22     0.026 #> 11  PRON                    pronoun        66    0.092         82     0.095 #> 12 PROPN                proper noun         4    0.006          2     0.002 #> 13 PUNCT                punctuation         0    0.000          0     0.000 #> 14 SCONJ  subordinating conjunction         0    0.000          0     0.000 #> 15   SYM                     symbol         0    0.000          0     0.000 #> 16  VERB                       verb       254    0.352        291     0.339 #> 17     X                      other         2    0.003          0     0.000 fst_pos_compare(fst_dev_coop, 'region') #>     UPOS        Part_of_Speech_Name Etelä-Suomi-Count Etelä-Suomi-Prop #> 1    ADJ                  adjective                79            0.101 #> 2    ADP                 adposition                 4            0.005 #> 3    ADV                     adverb                 8            0.010 #> 4    AUX                  auxiliary                 1            0.001 #> 5  CCONJ   coordinating conjunction                 1            0.001 #> 6    DET                 determiner                 6            0.008 #> 7   INTJ               interjection                 0            0.000 #> 8   NOUN                       noun               610            0.776 #> 9    NUM                    numeral                 1            0.001 #> 10  PART                   particle                 2            0.003 #> 11  PRON                    pronoun                 1            0.001 #> 12 PROPN                proper noun                 3            0.004 #> 13 PUNCT                punctuation                 0            0.000 #> 14 SCONJ  subordinating conjunction                 0            0.000 #> 15   SYM                     symbol                 0            0.000 #> 16  VERB                       verb                69            0.088 #> 17     X                      other                 1            0.001 #>    Helsinki-Uusimaa-Count Helsinki-Uusimaa-Prop Länsi-Suomi-Count #> 1                     118                 0.098               105 #> 2                      11                 0.009                 6 #> 3                      20                 0.017                22 #> 4                       1                 0.001                 1 #> 5                       0                 0.000                 1 #> 6                      10                 0.008                 7 #> 7                       2                 0.002                 0 #> 8                     936                 0.774              1028 #> 9                       1                 0.001                 3 #> 10                     15                 0.012                 9 #> 11                      4                 0.003                 3 #> 12                     12                 0.010                14 #> 13                      0                 0.000                 0 #> 14                      0                 0.000                 0 #> 15                      1                 0.001                 0 #> 16                     72                 0.060                75 #> 17                      6                 0.005                 3 #>    Länsi-Suomi-Prop Pohjois- ja Itä-Suomi-Count Pohjois- ja Itä-Suomi-Prop #> 1             0.082                          84                      0.093 #> 2             0.005                           3                      0.003 #> 3             0.017                          13                      0.014 #> 4             0.001                           0                      0.000 #> 5             0.001                           1                      0.001 #> 6             0.005                           5                      0.006 #> 7             0.000                           0                      0.000 #> 8             0.805                         725                      0.802 #> 9             0.002                           0                      0.000 #> 10            0.007                           3                      0.003 #> 11            0.002                           4                      0.004 #> 12            0.011                           2                      0.002 #> 13            0.000                           0                      0.000 #> 14            0.000                           0                      0.000 #> 15            0.000                           0                      0.000 #> 16            0.059                          62                      0.069 #> 17            0.002                           2                      0.002 #>    null_data-Count null_data-Prop #> 1                3          0.188 #> 2                0          0.000 #> 3                1          0.062 #> 4                0          0.000 #> 5                0          0.000 #> 6                0          0.000 #> 7                0          0.000 #> 8               12          0.750 #> 9                0          0.000 #> 10               0          0.000 #> 11               0          0.000 #> 12               0          0.000 #> 13               0          0.000 #> 14               0          0.000 #> 15               0          0.000 #> 16               0          0.000 #> 17               0          0.000"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Read In and format Finnish survey text responses — fst_prepare","title":"Read In and format Finnish survey text responses — fst_prepare","text":"Creates dataframe CoNLL-U format dataframe containing Finnish text using [udpipe] package Finnish language model plus additional columns included `weights` columns added `add_cols`. Stopwords punctuation optionally removed `stopword_list` argument \"none\".","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read In and format Finnish survey text responses — fst_prepare","text":"","code":"fst_prepare(   data,   question,   id,   model = \"ftb\",   stopword_list = \"nltk\",   language = \"fi\",   weights = NULL,   add_cols = NULL,   manual = FALSE,   manual_list = \"\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read In and format Finnish survey text responses — fst_prepare","text":"data dataframe survey responses contains open-ended question. question column dataframe contains open-ended question. id column dataframe contains ids responses. model language model available [udpipe]. `\"ftb\"` (default) `\"tdt\"` recognised shorthand \"finnish-ftb\" \"finnish-tdt\". full list available [udpipe] documentation. stopword_list valid stopword list, default `\"nltk\"`, `\"manual\"` can used indicate manual list provided, `\"none\"` want remove stopwords known 'source' `stopwords::stopwords` language two-letter ISO code language stopword list weights Optional, column dataframe contains respective weights response. add_cols Optional, column (columns) dataframe contain information like retain (instance, dimension columnns splitting data comparison plots). manual optional boolean indicate manual list provided, `stopword_list = \"manual\"` can also instead used. manual_list manual list stopwords.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read In and format Finnish survey text responses — fst_prepare","text":"dataframe Finnish text CoNLL-U format.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read In and format Finnish survey text responses — fst_prepare","text":"`fst_prepare_conllu()` produces dataframe containing Finnish survey text  responses CoNLL-U format stopwords optionally removed.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read In and format Finnish survey text responses — fst_prepare","text":"","code":"if (FALSE) { # \\dontrun{ i <- \"fsd_id\" cb <- child dev <- dev_coop fst_prepare(data = cb, question = \"q7\", id = 'fsd_id', weights = 'paino') fst_prepare(data = dev, question = \"q11_2\", id = i, add_cols = c('gender')) fst_prepare(data = dev, question = \"q11_3\", id = i, add_cols = 'gender') fst_prepare(data = child, question = \"q7\", id = i, model = 'swedish-lines') unlink(\"finnish-ftb-ud-2.5-191206.udpipe\") unlink(\"finnish-tdt-ud-2.5-191206.udpipe\") unlink(\"swedish-lines-ud-2.5-191206.udpipe\") } # }"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare_svydesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Read In and format Finnish survey text responses from `svydesign` object — fst_prepare_svydesign","title":"Read In and format Finnish survey text responses from `svydesign` object — fst_prepare_svydesign","text":"Creates dataframe CoNLL-U format `svydesign` object including Finnish text using [udpipe] package Finnish language model plus weights included `svydesign` object columns added `add_cols`.Stopwords punctuation optionally removed `stopword_list` argument \"none\".","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare_svydesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read In and format Finnish survey text responses from `svydesign` object — fst_prepare_svydesign","text":"","code":"fst_prepare_svydesign(   svydesign,   question,   id,   model = \"ftb\",   stopword_list = \"nltk\",   language = \"fi\",   use_weights = TRUE,   add_cols = NULL,   manual = FALSE,   manual_list = \"\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare_svydesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read In and format Finnish survey text responses from `svydesign` object — fst_prepare_svydesign","text":"svydesign `svydesign` object contains open-ended question. question column dataframe contains open-ended question. id column dataframe contains ids responses. model language model available [udpipe], `\"ftb\"` (default) `\"tdt\"` available Finnish. stopword_list valid Finnish stopword list, default `\"nltk\"`, `\"none\"`. language two-letter ISO code language stopword list use_weights Optional, whether use weights within `svydesign` add_cols Optional, column (columns) dataframe contain information like retain (instance, dimension columnns splitting data comparison plots). manual optional boolean indicate manual list provided, `stopword_list = \"manual\"` can also instead used. manual_list manual list stopwords.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare_svydesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read In and format Finnish survey text responses from `svydesign` object — fst_prepare_svydesign","text":"dataframe Finnish text CoNLL-U format.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare_svydesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read In and format Finnish survey text responses from `svydesign` object — fst_prepare_svydesign","text":"`fst_prepare_svydesign()` produces dataframe containing Finnish survey text  responses CoNLL-U format stopwords optionally removed.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_prepare_svydesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read In and format Finnish survey text responses from `svydesign` object — fst_prepare_svydesign","text":"","code":"if (FALSE) { # \\dontrun{ i <- \"fsd_id\" svy_child <- survey::svydesign(id=~1, weights= ~paino, data = child) fst_prepare_svydesign(svy_child, question = \"q7\", id = i, use_weights = TRUE)  svy_d <- survey::svydesign(id = ~1, weights = ~paino, data =dev_coop) fst_prepare_svydesign(svy_d, question = \"q11_2\", id = i, add_cols = 'gender')  fst_prepare_svydesign(svy_d, 'q11_2', i, 'finnish-ftb', 'nltk', 'fi') unlink(\"finnish-ftb-ud-2.5-191206.udpipe\") unlink(\"finnish-tdt-ud-2.5-191206.udpipe\") } # }"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_print_available_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Find treebanks available for use — fst_print_available_models","title":"Find treebanks available for use — fst_print_available_models","text":"Find treebanks available use","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_print_available_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find treebanks available for use — fst_print_available_models","text":"","code":"fst_print_available_models(search = NULL)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_print_available_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find treebanks available for use — fst_print_available_models","text":"search optional string filtering list, name language English, eg. 'estonian'","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_print_available_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find treebanks available for use — fst_print_available_models","text":"List available treebanks, filtered","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_print_available_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find treebanks available for use — fst_print_available_models","text":"","code":"fst_print_available_models() #>   [1] \"afrikaans-afribooms\"        \"ancient_greek-perseus\"      #>   [3] \"ancient_greek-proiel\"       \"arabic-padt\"                #>   [5] \"armenian-armtdp\"            \"basque-bdt\"                 #>   [7] \"belarusian-hse\"             \"bulgarian-btb\"              #>   [9] \"buryat-bdt\"                 \"catalan-ancora\"             #>  [11] \"chinese-gsd\"                \"chinese-gsdsimp\"            #>  [13] \"classical_chinese-kyoto\"    \"coptic-scriptorium\"         #>  [15] \"croatian-set\"               \"czech-cac\"                  #>  [17] \"czech-cltt\"                 \"czech-fictree\"              #>  [19] \"czech-pdt\"                  \"danish-ddt\"                 #>  [21] \"dutch-alpino\"               \"dutch-lassysmall\"           #>  [23] \"english-ewt\"                \"english-gum\"                #>  [25] \"english-lines\"              \"english-partut\"             #>  [27] \"estonian-edt\"               \"estonian-ewt\"               #>  [29] \"finnish-ftb\"                \"finnish-tdt\"                #>  [31] \"french-gsd\"                 \"french-partut\"              #>  [33] \"french-sequoia\"             \"french-spoken\"              #>  [35] \"galician-ctg\"               \"galician-treegal\"           #>  [37] \"german-gsd\"                 \"german-hdt\"                 #>  [39] \"gothic-proiel\"              \"greek-gdt\"                  #>  [41] \"hebrew-htb\"                 \"hindi-hdtb\"                 #>  [43] \"hungarian-szeged\"           \"indonesian-gsd\"             #>  [45] \"irish-idt\"                  \"italian-isdt\"               #>  [47] \"italian-partut\"             \"italian-postwita\"           #>  [49] \"italian-twittiro\"           \"italian-vit\"                #>  [51] \"japanese-gsd\"               \"kazakh-ktb\"                 #>  [53] \"korean-gsd\"                 \"korean-kaist\"               #>  [55] \"kurmanji-mg\"                \"latin-ittb\"                 #>  [57] \"latin-perseus\"              \"latin-proiel\"               #>  [59] \"latvian-lvtb\"               \"lithuanian-alksnis\"         #>  [61] \"lithuanian-hse\"             \"maltese-mudt\"               #>  [63] \"marathi-ufal\"               \"north_sami-giella\"          #>  [65] \"norwegian-bokmaal\"          \"norwegian-nynorsk\"          #>  [67] \"norwegian-nynorsklia\"       \"old_church_slavonic-proiel\" #>  [69] \"old_french-srcmf\"           \"old_russian-torot\"          #>  [71] \"persian-seraji\"             \"polish-lfg\"                 #>  [73] \"polish-pdb\"                 \"polish-sz\"                  #>  [75] \"portuguese-bosque\"          \"portuguese-br\"              #>  [77] \"portuguese-gsd\"             \"romanian-nonstandard\"       #>  [79] \"romanian-rrt\"               \"russian-gsd\"                #>  [81] \"russian-syntagrus\"          \"russian-taiga\"              #>  [83] \"sanskrit-ufal\"              \"scottish_gaelic-arcosg\"     #>  [85] \"serbian-set\"                \"slovak-snk\"                 #>  [87] \"slovenian-ssj\"              \"slovenian-sst\"              #>  [89] \"spanish-ancora\"             \"spanish-gsd\"                #>  [91] \"swedish-lines\"              \"swedish-talbanken\"          #>  [93] \"tamil-ttb\"                  \"telugu-mtg\"                 #>  [95] \"turkish-imst\"               \"ukrainian-iu\"               #>  [97] \"upper_sorbian-ufal\"         \"urdu-udtb\"                  #>  [99] \"uyghur-udt\"                 \"vietnamese-vtb\"             #> [101] \"wolof-wtb\"                  fst_print_available_models(search = \"swedish\") #> [1] \"swedish-lines\"     \"swedish-talbanken\""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_rm_stop_punct.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Finnish stopwords and punctuation from CoNLL-U dataframe — fst_rm_stop_punct","title":"Remove Finnish stopwords and punctuation from CoNLL-U dataframe — fst_rm_stop_punct","text":"Removes stopwords punctuation dataframe containing Finnish survey text data already CoNLL-U format.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_rm_stop_punct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Finnish stopwords and punctuation from CoNLL-U dataframe — fst_rm_stop_punct","text":"","code":"fst_rm_stop_punct(   data,   stopword_list = \"nltk\",   language = \"fi\",   manual = FALSE,   manual_list = \"\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_rm_stop_punct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Finnish stopwords and punctuation from CoNLL-U dataframe — fst_rm_stop_punct","text":"data dataframe Finnish text CoNLL-U format. stopword_list valid stopword list, default `\"nltk\"`, `\"manual\"` can used indicate manual list provided, `\"none\"` want remove stopwords, known 'source' `stopwords::stopwords` language two-letter ISO code language stopword list manual optional boolean indicate manual list provided, `stopword_list = \"manual\"` can also instead used. manual_list manual list stopwords.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_rm_stop_punct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Finnish stopwords and punctuation from CoNLL-U dataframe — fst_rm_stop_punct","text":"dataframe text CoNLL-U format without stopwords  punctuation.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_rm_stop_punct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Finnish stopwords and punctuation from CoNLL-U dataframe — fst_rm_stop_punct","text":"","code":"if (FALSE) { # \\dontrun{ c <- fst_format(child, question = 'q7', id = 'fsd_id') fst_rm_stop_punct(c) fst_rm_stop_punct(c, stopword_list = \"snowball\") fst_rm_stop_punct(c, \"stopwords-iso\")  mlist <- c('en', 'et', 'ei', 'emme', 'ette', 'eivät', 'minä', 'minum') mlist2 <- \"en, et, ei, emme, ette, eivät, minä, minum\" fst_rm_stop_punct(c, manual = TRUE, manual_list = mlist) fst_rm_stop_punct(c, stopword_list = \"manual\", manual_list = mlist) unlink(\"finnish-ftb-ud-2.5-191206.udpipe\") } # }"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Summary Table — fst_summarise","title":"Make Summary Table — fst_summarise","text":"Creates summary table input CoNLL-U data provides response count proportion, total number words, number unique words, number unique lemmas.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Summary Table — fst_summarise","text":"","code":"fst_summarise(data, desc = \"All responses\")"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Summary Table — fst_summarise","text":"data dataframe text CoNLL-U format, optional additional columns. desc string describing responses table, default `\"responses\"`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Summary Table — fst_summarise","text":"dataframe summary information data including response  rate word counts.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Summary Table — fst_summarise","text":"","code":"fst_summarise(fst_child) #>     Description Respondents No Response Proportion Total Words Unique Words #> 1 All responses         413           0          1        1580          559 #>   Unique Lemmas #> 1           414 fst_summarise(fst_dev_coop, \"Q11_3\") #>   Description Respondents No Response Proportion Total Words Unique Words #> 1       Q11_3         945          25       0.97        4192         1132 #>   Unique Lemmas #> 1           994"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Make comparison summary — fst_summarise_compare","title":"Make comparison summary — fst_summarise_compare","text":"Compare text responses different groups participants. Data split based different values `field` column formatted data. Results shown within plots pane.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make comparison summary — fst_summarise_compare","text":"","code":"fst_summarise_compare(   data,   field,   exclude_nulls = FALSE,   rename_nulls = \"null_data\" )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make comparison summary — fst_summarise_compare","text":"data dataframe text CoNLL-U format additional `field` column splitting data. field Column `data` used splitting groups exclude_nulls Whether include NULLs `field` column, default `FALSE` rename_nulls fill NULL values `exclude_nulls = FALSE`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make comparison summary — fst_summarise_compare","text":"Summary table responses groups.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make comparison summary — fst_summarise_compare","text":"","code":"fst_summarise_compare(fst_child, 'gender') #>    Description Respondents No Response Proportion Total Words Unique Words #>         <char>       <int>       <int>      <num>       <int>        <int> #> 1:         boy         212           0          1         721          334 #> 2:        girl         201           0          1         859          357 #>    Unique Lemmas #>            <int> #> 1:           252 #> 2:           270 fst_summarise_compare(fst_dev_coop, 'gender') #>    Description Respondents No Response Proportion Total Words Unique Words #>         <char>       <int>       <int>      <num>       <int>        <int> #> 1:      Female         673          13       0.98        2993          823 #> 2:        Male         183           8       0.96         795          383 #> 3:   null_data          89           4       0.96         404          225 #>    Unique Lemmas #>            <int> #> 1:           722 #> 2:           354 #> 3:           208"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_short.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Simple Summary Table — fst_summarise_short","title":"Make Simple Summary Table — fst_summarise_short","text":"Creates summary table input CoNLL-U data provides total number words, number unique words, number unique lemmas.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_short.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Simple Summary Table — fst_summarise_short","text":"","code":"fst_summarise_short(data)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_short.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Simple Summary Table — fst_summarise_short","text":"data dataframe text CoNLL-U format, optional additional columns.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_short.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Simple Summary Table — fst_summarise_short","text":"dataframe summary information word counts data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_summarise_short.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Simple Summary Table — fst_summarise_short","text":"","code":"fst_summarise_short(fst_child) #>   Respondents Total Words Unique Words Unique Lemmas #> 1         413        1580          559           414 fst_summarise_short(fst_dev_coop) #>   Respondents Total Words Unique Words Unique Lemmas #> 1         945        4192         1132           994"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_use_svydesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Add `svydesign` weights to CoNLL-U data — fst_use_svydesign","title":"Add `svydesign` weights to CoNLL-U data — fst_use_svydesign","text":"function takes data CoNLL-U format `svydesign` (`survey` package) object weights merges weights, additional columns formatted data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_use_svydesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add `svydesign` weights to CoNLL-U data — fst_use_svydesign","text":"","code":"fst_use_svydesign(data, svydesign, id, add_cols = NULL, add_weights = TRUE)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_use_svydesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add `svydesign` weights to CoNLL-U data — fst_use_svydesign","text":"data dataframe text CoNLL-U format, optional additional columns. svydesign `svydesign` object containing raw data produced `data` id ID column raw data, must match `docid` formatted `data` add_cols Optional, column (columns) dataframe contain information need (instance, covariate column splitting data comparison plots). add_weights Optional, boolean whether add weights svydesign object, default `TRUE`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_use_svydesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add `svydesign` weights to CoNLL-U data — fst_use_svydesign","text":"dataframe text CoNLL-U format plus `'weight'` column  optional columns","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_use_svydesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add `svydesign` weights to CoNLL-U data — fst_use_svydesign","text":"","code":"svy_child <- survey::svydesign(id=~1, weights= ~paino, data = child) fst_use_svydesign(data = fst_child_2, svydesign = svy_child, id = 'fsd_id')  svy_dev <- survey::svydesign(id = ~1, weights = ~paino, data = dev_coop) fst_use_svydesign(data = fst_dev_coop_2, svydesign = svy_dev, id = 'fsd_id')"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_wordcloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Wordcloud — fst_wordcloud","title":"Make Wordcloud — fst_wordcloud","text":"Creates wordcloud CoNLL-U data frequently-occurring words. Optionally, weights can provided either `weight` column formatted data, `svydesign` object raw (preformatted) data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_wordcloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Wordcloud — fst_wordcloud","text":"","code":"fst_wordcloud(   data,   pos_filter = NULL,   max = 100,   use_svydesign_weights = FALSE,   id = \"\",   svydesign = NULL,   use_column_weights = FALSE )"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_wordcloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Wordcloud — fst_wordcloud","text":"data dataframe text CoNLL-U format, optional additional columns. pos_filter List UPOS tags inclusion, default `NULL` means word types included. max maximum number words display, default `100`. use_svydesign_weights Option weight words wordcloud using weights `svydesign` containing raw data, default `FALSE` id ID column raw data, required `use_svydesign_weights = TRUE` must match `docid` formatted `data`. svydesign `svydesign` contains raw data weights, required `use_svydesign_weights = TRUE`. use_column_weights Option weight words wordcloud using weights  formatted data includes addition `weight` column, default `FALSE`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_wordcloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Wordcloud — fst_wordcloud","text":"wordcloud data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/fst_wordcloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Wordcloud — fst_wordcloud","text":"","code":"fst_wordcloud(fst_child)  fst_wordcloud(fst_child, pos_filter = c(\"NOUN\", \"VERB\", \"ADJ\", \"ADV\"))  fst_wordcloud(fst_child, pos_filter = 'NOUN, VERB, ADJ')  fst_wordcloud(fst_child, use_column_weights = TRUE)  i <- 'fsd_id' c <- fst_child_2 s <- survey::svydesign(id=~1, weights= ~paino, data = child) fst_wordcloud(c, use_svydesign_weights = TRUE, id = i, svydesign = s)"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/runDemo.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Shiny App Demo — runDemo","title":"Run Shiny App Demo — runDemo","text":"Run Shiny App Demo","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/runDemo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Shiny App Demo — runDemo","text":"","code":"runDemo()"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/runDemo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Shiny App Demo — runDemo","text":"launches RShiny demo","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/reference/runDemo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Shiny App Demo — runDemo","text":"","code":"if (FALSE) { # \\dontrun{   runDemo() } # }"},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"finnsurveytext-210","dir":"Changelog","previous_headings":"","what":"finnsurveytext 2.1.0","title":"finnsurveytext 2.1.0","text":"CRAN release: 2024-11-08 New function fst_print_available_models() print models available udpipe package Bug fix fst_find_stopwords - remove hardcoded language fi. Bug fix fst_pos set NAs count 0 New English sample data","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"finnsurveytext-200","dir":"Changelog","previous_headings":"","what":"finnsurveytext 2.0.0","title":"finnsurveytext 2.0.0","text":"CRAN release: 2024-08-27","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"id_01_prepare-andb_prepare_svydesign-2-0-0","dir":"Changelog","previous_headings":"","what":"01_prepare and 01b_prepare_svydesign","title":"finnsurveytext 2.0.0","text":"fst_format() renamed fst_format_conllu(). fst_prepare() renamed fst_prepare_conllu(). fst_format() fst_prepare() new parameters weights = NULL add_cols = NULL, parameter field renamed question fst_rm_stop_punct() now enables user-input list stopwords. fst_format_svydesign() fst_prepare_svydesign() introduced.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"id_02_data_exploration-2-0-0","dir":"Changelog","previous_headings":"","what":"02_data_exploration","title":"finnsurveytext 2.0.0","text":"fst_freq_table() renamed fst_get_top_words() reflect naming conventions. fst_ngrams_table() renamed fst_get_top_ngrams() reflect naming conventions. Within fst_freq_table(), fst_ngrams_table(), fst_freq(), fst_ngrams(), fst_wordcloud() parameters enable weights svydesign object additional weights column formatted data (use_svydesign_weights = FALSE, id = ““, svydesign = NULL, use_column_weights = FALSE). pos_filter parameter now accepts strings (addition lists strings).","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"id_03_concept_network-2-0-0","dir":"Changelog","previous_headings":"","what":"03_concept_network","title":"finnsurveytext 2.0.0","text":"(major changes.)","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"id_04_comparison_functions-2-0-0","dir":"Changelog","previous_headings":"","what":"04_comparison_functions","title":"finnsurveytext 2.0.0","text":"Data now split groups one dataset (data) via parameter called ‘field’ column formatted data splits groups. different value column used create group named value. fst_freq_compare(), fst_ngrams_compare(), fst_pos_compare(), fst_summarise_compare(), fst_length_compare() fst_comparison_cloud() now parameters enable inclusion/exclusion null values splitting data groups (exclude_nulls = FALSE, rename_nulls = ‘null_data’) Default ‘norm’ parameter now NULL support use weights. fst_comparison_cloud() created. fst_freq_compare(), fst_ngrams_compare() fst_comparison_cloud() now parameters enable weights svydesign object additional weights column formatted data (use_svydesign_weights = FALSE, id = ““, svydesign = NULL, use_column_weights = FALSE). fst_ngrams_compare_plot() new parameter title_size = 20. fst_freq_compare(), fst_ngrams_compare() new parameters title_size = 20 subtitle_size = 15.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"id_05_comparison_concept_network-2-0-0","dir":"Changelog","previous_headings":"","what":"05_comparison_concept_network","title":"finnsurveytext 2.0.0","text":", data split parameter ‘field’, parameters inclusion/exclusion null values ‘field’, default norm = NULL, title_size subtitle_size parameters. fst_cn_get_unique() renamed fst_cn_get_unique _separate() new function fst_cn_get_unique() created finds unique ngrams list ngrams tables.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"data-2-0-0","dir":"Changelog","previous_headings":"","what":"Data","title":"finnsurveytext 2.0.0","text":"New simplified sample data. “child”: Open-ended questions background variables Child Barometer survey. “dev_coop*: Open-ended questions background variables Development Cooperation survey. fst_child: Formatted data b/g variables weights. fst_child_2: Formatted data without b/g variables weights. fst_dev_coop: Formatted data b/g variables weights. fst_dev_coop_2: Formatted data without b/g variables weights. Removed data: child_barometer_data, conllu_cb_bullying, conllu_cb_bullying_iso, conllu_dev_q11_1_f_nltk, conllu_dev_q11_1_f, conllu_dev_q11_1_m_nltk, conllu_dev_q11_1_m, conllu_dev_q11_1_na_nltk, conllu_dev_q11_1_na, conllu_dev_q11_1_nltk, conllu_dev_q11_1, conllu_dev_q11_2_nltk, conllu_dev_q11_2, conllu_dev_q11_3_nltk, conllu_dev_q11_3, dev_data_f, dev_data_m, dev_data_na, dev_data.","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"finnsurveytext-100","dir":"Changelog","previous_headings":"","what":"finnsurveytext 1.0.0","title":"finnsurveytext 1.0.0","text":"CRAN release: 2024-02-16","code":""},{"path":"https://dariah-fi-survey-concept-network.github.io/finnsurveytext/news/index.html","id":"finnsurveytext-010","dir":"Changelog","previous_headings":"","what":"finnsurveytext 0.1.0","title":"finnsurveytext 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
